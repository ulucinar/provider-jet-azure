/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this ActiveDirectoryDomainService.
func (mg *ActiveDirectoryDomainService) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ActiveDirectoryDomainService.
func (mg *ActiveDirectoryDomainService) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ActiveDirectoryDomainService.
func (mg *ActiveDirectoryDomainService) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ActiveDirectoryDomainService.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ActiveDirectoryDomainService) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ActiveDirectoryDomainService.
func (mg *ActiveDirectoryDomainService) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ActiveDirectoryDomainService.
func (mg *ActiveDirectoryDomainService) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ActiveDirectoryDomainService.
func (mg *ActiveDirectoryDomainService) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ActiveDirectoryDomainService.
func (mg *ActiveDirectoryDomainService) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ActiveDirectoryDomainService.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ActiveDirectoryDomainService) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ActiveDirectoryDomainService.
func (mg *ActiveDirectoryDomainService) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ActiveDirectoryDomainServiceReplicaSet.
func (mg *ActiveDirectoryDomainServiceReplicaSet) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ActiveDirectoryDomainServiceReplicaSet.
func (mg *ActiveDirectoryDomainServiceReplicaSet) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ActiveDirectoryDomainServiceReplicaSet.
func (mg *ActiveDirectoryDomainServiceReplicaSet) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ActiveDirectoryDomainServiceReplicaSet.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ActiveDirectoryDomainServiceReplicaSet) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ActiveDirectoryDomainServiceReplicaSet.
func (mg *ActiveDirectoryDomainServiceReplicaSet) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ActiveDirectoryDomainServiceReplicaSet.
func (mg *ActiveDirectoryDomainServiceReplicaSet) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ActiveDirectoryDomainServiceReplicaSet.
func (mg *ActiveDirectoryDomainServiceReplicaSet) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ActiveDirectoryDomainServiceReplicaSet.
func (mg *ActiveDirectoryDomainServiceReplicaSet) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ActiveDirectoryDomainServiceReplicaSet.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ActiveDirectoryDomainServiceReplicaSet) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ActiveDirectoryDomainServiceReplicaSet.
func (mg *ActiveDirectoryDomainServiceReplicaSet) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
