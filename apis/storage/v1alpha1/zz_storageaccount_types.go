/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type ActiveDirectoryObservation struct {
}

type ActiveDirectoryParameters struct {

	// +kubebuilder:validation:Required
	DomainGUID string `json:"domainGuid" tf:"domain_guid"`

	// +kubebuilder:validation:Required
	DomainName string `json:"domainName" tf:"domain_name"`

	// +kubebuilder:validation:Required
	DomainSid string `json:"domainSid" tf:"domain_sid"`

	// +kubebuilder:validation:Required
	ForestName string `json:"forestName" tf:"forest_name"`

	// +kubebuilder:validation:Required
	NetbiosDomainName string `json:"netbiosDomainName" tf:"netbios_domain_name"`

	// +kubebuilder:validation:Required
	StorageSid string `json:"storageSid" tf:"storage_sid"`
}

type AzureFilesAuthenticationObservation struct {
}

type AzureFilesAuthenticationParameters struct {

	// +kubebuilder:validation:Optional
	ActiveDirectory []ActiveDirectoryParameters `json:"activeDirectory,omitempty" tf:"active_directory"`

	// +kubebuilder:validation:Required
	DirectoryType string `json:"directoryType" tf:"directory_type"`
}

type BlobPropertiesObservation struct {
}

type BlobPropertiesParameters struct {

	// +kubebuilder:validation:Optional
	ChangeFeedEnabled *bool `json:"changeFeedEnabled,omitempty" tf:"change_feed_enabled"`

	// +kubebuilder:validation:Optional
	ContainerDeleteRetentionPolicy []ContainerDeleteRetentionPolicyParameters `json:"containerDeleteRetentionPolicy,omitempty" tf:"container_delete_retention_policy"`

	// +kubebuilder:validation:Optional
	CorsRule []CorsRuleParameters `json:"corsRule,omitempty" tf:"cors_rule"`

	// +kubebuilder:validation:Optional
	DefaultServiceVersion *string `json:"defaultServiceVersion,omitempty" tf:"default_service_version"`

	// +kubebuilder:validation:Optional
	DeleteRetentionPolicy []DeleteRetentionPolicyParameters `json:"deleteRetentionPolicy,omitempty" tf:"delete_retention_policy"`

	// +kubebuilder:validation:Optional
	LastAccessTimeEnabled *bool `json:"lastAccessTimeEnabled,omitempty" tf:"last_access_time_enabled"`

	// +kubebuilder:validation:Optional
	VersioningEnabled *bool `json:"versioningEnabled,omitempty" tf:"versioning_enabled"`
}

type ContainerDeleteRetentionPolicyObservation struct {
}

type ContainerDeleteRetentionPolicyParameters struct {

	// +kubebuilder:validation:Optional
	Days *int64 `json:"days,omitempty" tf:"days"`
}

type CorsRuleObservation struct {
}

type CorsRuleParameters struct {

	// +kubebuilder:validation:Required
	AllowedHeaders []string `json:"allowedHeaders" tf:"allowed_headers"`

	// +kubebuilder:validation:Required
	AllowedMethods []string `json:"allowedMethods" tf:"allowed_methods"`

	// +kubebuilder:validation:Required
	AllowedOrigins []string `json:"allowedOrigins" tf:"allowed_origins"`

	// +kubebuilder:validation:Required
	ExposedHeaders []string `json:"exposedHeaders" tf:"exposed_headers"`

	// +kubebuilder:validation:Required
	MaxAgeInSeconds int64 `json:"maxAgeInSeconds" tf:"max_age_in_seconds"`
}

type CustomDomainObservation struct {
}

type CustomDomainParameters struct {

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Optional
	UseSubdomain *bool `json:"useSubdomain,omitempty" tf:"use_subdomain"`
}

type DeleteRetentionPolicyObservation struct {
}

type DeleteRetentionPolicyParameters struct {

	// +kubebuilder:validation:Optional
	Days *int64 `json:"days,omitempty" tf:"days"`
}

type HourMetricsObservation struct {
}

type HourMetricsParameters struct {

	// +kubebuilder:validation:Required
	Enabled bool `json:"enabled" tf:"enabled"`

	// +kubebuilder:validation:Optional
	IncludeApis *bool `json:"includeApis,omitempty" tf:"include_apis"`

	// +kubebuilder:validation:Optional
	RetentionPolicyDays *int64 `json:"retentionPolicyDays,omitempty" tf:"retention_policy_days"`

	// +kubebuilder:validation:Required
	Version string `json:"version" tf:"version"`
}

type IdentityObservation struct {
	PrincipalID string `json:"principalId,omitempty" tf:"principal_id"`

	TenantID string `json:"tenantId,omitempty" tf:"tenant_id"`
}

type IdentityParameters struct {

	// +kubebuilder:validation:Optional
	IdentityIds []string `json:"identityIds,omitempty" tf:"identity_ids"`

	// +kubebuilder:validation:Required
	Type string `json:"type" tf:"type"`
}

type LoggingObservation struct {
}

type LoggingParameters struct {

	// +kubebuilder:validation:Required
	Delete bool `json:"delete" tf:"delete"`

	// +kubebuilder:validation:Required
	Read bool `json:"read" tf:"read"`

	// +kubebuilder:validation:Optional
	RetentionPolicyDays *int64 `json:"retentionPolicyDays,omitempty" tf:"retention_policy_days"`

	// +kubebuilder:validation:Required
	Version string `json:"version" tf:"version"`

	// +kubebuilder:validation:Required
	Write bool `json:"write" tf:"write"`
}

type MinuteMetricsObservation struct {
}

type MinuteMetricsParameters struct {

	// +kubebuilder:validation:Required
	Enabled bool `json:"enabled" tf:"enabled"`

	// +kubebuilder:validation:Optional
	IncludeApis *bool `json:"includeApis,omitempty" tf:"include_apis"`

	// +kubebuilder:validation:Optional
	RetentionPolicyDays *int64 `json:"retentionPolicyDays,omitempty" tf:"retention_policy_days"`

	// +kubebuilder:validation:Required
	Version string `json:"version" tf:"version"`
}

type NetworkRulesObservation struct {
}

type NetworkRulesParameters struct {

	// +kubebuilder:validation:Optional
	Bypass []string `json:"bypass,omitempty" tf:"bypass"`

	// +kubebuilder:validation:Required
	DefaultAction string `json:"defaultAction" tf:"default_action"`

	// +kubebuilder:validation:Optional
	IPRules []string `json:"ipRules,omitempty" tf:"ip_rules"`

	// +kubebuilder:validation:Optional
	PrivateLinkAccess []PrivateLinkAccessParameters `json:"privateLinkAccess,omitempty" tf:"private_link_access"`

	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetIds []string `json:"virtualNetworkSubnetIds,omitempty" tf:"virtual_network_subnet_ids"`
}

type PrivateLinkAccessObservation struct {
}

type PrivateLinkAccessParameters struct {

	// +kubebuilder:validation:Required
	EndpointResourceID string `json:"endpointResourceId" tf:"endpoint_resource_id"`

	// +kubebuilder:validation:Optional
	EndpointTenantID *string `json:"endpointTenantId,omitempty" tf:"endpoint_tenant_id"`
}

type QueuePropertiesCorsRuleObservation struct {
}

type QueuePropertiesCorsRuleParameters struct {

	// +kubebuilder:validation:Required
	AllowedHeaders []string `json:"allowedHeaders" tf:"allowed_headers"`

	// +kubebuilder:validation:Required
	AllowedMethods []string `json:"allowedMethods" tf:"allowed_methods"`

	// +kubebuilder:validation:Required
	AllowedOrigins []string `json:"allowedOrigins" tf:"allowed_origins"`

	// +kubebuilder:validation:Required
	ExposedHeaders []string `json:"exposedHeaders" tf:"exposed_headers"`

	// +kubebuilder:validation:Required
	MaxAgeInSeconds int64 `json:"maxAgeInSeconds" tf:"max_age_in_seconds"`
}

type QueuePropertiesObservation struct {
}

type QueuePropertiesParameters struct {

	// +kubebuilder:validation:Optional
	CorsRule []QueuePropertiesCorsRuleParameters `json:"corsRule,omitempty" tf:"cors_rule"`

	// +kubebuilder:validation:Optional
	HourMetrics []HourMetricsParameters `json:"hourMetrics,omitempty" tf:"hour_metrics"`

	// +kubebuilder:validation:Optional
	Logging []LoggingParameters `json:"logging,omitempty" tf:"logging"`

	// +kubebuilder:validation:Optional
	MinuteMetrics []MinuteMetricsParameters `json:"minuteMetrics,omitempty" tf:"minute_metrics"`
}

type RetentionPolicyObservation struct {
}

type RetentionPolicyParameters struct {

	// +kubebuilder:validation:Optional
	Days *int64 `json:"days,omitempty" tf:"days"`
}

type RoutingObservation struct {
}

type RoutingParameters struct {

	// +kubebuilder:validation:Optional
	Choice *string `json:"choice,omitempty" tf:"choice"`

	// +kubebuilder:validation:Optional
	PublishInternetEndpoints *bool `json:"publishInternetEndpoints,omitempty" tf:"publish_internet_endpoints"`

	// +kubebuilder:validation:Optional
	PublishMicrosoftEndpoints *bool `json:"publishMicrosoftEndpoints,omitempty" tf:"publish_microsoft_endpoints"`
}

type SharePropertiesCorsRuleObservation struct {
}

type SharePropertiesCorsRuleParameters struct {

	// +kubebuilder:validation:Required
	AllowedHeaders []string `json:"allowedHeaders" tf:"allowed_headers"`

	// +kubebuilder:validation:Required
	AllowedMethods []string `json:"allowedMethods" tf:"allowed_methods"`

	// +kubebuilder:validation:Required
	AllowedOrigins []string `json:"allowedOrigins" tf:"allowed_origins"`

	// +kubebuilder:validation:Required
	ExposedHeaders []string `json:"exposedHeaders" tf:"exposed_headers"`

	// +kubebuilder:validation:Required
	MaxAgeInSeconds int64 `json:"maxAgeInSeconds" tf:"max_age_in_seconds"`
}

type SharePropertiesObservation struct {
}

type SharePropertiesParameters struct {

	// +kubebuilder:validation:Optional
	CorsRule []SharePropertiesCorsRuleParameters `json:"corsRule,omitempty" tf:"cors_rule"`

	// +kubebuilder:validation:Optional
	RetentionPolicy []RetentionPolicyParameters `json:"retentionPolicy,omitempty" tf:"retention_policy"`

	// +kubebuilder:validation:Optional
	Smb []SmbParameters `json:"smb,omitempty" tf:"smb"`
}

type SmbObservation struct {
}

type SmbParameters struct {

	// +kubebuilder:validation:Optional
	AuthenticationTypes []string `json:"authenticationTypes,omitempty" tf:"authentication_types"`

	// +kubebuilder:validation:Optional
	ChannelEncryptionType []string `json:"channelEncryptionType,omitempty" tf:"channel_encryption_type"`

	// +kubebuilder:validation:Optional
	KerberosTicketEncryptionType []string `json:"kerberosTicketEncryptionType,omitempty" tf:"kerberos_ticket_encryption_type"`

	// +kubebuilder:validation:Optional
	Versions []string `json:"versions,omitempty" tf:"versions"`
}

type StaticWebsiteObservation struct {
}

type StaticWebsiteParameters struct {

	// +kubebuilder:validation:Optional
	Error404Document *string `json:"error404Document,omitempty" tf:"error_404_document"`

	// +kubebuilder:validation:Optional
	IndexDocument *string `json:"indexDocument,omitempty" tf:"index_document"`
}

type StorageAccountObservation struct {
	PrimaryAccessKey string `json:"primaryAccessKey,omitempty" tf:"primary_access_key"`

	PrimaryBlobConnectionString string `json:"primaryBlobConnectionString,omitempty" tf:"primary_blob_connection_string"`

	PrimaryBlobEndpoint string `json:"primaryBlobEndpoint,omitempty" tf:"primary_blob_endpoint"`

	PrimaryBlobHost string `json:"primaryBlobHost,omitempty" tf:"primary_blob_host"`

	PrimaryConnectionString string `json:"primaryConnectionString,omitempty" tf:"primary_connection_string"`

	PrimaryDfsEndpoint string `json:"primaryDfsEndpoint,omitempty" tf:"primary_dfs_endpoint"`

	PrimaryDfsHost string `json:"primaryDfsHost,omitempty" tf:"primary_dfs_host"`

	PrimaryFileEndpoint string `json:"primaryFileEndpoint,omitempty" tf:"primary_file_endpoint"`

	PrimaryFileHost string `json:"primaryFileHost,omitempty" tf:"primary_file_host"`

	PrimaryLocation string `json:"primaryLocation,omitempty" tf:"primary_location"`

	PrimaryQueueEndpoint string `json:"primaryQueueEndpoint,omitempty" tf:"primary_queue_endpoint"`

	PrimaryQueueHost string `json:"primaryQueueHost,omitempty" tf:"primary_queue_host"`

	PrimaryTableEndpoint string `json:"primaryTableEndpoint,omitempty" tf:"primary_table_endpoint"`

	PrimaryTableHost string `json:"primaryTableHost,omitempty" tf:"primary_table_host"`

	PrimaryWebEndpoint string `json:"primaryWebEndpoint,omitempty" tf:"primary_web_endpoint"`

	PrimaryWebHost string `json:"primaryWebHost,omitempty" tf:"primary_web_host"`

	SecondaryAccessKey string `json:"secondaryAccessKey,omitempty" tf:"secondary_access_key"`

	SecondaryBlobConnectionString string `json:"secondaryBlobConnectionString,omitempty" tf:"secondary_blob_connection_string"`

	SecondaryBlobEndpoint string `json:"secondaryBlobEndpoint,omitempty" tf:"secondary_blob_endpoint"`

	SecondaryBlobHost string `json:"secondaryBlobHost,omitempty" tf:"secondary_blob_host"`

	SecondaryConnectionString string `json:"secondaryConnectionString,omitempty" tf:"secondary_connection_string"`

	SecondaryDfsEndpoint string `json:"secondaryDfsEndpoint,omitempty" tf:"secondary_dfs_endpoint"`

	SecondaryDfsHost string `json:"secondaryDfsHost,omitempty" tf:"secondary_dfs_host"`

	SecondaryFileEndpoint string `json:"secondaryFileEndpoint,omitempty" tf:"secondary_file_endpoint"`

	SecondaryFileHost string `json:"secondaryFileHost,omitempty" tf:"secondary_file_host"`

	SecondaryLocation string `json:"secondaryLocation,omitempty" tf:"secondary_location"`

	SecondaryQueueEndpoint string `json:"secondaryQueueEndpoint,omitempty" tf:"secondary_queue_endpoint"`

	SecondaryQueueHost string `json:"secondaryQueueHost,omitempty" tf:"secondary_queue_host"`

	SecondaryTableEndpoint string `json:"secondaryTableEndpoint,omitempty" tf:"secondary_table_endpoint"`

	SecondaryTableHost string `json:"secondaryTableHost,omitempty" tf:"secondary_table_host"`

	SecondaryWebEndpoint string `json:"secondaryWebEndpoint,omitempty" tf:"secondary_web_endpoint"`

	SecondaryWebHost string `json:"secondaryWebHost,omitempty" tf:"secondary_web_host"`
}

type StorageAccountParameters struct {

	// +kubebuilder:validation:Optional
	AccessTier *string `json:"accessTier,omitempty" tf:"access_tier"`

	// +kubebuilder:validation:Optional
	AccountKind *string `json:"accountKind,omitempty" tf:"account_kind"`

	// +kubebuilder:validation:Required
	AccountReplicationType string `json:"accountReplicationType" tf:"account_replication_type"`

	// +kubebuilder:validation:Required
	AccountTier string `json:"accountTier" tf:"account_tier"`

	// +kubebuilder:validation:Optional
	AllowBlobPublicAccess *bool `json:"allowBlobPublicAccess,omitempty" tf:"allow_blob_public_access"`

	// +kubebuilder:validation:Optional
	AzureFilesAuthentication []AzureFilesAuthenticationParameters `json:"azureFilesAuthentication,omitempty" tf:"azure_files_authentication"`

	// +kubebuilder:validation:Optional
	BlobProperties []BlobPropertiesParameters `json:"blobProperties,omitempty" tf:"blob_properties"`

	// +kubebuilder:validation:Optional
	CustomDomain []CustomDomainParameters `json:"customDomain,omitempty" tf:"custom_domain"`

	// +kubebuilder:validation:Optional
	EnableHTTPSTrafficOnly *bool `json:"enableHttpsTrafficOnly,omitempty" tf:"enable_https_traffic_only"`

	// +kubebuilder:validation:Optional
	Identity []IdentityParameters `json:"identity,omitempty" tf:"identity"`

	// +kubebuilder:validation:Optional
	IsHnsEnabled *bool `json:"isHnsEnabled,omitempty" tf:"is_hns_enabled"`

	// +kubebuilder:validation:Optional
	LargeFileShareEnabled *bool `json:"largeFileShareEnabled,omitempty" tf:"large_file_share_enabled"`

	// +kubebuilder:validation:Required
	Location string `json:"location" tf:"location"`

	// +kubebuilder:validation:Optional
	MinTLSVersion *string `json:"minTlsVersion,omitempty" tf:"min_tls_version"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Optional
	NetworkRules []NetworkRulesParameters `json:"networkRules,omitempty" tf:"network_rules"`

	// +kubebuilder:validation:Optional
	Nfsv3Enabled *bool `json:"nfsv3Enabled,omitempty" tf:"nfsv3_enabled"`

	// +kubebuilder:validation:Optional
	QueueProperties []QueuePropertiesParameters `json:"queueProperties,omitempty" tf:"queue_properties"`

	// +kubebuilder:validation:Required
	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name"`

	// +kubebuilder:validation:Optional
	Routing []RoutingParameters `json:"routing,omitempty" tf:"routing"`

	// +kubebuilder:validation:Optional
	ShareProperties []SharePropertiesParameters `json:"shareProperties,omitempty" tf:"share_properties"`

	// +kubebuilder:validation:Optional
	SharedAccessKeyEnabled *bool `json:"sharedAccessKeyEnabled,omitempty" tf:"shared_access_key_enabled"`

	// +kubebuilder:validation:Optional
	StaticWebsite []StaticWebsiteParameters `json:"staticWebsite,omitempty" tf:"static_website"`

	// +kubebuilder:validation:Optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags"`
}

// StorageAccountSpec defines the desired state of StorageAccount
type StorageAccountSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       StorageAccountParameters `json:"forProvider"`
}

// StorageAccountStatus defines the observed state of StorageAccount.
type StorageAccountStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          StorageAccountObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// StorageAccount is the Schema for the StorageAccounts API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type StorageAccount struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              StorageAccountSpec   `json:"spec"`
	Status            StorageAccountStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// StorageAccountList contains a list of StorageAccounts
type StorageAccountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []StorageAccount `json:"items"`
}

// Repository type metadata.
var (
	StorageAccountKind             = "StorageAccount"
	StorageAccountGroupKind        = schema.GroupKind{Group: Group, Kind: StorageAccountKind}.String()
	StorageAccountKindAPIVersion   = StorageAccountKind + "." + GroupVersion.String()
	StorageAccountGroupVersionKind = GroupVersion.WithKind(StorageAccountKind)
)

func init() {
	SchemeBuilder.Register(&StorageAccount{}, &StorageAccountList{})
}
