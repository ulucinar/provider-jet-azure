/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this HdinsightHadoopCluster.
func (mg *HdinsightHadoopCluster) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this HdinsightHadoopCluster.
func (mg *HdinsightHadoopCluster) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this HdinsightHadoopCluster.
func (mg *HdinsightHadoopCluster) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this HdinsightHadoopCluster.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *HdinsightHadoopCluster) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this HdinsightHadoopCluster.
func (mg *HdinsightHadoopCluster) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this HdinsightHadoopCluster.
func (mg *HdinsightHadoopCluster) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this HdinsightHadoopCluster.
func (mg *HdinsightHadoopCluster) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this HdinsightHadoopCluster.
func (mg *HdinsightHadoopCluster) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this HdinsightHadoopCluster.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *HdinsightHadoopCluster) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this HdinsightHadoopCluster.
func (mg *HdinsightHadoopCluster) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this HdinsightHbaseCluster.
func (mg *HdinsightHbaseCluster) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this HdinsightHbaseCluster.
func (mg *HdinsightHbaseCluster) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this HdinsightHbaseCluster.
func (mg *HdinsightHbaseCluster) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this HdinsightHbaseCluster.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *HdinsightHbaseCluster) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this HdinsightHbaseCluster.
func (mg *HdinsightHbaseCluster) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this HdinsightHbaseCluster.
func (mg *HdinsightHbaseCluster) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this HdinsightHbaseCluster.
func (mg *HdinsightHbaseCluster) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this HdinsightHbaseCluster.
func (mg *HdinsightHbaseCluster) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this HdinsightHbaseCluster.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *HdinsightHbaseCluster) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this HdinsightHbaseCluster.
func (mg *HdinsightHbaseCluster) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this HdinsightInteractiveQueryCluster.
func (mg *HdinsightInteractiveQueryCluster) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this HdinsightInteractiveQueryCluster.
func (mg *HdinsightInteractiveQueryCluster) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this HdinsightInteractiveQueryCluster.
func (mg *HdinsightInteractiveQueryCluster) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this HdinsightInteractiveQueryCluster.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *HdinsightInteractiveQueryCluster) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this HdinsightInteractiveQueryCluster.
func (mg *HdinsightInteractiveQueryCluster) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this HdinsightInteractiveQueryCluster.
func (mg *HdinsightInteractiveQueryCluster) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this HdinsightInteractiveQueryCluster.
func (mg *HdinsightInteractiveQueryCluster) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this HdinsightInteractiveQueryCluster.
func (mg *HdinsightInteractiveQueryCluster) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this HdinsightInteractiveQueryCluster.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *HdinsightInteractiveQueryCluster) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this HdinsightInteractiveQueryCluster.
func (mg *HdinsightInteractiveQueryCluster) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this HdinsightKafkaCluster.
func (mg *HdinsightKafkaCluster) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this HdinsightKafkaCluster.
func (mg *HdinsightKafkaCluster) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this HdinsightKafkaCluster.
func (mg *HdinsightKafkaCluster) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this HdinsightKafkaCluster.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *HdinsightKafkaCluster) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this HdinsightKafkaCluster.
func (mg *HdinsightKafkaCluster) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this HdinsightKafkaCluster.
func (mg *HdinsightKafkaCluster) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this HdinsightKafkaCluster.
func (mg *HdinsightKafkaCluster) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this HdinsightKafkaCluster.
func (mg *HdinsightKafkaCluster) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this HdinsightKafkaCluster.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *HdinsightKafkaCluster) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this HdinsightKafkaCluster.
func (mg *HdinsightKafkaCluster) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this HdinsightMlServicesCluster.
func (mg *HdinsightMlServicesCluster) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this HdinsightMlServicesCluster.
func (mg *HdinsightMlServicesCluster) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this HdinsightMlServicesCluster.
func (mg *HdinsightMlServicesCluster) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this HdinsightMlServicesCluster.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *HdinsightMlServicesCluster) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this HdinsightMlServicesCluster.
func (mg *HdinsightMlServicesCluster) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this HdinsightMlServicesCluster.
func (mg *HdinsightMlServicesCluster) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this HdinsightMlServicesCluster.
func (mg *HdinsightMlServicesCluster) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this HdinsightMlServicesCluster.
func (mg *HdinsightMlServicesCluster) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this HdinsightMlServicesCluster.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *HdinsightMlServicesCluster) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this HdinsightMlServicesCluster.
func (mg *HdinsightMlServicesCluster) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this HdinsightRserverCluster.
func (mg *HdinsightRserverCluster) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this HdinsightRserverCluster.
func (mg *HdinsightRserverCluster) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this HdinsightRserverCluster.
func (mg *HdinsightRserverCluster) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this HdinsightRserverCluster.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *HdinsightRserverCluster) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this HdinsightRserverCluster.
func (mg *HdinsightRserverCluster) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this HdinsightRserverCluster.
func (mg *HdinsightRserverCluster) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this HdinsightRserverCluster.
func (mg *HdinsightRserverCluster) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this HdinsightRserverCluster.
func (mg *HdinsightRserverCluster) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this HdinsightRserverCluster.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *HdinsightRserverCluster) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this HdinsightRserverCluster.
func (mg *HdinsightRserverCluster) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this HdinsightSparkCluster.
func (mg *HdinsightSparkCluster) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this HdinsightSparkCluster.
func (mg *HdinsightSparkCluster) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this HdinsightSparkCluster.
func (mg *HdinsightSparkCluster) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this HdinsightSparkCluster.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *HdinsightSparkCluster) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this HdinsightSparkCluster.
func (mg *HdinsightSparkCluster) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this HdinsightSparkCluster.
func (mg *HdinsightSparkCluster) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this HdinsightSparkCluster.
func (mg *HdinsightSparkCluster) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this HdinsightSparkCluster.
func (mg *HdinsightSparkCluster) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this HdinsightSparkCluster.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *HdinsightSparkCluster) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this HdinsightSparkCluster.
func (mg *HdinsightSparkCluster) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this HdinsightStormCluster.
func (mg *HdinsightStormCluster) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this HdinsightStormCluster.
func (mg *HdinsightStormCluster) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this HdinsightStormCluster.
func (mg *HdinsightStormCluster) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this HdinsightStormCluster.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *HdinsightStormCluster) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this HdinsightStormCluster.
func (mg *HdinsightStormCluster) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this HdinsightStormCluster.
func (mg *HdinsightStormCluster) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this HdinsightStormCluster.
func (mg *HdinsightStormCluster) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this HdinsightStormCluster.
func (mg *HdinsightStormCluster) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this HdinsightStormCluster.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *HdinsightStormCluster) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this HdinsightStormCluster.
func (mg *HdinsightStormCluster) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
