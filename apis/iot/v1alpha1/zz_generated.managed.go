/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this IotSecurityDeviceGroup.
func (mg *IotSecurityDeviceGroup) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this IotSecurityDeviceGroup.
func (mg *IotSecurityDeviceGroup) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this IotSecurityDeviceGroup.
func (mg *IotSecurityDeviceGroup) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this IotSecurityDeviceGroup.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *IotSecurityDeviceGroup) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this IotSecurityDeviceGroup.
func (mg *IotSecurityDeviceGroup) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this IotSecurityDeviceGroup.
func (mg *IotSecurityDeviceGroup) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this IotSecurityDeviceGroup.
func (mg *IotSecurityDeviceGroup) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this IotSecurityDeviceGroup.
func (mg *IotSecurityDeviceGroup) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this IotSecurityDeviceGroup.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *IotSecurityDeviceGroup) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this IotSecurityDeviceGroup.
func (mg *IotSecurityDeviceGroup) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this IotSecuritySolution.
func (mg *IotSecuritySolution) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this IotSecuritySolution.
func (mg *IotSecuritySolution) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this IotSecuritySolution.
func (mg *IotSecuritySolution) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this IotSecuritySolution.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *IotSecuritySolution) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this IotSecuritySolution.
func (mg *IotSecuritySolution) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this IotSecuritySolution.
func (mg *IotSecuritySolution) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this IotSecuritySolution.
func (mg *IotSecuritySolution) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this IotSecuritySolution.
func (mg *IotSecuritySolution) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this IotSecuritySolution.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *IotSecuritySolution) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this IotSecuritySolution.
func (mg *IotSecuritySolution) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this IotTimeSeriesInsightsAccessPolicy.
func (mg *IotTimeSeriesInsightsAccessPolicy) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this IotTimeSeriesInsightsAccessPolicy.
func (mg *IotTimeSeriesInsightsAccessPolicy) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this IotTimeSeriesInsightsAccessPolicy.
func (mg *IotTimeSeriesInsightsAccessPolicy) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this IotTimeSeriesInsightsAccessPolicy.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *IotTimeSeriesInsightsAccessPolicy) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this IotTimeSeriesInsightsAccessPolicy.
func (mg *IotTimeSeriesInsightsAccessPolicy) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this IotTimeSeriesInsightsAccessPolicy.
func (mg *IotTimeSeriesInsightsAccessPolicy) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this IotTimeSeriesInsightsAccessPolicy.
func (mg *IotTimeSeriesInsightsAccessPolicy) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this IotTimeSeriesInsightsAccessPolicy.
func (mg *IotTimeSeriesInsightsAccessPolicy) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this IotTimeSeriesInsightsAccessPolicy.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *IotTimeSeriesInsightsAccessPolicy) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this IotTimeSeriesInsightsAccessPolicy.
func (mg *IotTimeSeriesInsightsAccessPolicy) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this IotTimeSeriesInsightsEventSourceIothub.
func (mg *IotTimeSeriesInsightsEventSourceIothub) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this IotTimeSeriesInsightsEventSourceIothub.
func (mg *IotTimeSeriesInsightsEventSourceIothub) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this IotTimeSeriesInsightsEventSourceIothub.
func (mg *IotTimeSeriesInsightsEventSourceIothub) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this IotTimeSeriesInsightsEventSourceIothub.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *IotTimeSeriesInsightsEventSourceIothub) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this IotTimeSeriesInsightsEventSourceIothub.
func (mg *IotTimeSeriesInsightsEventSourceIothub) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this IotTimeSeriesInsightsEventSourceIothub.
func (mg *IotTimeSeriesInsightsEventSourceIothub) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this IotTimeSeriesInsightsEventSourceIothub.
func (mg *IotTimeSeriesInsightsEventSourceIothub) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this IotTimeSeriesInsightsEventSourceIothub.
func (mg *IotTimeSeriesInsightsEventSourceIothub) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this IotTimeSeriesInsightsEventSourceIothub.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *IotTimeSeriesInsightsEventSourceIothub) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this IotTimeSeriesInsightsEventSourceIothub.
func (mg *IotTimeSeriesInsightsEventSourceIothub) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this IotTimeSeriesInsightsGen2Environment.
func (mg *IotTimeSeriesInsightsGen2Environment) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this IotTimeSeriesInsightsGen2Environment.
func (mg *IotTimeSeriesInsightsGen2Environment) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this IotTimeSeriesInsightsGen2Environment.
func (mg *IotTimeSeriesInsightsGen2Environment) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this IotTimeSeriesInsightsGen2Environment.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *IotTimeSeriesInsightsGen2Environment) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this IotTimeSeriesInsightsGen2Environment.
func (mg *IotTimeSeriesInsightsGen2Environment) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this IotTimeSeriesInsightsGen2Environment.
func (mg *IotTimeSeriesInsightsGen2Environment) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this IotTimeSeriesInsightsGen2Environment.
func (mg *IotTimeSeriesInsightsGen2Environment) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this IotTimeSeriesInsightsGen2Environment.
func (mg *IotTimeSeriesInsightsGen2Environment) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this IotTimeSeriesInsightsGen2Environment.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *IotTimeSeriesInsightsGen2Environment) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this IotTimeSeriesInsightsGen2Environment.
func (mg *IotTimeSeriesInsightsGen2Environment) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this IotTimeSeriesInsightsReferenceDataSet.
func (mg *IotTimeSeriesInsightsReferenceDataSet) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this IotTimeSeriesInsightsReferenceDataSet.
func (mg *IotTimeSeriesInsightsReferenceDataSet) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this IotTimeSeriesInsightsReferenceDataSet.
func (mg *IotTimeSeriesInsightsReferenceDataSet) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this IotTimeSeriesInsightsReferenceDataSet.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *IotTimeSeriesInsightsReferenceDataSet) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this IotTimeSeriesInsightsReferenceDataSet.
func (mg *IotTimeSeriesInsightsReferenceDataSet) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this IotTimeSeriesInsightsReferenceDataSet.
func (mg *IotTimeSeriesInsightsReferenceDataSet) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this IotTimeSeriesInsightsReferenceDataSet.
func (mg *IotTimeSeriesInsightsReferenceDataSet) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this IotTimeSeriesInsightsReferenceDataSet.
func (mg *IotTimeSeriesInsightsReferenceDataSet) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this IotTimeSeriesInsightsReferenceDataSet.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *IotTimeSeriesInsightsReferenceDataSet) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this IotTimeSeriesInsightsReferenceDataSet.
func (mg *IotTimeSeriesInsightsReferenceDataSet) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this IotTimeSeriesInsightsStandardEnvironment.
func (mg *IotTimeSeriesInsightsStandardEnvironment) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this IotTimeSeriesInsightsStandardEnvironment.
func (mg *IotTimeSeriesInsightsStandardEnvironment) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this IotTimeSeriesInsightsStandardEnvironment.
func (mg *IotTimeSeriesInsightsStandardEnvironment) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this IotTimeSeriesInsightsStandardEnvironment.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *IotTimeSeriesInsightsStandardEnvironment) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this IotTimeSeriesInsightsStandardEnvironment.
func (mg *IotTimeSeriesInsightsStandardEnvironment) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this IotTimeSeriesInsightsStandardEnvironment.
func (mg *IotTimeSeriesInsightsStandardEnvironment) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this IotTimeSeriesInsightsStandardEnvironment.
func (mg *IotTimeSeriesInsightsStandardEnvironment) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this IotTimeSeriesInsightsStandardEnvironment.
func (mg *IotTimeSeriesInsightsStandardEnvironment) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this IotTimeSeriesInsightsStandardEnvironment.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *IotTimeSeriesInsightsStandardEnvironment) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this IotTimeSeriesInsightsStandardEnvironment.
func (mg *IotTimeSeriesInsightsStandardEnvironment) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
