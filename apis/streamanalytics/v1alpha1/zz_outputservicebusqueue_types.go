/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type OutputServiceBusQueueObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type OutputServiceBusQueueParameters struct {

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	QueueName *string `json:"queueName" tf:"queue_name,omitempty"`

	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-jet-azure/apis/azure2/v1alpha2.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Required
	Serialization []OutputServiceBusQueueSerializationParameters `json:"serialization" tf:"serialization,omitempty"`

	// +kubebuilder:validation:Required
	ServiceBusNamespace *string `json:"servicebusNamespace" tf:"servicebus_namespace,omitempty"`

	// +kubebuilder:validation:Required
	SharedAccessPolicyKeySecretRef v1.SecretKeySelector `json:"sharedAccessPolicyKeySecretRef" tf:"-"`

	// +kubebuilder:validation:Required
	SharedAccessPolicyName *string `json:"sharedAccessPolicyName" tf:"shared_access_policy_name,omitempty"`

	// +kubebuilder:validation:Required
	StreamAnalyticsJobName *string `json:"streamAnalyticsJobName" tf:"stream_analytics_job_name,omitempty"`
}

type OutputServiceBusQueueSerializationObservation struct {
}

type OutputServiceBusQueueSerializationParameters struct {

	// +kubebuilder:validation:Optional
	Encoding *string `json:"encoding,omitempty" tf:"encoding,omitempty"`

	// +kubebuilder:validation:Optional
	FieldDelimiter *string `json:"fieldDelimiter,omitempty" tf:"field_delimiter,omitempty"`

	// +kubebuilder:validation:Optional
	Format *string `json:"format,omitempty" tf:"format,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

// OutputServiceBusQueueSpec defines the desired state of OutputServiceBusQueue
type OutputServiceBusQueueSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     OutputServiceBusQueueParameters `json:"forProvider"`
}

// OutputServiceBusQueueStatus defines the observed state of OutputServiceBusQueue.
type OutputServiceBusQueueStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        OutputServiceBusQueueObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// OutputServiceBusQueue is the Schema for the OutputServiceBusQueues API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type OutputServiceBusQueue struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              OutputServiceBusQueueSpec   `json:"spec"`
	Status            OutputServiceBusQueueStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// OutputServiceBusQueueList contains a list of OutputServiceBusQueues
type OutputServiceBusQueueList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []OutputServiceBusQueue `json:"items"`
}

// Repository type metadata.
var (
	OutputServiceBusQueue_Kind             = "OutputServiceBusQueue"
	OutputServiceBusQueue_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: OutputServiceBusQueue_Kind}.String()
	OutputServiceBusQueue_KindAPIVersion   = OutputServiceBusQueue_Kind + "." + CRDGroupVersion.String()
	OutputServiceBusQueue_GroupVersionKind = CRDGroupVersion.WithKind(OutputServiceBusQueue_Kind)
)

func init() {
	SchemeBuilder.Register(&OutputServiceBusQueue{}, &OutputServiceBusQueueList{})
}
