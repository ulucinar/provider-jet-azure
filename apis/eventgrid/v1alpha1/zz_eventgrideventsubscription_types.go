/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type AdvancedFilterObservation struct {
}

type AdvancedFilterParameters struct {

	// +kubebuilder:validation:Optional
	BoolEquals []BoolEqualsParameters `json:"boolEquals,omitempty" tf:"bool_equals"`

	// +kubebuilder:validation:Optional
	IsNotNull []IsNotNullParameters `json:"isNotNull,omitempty" tf:"is_not_null"`

	// +kubebuilder:validation:Optional
	IsNullOrUndefined []IsNullOrUndefinedParameters `json:"isNullOrUndefined,omitempty" tf:"is_null_or_undefined"`

	// +kubebuilder:validation:Optional
	NumberGreaterThan []NumberGreaterThanParameters `json:"numberGreaterThan,omitempty" tf:"number_greater_than"`

	// +kubebuilder:validation:Optional
	NumberGreaterThanOrEquals []NumberGreaterThanOrEqualsParameters `json:"numberGreaterThanOrEquals,omitempty" tf:"number_greater_than_or_equals"`

	// +kubebuilder:validation:Optional
	NumberIn []NumberInParameters `json:"numberIn,omitempty" tf:"number_in"`

	// +kubebuilder:validation:Optional
	NumberInRange []NumberInRangeParameters `json:"numberInRange,omitempty" tf:"number_in_range"`

	// +kubebuilder:validation:Optional
	NumberLessThan []NumberLessThanParameters `json:"numberLessThan,omitempty" tf:"number_less_than"`

	// +kubebuilder:validation:Optional
	NumberLessThanOrEquals []NumberLessThanOrEqualsParameters `json:"numberLessThanOrEquals,omitempty" tf:"number_less_than_or_equals"`

	// +kubebuilder:validation:Optional
	NumberNotIn []NumberNotInParameters `json:"numberNotIn,omitempty" tf:"number_not_in"`

	// +kubebuilder:validation:Optional
	NumberNotInRange []NumberNotInRangeParameters `json:"numberNotInRange,omitempty" tf:"number_not_in_range"`

	// +kubebuilder:validation:Optional
	StringBeginsWith []StringBeginsWithParameters `json:"stringBeginsWith,omitempty" tf:"string_begins_with"`

	// +kubebuilder:validation:Optional
	StringContains []StringContainsParameters `json:"stringContains,omitempty" tf:"string_contains"`

	// +kubebuilder:validation:Optional
	StringEndsWith []StringEndsWithParameters `json:"stringEndsWith,omitempty" tf:"string_ends_with"`

	// +kubebuilder:validation:Optional
	StringIn []StringInParameters `json:"stringIn,omitempty" tf:"string_in"`

	// +kubebuilder:validation:Optional
	StringNotBeginsWith []StringNotBeginsWithParameters `json:"stringNotBeginsWith,omitempty" tf:"string_not_begins_with"`

	// +kubebuilder:validation:Optional
	StringNotContains []StringNotContainsParameters `json:"stringNotContains,omitempty" tf:"string_not_contains"`

	// +kubebuilder:validation:Optional
	StringNotEndsWith []StringNotEndsWithParameters `json:"stringNotEndsWith,omitempty" tf:"string_not_ends_with"`

	// +kubebuilder:validation:Optional
	StringNotIn []StringNotInParameters `json:"stringNotIn,omitempty" tf:"string_not_in"`
}

type AzureFunctionEndpointObservation struct {
}

type AzureFunctionEndpointParameters struct {

	// +kubebuilder:validation:Required
	FunctionID string `json:"functionId" tf:"function_id"`

	// +kubebuilder:validation:Optional
	MaxEventsPerBatch *int64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch"`

	// +kubebuilder:validation:Optional
	PreferredBatchSizeInKilobytes *int64 `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes"`
}

type BoolEqualsObservation struct {
}

type BoolEqualsParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Value bool `json:"value" tf:"value"`
}

type EventgridEventSubscriptionObservation struct {
}

type EventgridEventSubscriptionParameters struct {

	// +kubebuilder:validation:Optional
	AdvancedFilter []AdvancedFilterParameters `json:"advancedFilter,omitempty" tf:"advanced_filter"`

	// +kubebuilder:validation:Optional
	AdvancedFilteringOnArraysEnabled *bool `json:"advancedFilteringOnArraysEnabled,omitempty" tf:"advanced_filtering_on_arrays_enabled"`

	// +kubebuilder:validation:Optional
	AzureFunctionEndpoint []AzureFunctionEndpointParameters `json:"azureFunctionEndpoint,omitempty" tf:"azure_function_endpoint"`

	// +kubebuilder:validation:Optional
	EventDeliverySchema *string `json:"eventDeliverySchema,omitempty" tf:"event_delivery_schema"`

	// +kubebuilder:validation:Optional
	EventhubEndpoint []EventhubEndpointParameters `json:"eventhubEndpoint,omitempty" tf:"eventhub_endpoint"`

	// +kubebuilder:validation:Optional
	EventhubEndpointID *string `json:"eventhubEndpointId,omitempty" tf:"eventhub_endpoint_id"`

	// +kubebuilder:validation:Optional
	ExpirationTimeUtc *string `json:"expirationTimeUtc,omitempty" tf:"expiration_time_utc"`

	// +kubebuilder:validation:Optional
	HybridConnectionEndpoint []HybridConnectionEndpointParameters `json:"hybridConnectionEndpoint,omitempty" tf:"hybrid_connection_endpoint"`

	// +kubebuilder:validation:Optional
	HybridConnectionEndpointID *string `json:"hybridConnectionEndpointId,omitempty" tf:"hybrid_connection_endpoint_id"`

	// +kubebuilder:validation:Optional
	IncludedEventTypes []string `json:"includedEventTypes,omitempty" tf:"included_event_types"`

	// +kubebuilder:validation:Optional
	Labels []string `json:"labels,omitempty" tf:"labels"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Optional
	RetryPolicy []RetryPolicyParameters `json:"retryPolicy,omitempty" tf:"retry_policy"`

	// +kubebuilder:validation:Required
	Scope string `json:"scope" tf:"scope"`

	// +kubebuilder:validation:Optional
	ServiceBusQueueEndpointID *string `json:"serviceBusQueueEndpointId,omitempty" tf:"service_bus_queue_endpoint_id"`

	// +kubebuilder:validation:Optional
	ServiceBusTopicEndpointID *string `json:"serviceBusTopicEndpointId,omitempty" tf:"service_bus_topic_endpoint_id"`

	// +kubebuilder:validation:Optional
	StorageBlobDeadLetterDestination []StorageBlobDeadLetterDestinationParameters `json:"storageBlobDeadLetterDestination,omitempty" tf:"storage_blob_dead_letter_destination"`

	// +kubebuilder:validation:Optional
	StorageQueueEndpoint []StorageQueueEndpointParameters `json:"storageQueueEndpoint,omitempty" tf:"storage_queue_endpoint"`

	// +kubebuilder:validation:Optional
	SubjectFilter []SubjectFilterParameters `json:"subjectFilter,omitempty" tf:"subject_filter"`

	// +kubebuilder:validation:Optional
	TopicName *string `json:"topicName,omitempty" tf:"topic_name"`

	// +kubebuilder:validation:Optional
	WebhookEndpoint []WebhookEndpointParameters `json:"webhookEndpoint,omitempty" tf:"webhook_endpoint"`
}

type EventhubEndpointObservation struct {
}

type EventhubEndpointParameters struct {

	// +kubebuilder:validation:Optional
	EventhubID *string `json:"eventhubId,omitempty" tf:"eventhub_id"`
}

type HybridConnectionEndpointObservation struct {
}

type HybridConnectionEndpointParameters struct {

	// +kubebuilder:validation:Optional
	HybridConnectionID *string `json:"hybridConnectionId,omitempty" tf:"hybrid_connection_id"`
}

type IsNotNullObservation struct {
}

type IsNotNullParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`
}

type IsNullOrUndefinedObservation struct {
}

type IsNullOrUndefinedParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`
}

type NumberGreaterThanObservation struct {
}

type NumberGreaterThanOrEqualsObservation struct {
}

type NumberGreaterThanOrEqualsParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Value float64 `json:"value" tf:"value"`
}

type NumberGreaterThanParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Value float64 `json:"value" tf:"value"`
}

type NumberInObservation struct {
}

type NumberInParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Values []float64 `json:"values" tf:"values"`
}

type NumberInRangeObservation struct {
}

type NumberInRangeParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Values [][]float64 `json:"values" tf:"values"`
}

type NumberLessThanObservation struct {
}

type NumberLessThanOrEqualsObservation struct {
}

type NumberLessThanOrEqualsParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Value float64 `json:"value" tf:"value"`
}

type NumberLessThanParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Value float64 `json:"value" tf:"value"`
}

type NumberNotInObservation struct {
}

type NumberNotInParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Values []float64 `json:"values" tf:"values"`
}

type NumberNotInRangeObservation struct {
}

type NumberNotInRangeParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Values [][]float64 `json:"values" tf:"values"`
}

type RetryPolicyObservation struct {
}

type RetryPolicyParameters struct {

	// +kubebuilder:validation:Required
	EventTimeToLive int64 `json:"eventTimeToLive" tf:"event_time_to_live"`

	// +kubebuilder:validation:Required
	MaxDeliveryAttempts int64 `json:"maxDeliveryAttempts" tf:"max_delivery_attempts"`
}

type StorageBlobDeadLetterDestinationObservation struct {
}

type StorageBlobDeadLetterDestinationParameters struct {

	// +kubebuilder:validation:Required
	StorageAccountID string `json:"storageAccountId" tf:"storage_account_id"`

	// +kubebuilder:validation:Required
	StorageBlobContainerName string `json:"storageBlobContainerName" tf:"storage_blob_container_name"`
}

type StorageQueueEndpointObservation struct {
}

type StorageQueueEndpointParameters struct {

	// +kubebuilder:validation:Required
	QueueName string `json:"queueName" tf:"queue_name"`

	// +kubebuilder:validation:Required
	StorageAccountID string `json:"storageAccountId" tf:"storage_account_id"`
}

type StringBeginsWithObservation struct {
}

type StringBeginsWithParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Values []string `json:"values" tf:"values"`
}

type StringContainsObservation struct {
}

type StringContainsParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Values []string `json:"values" tf:"values"`
}

type StringEndsWithObservation struct {
}

type StringEndsWithParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Values []string `json:"values" tf:"values"`
}

type StringInObservation struct {
}

type StringInParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Values []string `json:"values" tf:"values"`
}

type StringNotBeginsWithObservation struct {
}

type StringNotBeginsWithParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Values []string `json:"values" tf:"values"`
}

type StringNotContainsObservation struct {
}

type StringNotContainsParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Values []string `json:"values" tf:"values"`
}

type StringNotEndsWithObservation struct {
}

type StringNotEndsWithParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Values []string `json:"values" tf:"values"`
}

type StringNotInObservation struct {
}

type StringNotInParameters struct {

	// +kubebuilder:validation:Required
	Key string `json:"key" tf:"key"`

	// +kubebuilder:validation:Required
	Values []string `json:"values" tf:"values"`
}

type SubjectFilterObservation struct {
}

type SubjectFilterParameters struct {

	// +kubebuilder:validation:Optional
	CaseSensitive *bool `json:"caseSensitive,omitempty" tf:"case_sensitive"`

	// +kubebuilder:validation:Optional
	SubjectBeginsWith *string `json:"subjectBeginsWith,omitempty" tf:"subject_begins_with"`

	// +kubebuilder:validation:Optional
	SubjectEndsWith *string `json:"subjectEndsWith,omitempty" tf:"subject_ends_with"`
}

type WebhookEndpointObservation struct {
	BaseURL string `json:"baseUrl,omitempty" tf:"base_url"`
}

type WebhookEndpointParameters struct {

	// +kubebuilder:validation:Optional
	ActiveDirectoryAppIDOrURI *string `json:"activeDirectoryAppIdOrUri,omitempty" tf:"active_directory_app_id_or_uri"`

	// +kubebuilder:validation:Optional
	ActiveDirectoryTenantID *string `json:"activeDirectoryTenantId,omitempty" tf:"active_directory_tenant_id"`

	// +kubebuilder:validation:Optional
	MaxEventsPerBatch *int64 `json:"maxEventsPerBatch,omitempty" tf:"max_events_per_batch"`

	// +kubebuilder:validation:Optional
	PreferredBatchSizeInKilobytes *int64 `json:"preferredBatchSizeInKilobytes,omitempty" tf:"preferred_batch_size_in_kilobytes"`

	// +kubebuilder:validation:Required
	URL string `json:"url" tf:"url"`
}

// EventgridEventSubscriptionSpec defines the desired state of EventgridEventSubscription
type EventgridEventSubscriptionSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       EventgridEventSubscriptionParameters `json:"forProvider"`
}

// EventgridEventSubscriptionStatus defines the observed state of EventgridEventSubscription.
type EventgridEventSubscriptionStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          EventgridEventSubscriptionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// EventgridEventSubscription is the Schema for the EventgridEventSubscriptions API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type EventgridEventSubscription struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EventgridEventSubscriptionSpec   `json:"spec"`
	Status            EventgridEventSubscriptionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EventgridEventSubscriptionList contains a list of EventgridEventSubscriptions
type EventgridEventSubscriptionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EventgridEventSubscription `json:"items"`
}

// Repository type metadata.
var (
	EventgridEventSubscriptionKind             = "EventgridEventSubscription"
	EventgridEventSubscriptionGroupKind        = schema.GroupKind{Group: Group, Kind: EventgridEventSubscriptionKind}.String()
	EventgridEventSubscriptionKindAPIVersion   = EventgridEventSubscriptionKind + "." + GroupVersion.String()
	EventgridEventSubscriptionGroupVersionKind = GroupVersion.WithKind(EventgridEventSubscriptionKind)
)

func init() {
	SchemeBuilder.Register(&EventgridEventSubscription{}, &EventgridEventSubscriptionList{})
}
