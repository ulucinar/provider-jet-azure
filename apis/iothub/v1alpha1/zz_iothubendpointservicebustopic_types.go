/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type IothubEndpointServicebusTopicObservation struct {
}

type IothubEndpointServicebusTopicParameters struct {

	// +kubebuilder:validation:Required
	ConnectionString string `json:"connectionString" tf:"connection_string"`

	// +kubebuilder:validation:Required
	IothubName string `json:"iothubName" tf:"iothub_name"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Required
	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name"`
}

// IothubEndpointServicebusTopicSpec defines the desired state of IothubEndpointServicebusTopic
type IothubEndpointServicebusTopicSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       IothubEndpointServicebusTopicParameters `json:"forProvider"`
}

// IothubEndpointServicebusTopicStatus defines the observed state of IothubEndpointServicebusTopic.
type IothubEndpointServicebusTopicStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          IothubEndpointServicebusTopicObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// IothubEndpointServicebusTopic is the Schema for the IothubEndpointServicebusTopics API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type IothubEndpointServicebusTopic struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              IothubEndpointServicebusTopicSpec   `json:"spec"`
	Status            IothubEndpointServicebusTopicStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// IothubEndpointServicebusTopicList contains a list of IothubEndpointServicebusTopics
type IothubEndpointServicebusTopicList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []IothubEndpointServicebusTopic `json:"items"`
}

// Repository type metadata.
var (
	IothubEndpointServicebusTopicKind             = "IothubEndpointServicebusTopic"
	IothubEndpointServicebusTopicGroupKind        = schema.GroupKind{Group: Group, Kind: IothubEndpointServicebusTopicKind}.String()
	IothubEndpointServicebusTopicKindAPIVersion   = IothubEndpointServicebusTopicKind + "." + GroupVersion.String()
	IothubEndpointServicebusTopicGroupVersionKind = GroupVersion.WithKind(IothubEndpointServicebusTopicKind)
)

func init() {
	SchemeBuilder.Register(&IothubEndpointServicebusTopic{}, &IothubEndpointServicebusTopicList{})
}
