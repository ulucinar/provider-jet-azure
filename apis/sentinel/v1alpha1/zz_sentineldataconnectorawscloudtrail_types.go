/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type SentinelDataConnectorAwsCloudTrailObservation struct {
}

type SentinelDataConnectorAwsCloudTrailParameters struct {

	// +kubebuilder:validation:Required
	AwsRoleArn string `json:"awsRoleArn" tf:"aws_role_arn"`

	// +kubebuilder:validation:Required
	LogAnalyticsWorkspaceID string `json:"logAnalyticsWorkspaceId" tf:"log_analytics_workspace_id"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`
}

// SentinelDataConnectorAwsCloudTrailSpec defines the desired state of SentinelDataConnectorAwsCloudTrail
type SentinelDataConnectorAwsCloudTrailSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       SentinelDataConnectorAwsCloudTrailParameters `json:"forProvider"`
}

// SentinelDataConnectorAwsCloudTrailStatus defines the observed state of SentinelDataConnectorAwsCloudTrail.
type SentinelDataConnectorAwsCloudTrailStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          SentinelDataConnectorAwsCloudTrailObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SentinelDataConnectorAwsCloudTrail is the Schema for the SentinelDataConnectorAwsCloudTrails API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type SentinelDataConnectorAwsCloudTrail struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SentinelDataConnectorAwsCloudTrailSpec   `json:"spec"`
	Status            SentinelDataConnectorAwsCloudTrailStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SentinelDataConnectorAwsCloudTrailList contains a list of SentinelDataConnectorAwsCloudTrails
type SentinelDataConnectorAwsCloudTrailList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SentinelDataConnectorAwsCloudTrail `json:"items"`
}

// Repository type metadata.
var (
	SentinelDataConnectorAwsCloudTrailKind             = "SentinelDataConnectorAwsCloudTrail"
	SentinelDataConnectorAwsCloudTrailGroupKind        = schema.GroupKind{Group: Group, Kind: SentinelDataConnectorAwsCloudTrailKind}.String()
	SentinelDataConnectorAwsCloudTrailKindAPIVersion   = SentinelDataConnectorAwsCloudTrailKind + "." + GroupVersion.String()
	SentinelDataConnectorAwsCloudTrailGroupVersionKind = GroupVersion.WithKind(SentinelDataConnectorAwsCloudTrailKind)
)

func init() {
	SchemeBuilder.Register(&SentinelDataConnectorAwsCloudTrail{}, &SentinelDataConnectorAwsCloudTrailList{})
}
