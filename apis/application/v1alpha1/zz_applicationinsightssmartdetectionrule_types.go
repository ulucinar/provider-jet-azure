/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type ApplicationInsightsSmartDetectionRuleObservation struct {
}

type ApplicationInsightsSmartDetectionRuleParameters struct {

	// +kubebuilder:validation:Optional
	AdditionalEmailRecipients []string `json:"additionalEmailRecipients,omitempty" tf:"additional_email_recipients"`

	// +kubebuilder:validation:Required
	ApplicationInsightsID string `json:"applicationInsightsId" tf:"application_insights_id"`

	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Optional
	SendEmailsToSubscriptionOwners *bool `json:"sendEmailsToSubscriptionOwners,omitempty" tf:"send_emails_to_subscription_owners"`
}

// ApplicationInsightsSmartDetectionRuleSpec defines the desired state of ApplicationInsightsSmartDetectionRule
type ApplicationInsightsSmartDetectionRuleSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       ApplicationInsightsSmartDetectionRuleParameters `json:"forProvider"`
}

// ApplicationInsightsSmartDetectionRuleStatus defines the observed state of ApplicationInsightsSmartDetectionRule.
type ApplicationInsightsSmartDetectionRuleStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          ApplicationInsightsSmartDetectionRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ApplicationInsightsSmartDetectionRule is the Schema for the ApplicationInsightsSmartDetectionRules API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type ApplicationInsightsSmartDetectionRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ApplicationInsightsSmartDetectionRuleSpec   `json:"spec"`
	Status            ApplicationInsightsSmartDetectionRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ApplicationInsightsSmartDetectionRuleList contains a list of ApplicationInsightsSmartDetectionRules
type ApplicationInsightsSmartDetectionRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ApplicationInsightsSmartDetectionRule `json:"items"`
}

// Repository type metadata.
var (
	ApplicationInsightsSmartDetectionRuleKind             = "ApplicationInsightsSmartDetectionRule"
	ApplicationInsightsSmartDetectionRuleGroupKind        = schema.GroupKind{Group: Group, Kind: ApplicationInsightsSmartDetectionRuleKind}.String()
	ApplicationInsightsSmartDetectionRuleKindAPIVersion   = ApplicationInsightsSmartDetectionRuleKind + "." + GroupVersion.String()
	ApplicationInsightsSmartDetectionRuleGroupVersionKind = GroupVersion.WithKind(ApplicationInsightsSmartDetectionRuleKind)
)

func init() {
	SchemeBuilder.Register(&ApplicationInsightsSmartDetectionRule{}, &ApplicationInsightsSmartDetectionRuleList{})
}
