/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type ApplicationInsightsAnalyticsItemObservation struct {
	TimeCreated string `json:"timeCreated,omitempty" tf:"time_created"`

	TimeModified string `json:"timeModified,omitempty" tf:"time_modified"`

	Version string `json:"version,omitempty" tf:"version"`
}

type ApplicationInsightsAnalyticsItemParameters struct {

	// +kubebuilder:validation:Required
	ApplicationInsightsID string `json:"applicationInsightsId" tf:"application_insights_id"`

	// +kubebuilder:validation:Required
	Content string `json:"content" tf:"content"`

	// +kubebuilder:validation:Optional
	FunctionAlias *string `json:"functionAlias,omitempty" tf:"function_alias"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Required
	Scope string `json:"scope" tf:"scope"`

	// +kubebuilder:validation:Required
	Type string `json:"type" tf:"type"`
}

// ApplicationInsightsAnalyticsItemSpec defines the desired state of ApplicationInsightsAnalyticsItem
type ApplicationInsightsAnalyticsItemSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       ApplicationInsightsAnalyticsItemParameters `json:"forProvider"`
}

// ApplicationInsightsAnalyticsItemStatus defines the observed state of ApplicationInsightsAnalyticsItem.
type ApplicationInsightsAnalyticsItemStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          ApplicationInsightsAnalyticsItemObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ApplicationInsightsAnalyticsItem is the Schema for the ApplicationInsightsAnalyticsItems API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type ApplicationInsightsAnalyticsItem struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ApplicationInsightsAnalyticsItemSpec   `json:"spec"`
	Status            ApplicationInsightsAnalyticsItemStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ApplicationInsightsAnalyticsItemList contains a list of ApplicationInsightsAnalyticsItems
type ApplicationInsightsAnalyticsItemList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ApplicationInsightsAnalyticsItem `json:"items"`
}

// Repository type metadata.
var (
	ApplicationInsightsAnalyticsItemKind             = "ApplicationInsightsAnalyticsItem"
	ApplicationInsightsAnalyticsItemGroupKind        = schema.GroupKind{Group: Group, Kind: ApplicationInsightsAnalyticsItemKind}.String()
	ApplicationInsightsAnalyticsItemKindAPIVersion   = ApplicationInsightsAnalyticsItemKind + "." + GroupVersion.String()
	ApplicationInsightsAnalyticsItemGroupVersionKind = GroupVersion.WithKind(ApplicationInsightsAnalyticsItemKind)
)

func init() {
	SchemeBuilder.Register(&ApplicationInsightsAnalyticsItem{}, &ApplicationInsightsAnalyticsItemList{})
}
