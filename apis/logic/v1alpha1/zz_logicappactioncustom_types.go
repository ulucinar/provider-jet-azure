/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type LogicAppActionCustomObservation struct {
}

type LogicAppActionCustomParameters struct {

	// +kubebuilder:validation:Required
	Body string `json:"body" tf:"body"`

	// +kubebuilder:validation:Required
	LogicAppID string `json:"logicAppId" tf:"logic_app_id"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`
}

// LogicAppActionCustomSpec defines the desired state of LogicAppActionCustom
type LogicAppActionCustomSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       LogicAppActionCustomParameters `json:"forProvider"`
}

// LogicAppActionCustomStatus defines the observed state of LogicAppActionCustom.
type LogicAppActionCustomStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          LogicAppActionCustomObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// LogicAppActionCustom is the Schema for the LogicAppActionCustoms API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type LogicAppActionCustom struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LogicAppActionCustomSpec   `json:"spec"`
	Status            LogicAppActionCustomStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// LogicAppActionCustomList contains a list of LogicAppActionCustoms
type LogicAppActionCustomList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []LogicAppActionCustom `json:"items"`
}

// Repository type metadata.
var (
	LogicAppActionCustomKind             = "LogicAppActionCustom"
	LogicAppActionCustomGroupKind        = schema.GroupKind{Group: Group, Kind: LogicAppActionCustomKind}.String()
	LogicAppActionCustomKindAPIVersion   = LogicAppActionCustomKind + "." + GroupVersion.String()
	LogicAppActionCustomGroupVersionKind = GroupVersion.WithKind(LogicAppActionCustomKind)
)

func init() {
	SchemeBuilder.Register(&LogicAppActionCustom{}, &LogicAppActionCustomList{})
}
