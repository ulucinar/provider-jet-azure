/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type AutomationCredentialObservation struct {
}

type AutomationCredentialParameters struct {

	// +kubebuilder:validation:Required
	AutomationAccountName string `json:"automationAccountName" tf:"automation_account_name"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Required
	Password string `json:"password" tf:"password"`

	// +kubebuilder:validation:Required
	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name"`

	// +kubebuilder:validation:Required
	Username string `json:"username" tf:"username"`
}

// AutomationCredentialSpec defines the desired state of AutomationCredential
type AutomationCredentialSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       AutomationCredentialParameters `json:"forProvider"`
}

// AutomationCredentialStatus defines the observed state of AutomationCredential.
type AutomationCredentialStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          AutomationCredentialObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AutomationCredential is the Schema for the AutomationCredentials API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type AutomationCredential struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AutomationCredentialSpec   `json:"spec"`
	Status            AutomationCredentialStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AutomationCredentialList contains a list of AutomationCredentials
type AutomationCredentialList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AutomationCredential `json:"items"`
}

// Repository type metadata.
var (
	AutomationCredentialKind             = "AutomationCredential"
	AutomationCredentialGroupKind        = schema.GroupKind{Group: Group, Kind: AutomationCredentialKind}.String()
	AutomationCredentialKindAPIVersion   = AutomationCredentialKind + "." + GroupVersion.String()
	AutomationCredentialGroupVersionKind = GroupVersion.WithKind(AutomationCredentialKind)
)

func init() {
	SchemeBuilder.Register(&AutomationCredential{}, &AutomationCredentialList{})
}
