/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type AutomationVariableStringObservation struct {
}

type AutomationVariableStringParameters struct {

	// +kubebuilder:validation:Required
	AutomationAccountName string `json:"automationAccountName" tf:"automation_account_name"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description"`

	// +kubebuilder:validation:Optional
	Encrypted *bool `json:"encrypted,omitempty" tf:"encrypted"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Required
	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value"`
}

// AutomationVariableStringSpec defines the desired state of AutomationVariableString
type AutomationVariableStringSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       AutomationVariableStringParameters `json:"forProvider"`
}

// AutomationVariableStringStatus defines the observed state of AutomationVariableString.
type AutomationVariableStringStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          AutomationVariableStringObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AutomationVariableString is the Schema for the AutomationVariableStrings API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type AutomationVariableString struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AutomationVariableStringSpec   `json:"spec"`
	Status            AutomationVariableStringStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AutomationVariableStringList contains a list of AutomationVariableStrings
type AutomationVariableStringList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AutomationVariableString `json:"items"`
}

// Repository type metadata.
var (
	AutomationVariableStringKind             = "AutomationVariableString"
	AutomationVariableStringGroupKind        = schema.GroupKind{Group: Group, Kind: AutomationVariableStringKind}.String()
	AutomationVariableStringKindAPIVersion   = AutomationVariableStringKind + "." + GroupVersion.String()
	AutomationVariableStringGroupVersionKind = GroupVersion.WithKind(AutomationVariableStringKind)
)

func init() {
	SchemeBuilder.Register(&AutomationVariableString{}, &AutomationVariableStringList{})
}
