/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type NetworkInterfaceBackendAddressPoolAssociationObservation struct {
}

type NetworkInterfaceBackendAddressPoolAssociationParameters struct {

	// +kubebuilder:validation:Required
	BackendAddressPoolID string `json:"backendAddressPoolId" tf:"backend_address_pool_id"`

	// +kubebuilder:validation:Required
	IPConfigurationName string `json:"ipConfigurationName" tf:"ip_configuration_name"`

	// +kubebuilder:validation:Required
	NetworkInterfaceID string `json:"networkInterfaceId" tf:"network_interface_id"`
}

// NetworkInterfaceBackendAddressPoolAssociationSpec defines the desired state of NetworkInterfaceBackendAddressPoolAssociation
type NetworkInterfaceBackendAddressPoolAssociationSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       NetworkInterfaceBackendAddressPoolAssociationParameters `json:"forProvider"`
}

// NetworkInterfaceBackendAddressPoolAssociationStatus defines the observed state of NetworkInterfaceBackendAddressPoolAssociation.
type NetworkInterfaceBackendAddressPoolAssociationStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          NetworkInterfaceBackendAddressPoolAssociationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// NetworkInterfaceBackendAddressPoolAssociation is the Schema for the NetworkInterfaceBackendAddressPoolAssociations API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type NetworkInterfaceBackendAddressPoolAssociation struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              NetworkInterfaceBackendAddressPoolAssociationSpec   `json:"spec"`
	Status            NetworkInterfaceBackendAddressPoolAssociationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NetworkInterfaceBackendAddressPoolAssociationList contains a list of NetworkInterfaceBackendAddressPoolAssociations
type NetworkInterfaceBackendAddressPoolAssociationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NetworkInterfaceBackendAddressPoolAssociation `json:"items"`
}

// Repository type metadata.
var (
	NetworkInterfaceBackendAddressPoolAssociationKind             = "NetworkInterfaceBackendAddressPoolAssociation"
	NetworkInterfaceBackendAddressPoolAssociationGroupKind        = schema.GroupKind{Group: Group, Kind: NetworkInterfaceBackendAddressPoolAssociationKind}.String()
	NetworkInterfaceBackendAddressPoolAssociationKindAPIVersion   = NetworkInterfaceBackendAddressPoolAssociationKind + "." + GroupVersion.String()
	NetworkInterfaceBackendAddressPoolAssociationGroupVersionKind = GroupVersion.WithKind(NetworkInterfaceBackendAddressPoolAssociationKind)
)

func init() {
	SchemeBuilder.Register(&NetworkInterfaceBackendAddressPoolAssociation{}, &NetworkInterfaceBackendAddressPoolAssociationList{})
}
