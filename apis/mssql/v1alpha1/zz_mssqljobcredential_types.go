/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type MssqlJobCredentialObservation struct {
}

type MssqlJobCredentialParameters struct {

	// +kubebuilder:validation:Required
	JobAgentID string `json:"jobAgentId" tf:"job_agent_id"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Required
	Password string `json:"password" tf:"password"`

	// +kubebuilder:validation:Required
	Username string `json:"username" tf:"username"`
}

// MssqlJobCredentialSpec defines the desired state of MssqlJobCredential
type MssqlJobCredentialSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       MssqlJobCredentialParameters `json:"forProvider"`
}

// MssqlJobCredentialStatus defines the observed state of MssqlJobCredential.
type MssqlJobCredentialStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          MssqlJobCredentialObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// MssqlJobCredential is the Schema for the MssqlJobCredentials API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type MssqlJobCredential struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MssqlJobCredentialSpec   `json:"spec"`
	Status            MssqlJobCredentialStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MssqlJobCredentialList contains a list of MssqlJobCredentials
type MssqlJobCredentialList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MssqlJobCredential `json:"items"`
}

// Repository type metadata.
var (
	MssqlJobCredentialKind             = "MssqlJobCredential"
	MssqlJobCredentialGroupKind        = schema.GroupKind{Group: Group, Kind: MssqlJobCredentialKind}.String()
	MssqlJobCredentialKindAPIVersion   = MssqlJobCredentialKind + "." + GroupVersion.String()
	MssqlJobCredentialGroupVersionKind = GroupVersion.WithKind(MssqlJobCredentialKind)
)

func init() {
	SchemeBuilder.Register(&MssqlJobCredential{}, &MssqlJobCredentialList{})
}
