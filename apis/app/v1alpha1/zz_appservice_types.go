/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type ActiveDirectoryObservation struct {
}

type ActiveDirectoryParameters struct {

	// +kubebuilder:validation:Optional
	AllowedAudiences []string `json:"allowedAudiences,omitempty" tf:"allowed_audiences"`

	// +kubebuilder:validation:Required
	ClientID string `json:"clientId" tf:"client_id"`

	// +kubebuilder:validation:Optional
	ClientSecret *string `json:"clientSecret,omitempty" tf:"client_secret"`
}

type AppServiceIdentityObservation struct {
	PrincipalID string `json:"principalId,omitempty" tf:"principal_id"`

	TenantID string `json:"tenantId,omitempty" tf:"tenant_id"`
}

type AppServiceIdentityParameters struct {

	// +kubebuilder:validation:Optional
	IdentityIds []string `json:"identityIds,omitempty" tf:"identity_ids"`

	// +kubebuilder:validation:Required
	Type string `json:"type" tf:"type"`
}

type AppServiceObservation struct {
	CustomDomainVerificationID string `json:"customDomainVerificationId,omitempty" tf:"custom_domain_verification_id"`

	DefaultSiteHostname string `json:"defaultSiteHostname,omitempty" tf:"default_site_hostname"`

	OutboundIPAddressList []string `json:"outboundIpAddressList,omitempty" tf:"outbound_ip_address_list"`

	OutboundIPAddresses string `json:"outboundIpAddresses,omitempty" tf:"outbound_ip_addresses"`

	PossibleOutboundIPAddressList []string `json:"possibleOutboundIpAddressList,omitempty" tf:"possible_outbound_ip_address_list"`

	PossibleOutboundIPAddresses string `json:"possibleOutboundIpAddresses,omitempty" tf:"possible_outbound_ip_addresses"`

	SiteCredential []SiteCredentialObservation `json:"siteCredential,omitempty" tf:"site_credential"`
}

type AppServiceParameters struct {

	// +kubebuilder:validation:Required
	AppServicePlanID string `json:"appServicePlanId" tf:"app_service_plan_id"`

	// +kubebuilder:validation:Optional
	AppSettings map[string]string `json:"appSettings,omitempty" tf:"app_settings"`

	// +kubebuilder:validation:Optional
	AuthSettings []AuthSettingsParameters `json:"authSettings,omitempty" tf:"auth_settings"`

	// +kubebuilder:validation:Optional
	Backup []BackupParameters `json:"backup,omitempty" tf:"backup"`

	// +kubebuilder:validation:Optional
	ClientAffinityEnabled *bool `json:"clientAffinityEnabled,omitempty" tf:"client_affinity_enabled"`

	// +kubebuilder:validation:Optional
	ClientCertEnabled *bool `json:"clientCertEnabled,omitempty" tf:"client_cert_enabled"`

	// +kubebuilder:validation:Optional
	ConnectionString []ConnectionStringParameters `json:"connectionString,omitempty" tf:"connection_string"`

	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`

	// +kubebuilder:validation:Optional
	HTTPSOnly *bool `json:"httpsOnly,omitempty" tf:"https_only"`

	// +kubebuilder:validation:Optional
	Identity []AppServiceIdentityParameters `json:"identity,omitempty" tf:"identity"`

	// +kubebuilder:validation:Required
	Location string `json:"location" tf:"location"`

	// +kubebuilder:validation:Optional
	Logs []LogsParameters `json:"logs,omitempty" tf:"logs"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Required
	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name"`

	// +kubebuilder:validation:Optional
	SiteConfig []SiteConfigParameters `json:"siteConfig,omitempty" tf:"site_config"`

	// +kubebuilder:validation:Optional
	SourceControl []SourceControlParameters `json:"sourceControl,omitempty" tf:"source_control"`

	// +kubebuilder:validation:Optional
	StorageAccount []StorageAccountParameters `json:"storageAccount,omitempty" tf:"storage_account"`

	// +kubebuilder:validation:Optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags"`
}

type ApplicationLogsObservation struct {
}

type ApplicationLogsParameters struct {

	// +kubebuilder:validation:Optional
	AzureBlobStorage []AzureBlobStorageParameters `json:"azureBlobStorage,omitempty" tf:"azure_blob_storage"`

	// +kubebuilder:validation:Optional
	FileSystemLevel *string `json:"fileSystemLevel,omitempty" tf:"file_system_level"`
}

type AuthSettingsObservation struct {
}

type AuthSettingsParameters struct {

	// +kubebuilder:validation:Optional
	ActiveDirectory []ActiveDirectoryParameters `json:"activeDirectory,omitempty" tf:"active_directory"`

	// +kubebuilder:validation:Optional
	AdditionalLoginParams map[string]string `json:"additionalLoginParams,omitempty" tf:"additional_login_params"`

	// +kubebuilder:validation:Optional
	AllowedExternalRedirectUrls []string `json:"allowedExternalRedirectUrls,omitempty" tf:"allowed_external_redirect_urls"`

	// +kubebuilder:validation:Optional
	DefaultProvider *string `json:"defaultProvider,omitempty" tf:"default_provider"`

	// +kubebuilder:validation:Required
	Enabled bool `json:"enabled" tf:"enabled"`

	// +kubebuilder:validation:Optional
	Facebook []FacebookParameters `json:"facebook,omitempty" tf:"facebook"`

	// +kubebuilder:validation:Optional
	Google []GoogleParameters `json:"google,omitempty" tf:"google"`

	// +kubebuilder:validation:Optional
	Issuer *string `json:"issuer,omitempty" tf:"issuer"`

	// +kubebuilder:validation:Optional
	Microsoft []MicrosoftParameters `json:"microsoft,omitempty" tf:"microsoft"`

	// +kubebuilder:validation:Optional
	RuntimeVersion *string `json:"runtimeVersion,omitempty" tf:"runtime_version"`

	// +kubebuilder:validation:Optional
	TokenRefreshExtensionHours *float64 `json:"tokenRefreshExtensionHours,omitempty" tf:"token_refresh_extension_hours"`

	// +kubebuilder:validation:Optional
	TokenStoreEnabled *bool `json:"tokenStoreEnabled,omitempty" tf:"token_store_enabled"`

	// +kubebuilder:validation:Optional
	Twitter []TwitterParameters `json:"twitter,omitempty" tf:"twitter"`

	// +kubebuilder:validation:Optional
	UnauthenticatedClientAction *string `json:"unauthenticatedClientAction,omitempty" tf:"unauthenticated_client_action"`
}

type AzureBlobStorageObservation struct {
}

type AzureBlobStorageParameters struct {

	// +kubebuilder:validation:Required
	Level string `json:"level" tf:"level"`

	// +kubebuilder:validation:Required
	RetentionInDays int64 `json:"retentionInDays" tf:"retention_in_days"`

	// +kubebuilder:validation:Required
	SasURL string `json:"sasUrl" tf:"sas_url"`
}

type BackupObservation struct {
}

type BackupParameters struct {

	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Required
	Schedule []ScheduleParameters `json:"schedule" tf:"schedule"`

	// +kubebuilder:validation:Required
	StorageAccountURL string `json:"storageAccountUrl" tf:"storage_account_url"`
}

type ConnectionStringObservation struct {
}

type ConnectionStringParameters struct {

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Required
	Type string `json:"type" tf:"type"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type CorsObservation struct {
}

type CorsParameters struct {

	// +kubebuilder:validation:Required
	AllowedOrigins []string `json:"allowedOrigins" tf:"allowed_origins"`

	// +kubebuilder:validation:Optional
	SupportCredentials *bool `json:"supportCredentials,omitempty" tf:"support_credentials"`
}

type FacebookObservation struct {
}

type FacebookParameters struct {

	// +kubebuilder:validation:Required
	AppID string `json:"appId" tf:"app_id"`

	// +kubebuilder:validation:Required
	AppSecret string `json:"appSecret" tf:"app_secret"`

	// +kubebuilder:validation:Optional
	OauthScopes []string `json:"oauthScopes,omitempty" tf:"oauth_scopes"`
}

type FileSystemObservation struct {
}

type FileSystemParameters struct {

	// +kubebuilder:validation:Required
	RetentionInDays int64 `json:"retentionInDays" tf:"retention_in_days"`

	// +kubebuilder:validation:Required
	RetentionInMb int64 `json:"retentionInMb" tf:"retention_in_mb"`
}

type GoogleObservation struct {
}

type GoogleParameters struct {

	// +kubebuilder:validation:Required
	ClientID string `json:"clientId" tf:"client_id"`

	// +kubebuilder:validation:Required
	ClientSecret string `json:"clientSecret" tf:"client_secret"`

	// +kubebuilder:validation:Optional
	OauthScopes []string `json:"oauthScopes,omitempty" tf:"oauth_scopes"`
}

type HTTPLogsAzureBlobStorageObservation struct {
}

type HTTPLogsAzureBlobStorageParameters struct {

	// +kubebuilder:validation:Required
	RetentionInDays int64 `json:"retentionInDays" tf:"retention_in_days"`

	// +kubebuilder:validation:Required
	SasURL string `json:"sasUrl" tf:"sas_url"`
}

type HTTPLogsObservation struct {
}

type HTTPLogsParameters struct {

	// +kubebuilder:validation:Optional
	AzureBlobStorage []HTTPLogsAzureBlobStorageParameters `json:"azureBlobStorage,omitempty" tf:"azure_blob_storage"`

	// +kubebuilder:validation:Optional
	FileSystem []FileSystemParameters `json:"fileSystem,omitempty" tf:"file_system"`
}

type HeadersObservation struct {
}

type HeadersParameters struct {

	// +kubebuilder:validation:Optional
	XAzureFdid []string `json:"xAzureFdid,omitempty" tf:"x_azure_fdid"`

	// +kubebuilder:validation:Optional
	XFdHealthProbe []string `json:"xFdHealthProbe,omitempty" tf:"x_fd_health_probe"`

	// +kubebuilder:validation:Optional
	XForwardedFor []string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for"`

	// +kubebuilder:validation:Optional
	XForwardedHost []string `json:"xForwardedHost,omitempty" tf:"x_forwarded_host"`
}

type IPRestrictionObservation struct {
}

type IPRestrictionParameters struct {

	// +kubebuilder:validation:Optional
	Action *string `json:"action,omitempty" tf:"action"`

	// +kubebuilder:validation:Optional
	Headers []HeadersParameters `json:"headers,omitempty" tf:"headers"`

	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name"`

	// +kubebuilder:validation:Optional
	Priority *int64 `json:"priority,omitempty" tf:"priority"`

	// +kubebuilder:validation:Optional
	ServiceTag *string `json:"serviceTag,omitempty" tf:"service_tag"`

	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetId,omitempty" tf:"virtual_network_subnet_id"`
}

type LogsObservation struct {
}

type LogsParameters struct {

	// +kubebuilder:validation:Optional
	ApplicationLogs []ApplicationLogsParameters `json:"applicationLogs,omitempty" tf:"application_logs"`

	// +kubebuilder:validation:Optional
	DetailedErrorMessagesEnabled *bool `json:"detailedErrorMessagesEnabled,omitempty" tf:"detailed_error_messages_enabled"`

	// +kubebuilder:validation:Optional
	FailedRequestTracingEnabled *bool `json:"failedRequestTracingEnabled,omitempty" tf:"failed_request_tracing_enabled"`

	// +kubebuilder:validation:Optional
	HTTPLogs []HTTPLogsParameters `json:"httpLogs,omitempty" tf:"http_logs"`
}

type MicrosoftObservation struct {
}

type MicrosoftParameters struct {

	// +kubebuilder:validation:Required
	ClientID string `json:"clientId" tf:"client_id"`

	// +kubebuilder:validation:Required
	ClientSecret string `json:"clientSecret" tf:"client_secret"`

	// +kubebuilder:validation:Optional
	OauthScopes []string `json:"oauthScopes,omitempty" tf:"oauth_scopes"`
}

type ScheduleObservation struct {
}

type ScheduleParameters struct {

	// +kubebuilder:validation:Required
	FrequencyInterval int64 `json:"frequencyInterval" tf:"frequency_interval"`

	// +kubebuilder:validation:Required
	FrequencyUnit string `json:"frequencyUnit" tf:"frequency_unit"`

	// +kubebuilder:validation:Optional
	KeepAtLeastOneBackup *bool `json:"keepAtLeastOneBackup,omitempty" tf:"keep_at_least_one_backup"`

	// +kubebuilder:validation:Optional
	RetentionPeriodInDays *int64 `json:"retentionPeriodInDays,omitempty" tf:"retention_period_in_days"`

	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time"`
}

type ScmIPRestrictionHeadersObservation struct {
}

type ScmIPRestrictionHeadersParameters struct {

	// +kubebuilder:validation:Optional
	XAzureFdid []string `json:"xAzureFdid,omitempty" tf:"x_azure_fdid"`

	// +kubebuilder:validation:Optional
	XFdHealthProbe []string `json:"xFdHealthProbe,omitempty" tf:"x_fd_health_probe"`

	// +kubebuilder:validation:Optional
	XForwardedFor []string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for"`

	// +kubebuilder:validation:Optional
	XForwardedHost []string `json:"xForwardedHost,omitempty" tf:"x_forwarded_host"`
}

type ScmIPRestrictionObservation struct {
}

type ScmIPRestrictionParameters struct {

	// +kubebuilder:validation:Optional
	Action *string `json:"action,omitempty" tf:"action"`

	// +kubebuilder:validation:Optional
	Headers []ScmIPRestrictionHeadersParameters `json:"headers,omitempty" tf:"headers"`

	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name"`

	// +kubebuilder:validation:Optional
	Priority *int64 `json:"priority,omitempty" tf:"priority"`

	// +kubebuilder:validation:Optional
	ServiceTag *string `json:"serviceTag,omitempty" tf:"service_tag"`

	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetId,omitempty" tf:"virtual_network_subnet_id"`
}

type SiteConfigObservation struct {
}

type SiteConfigParameters struct {

	// +kubebuilder:validation:Optional
	AcrUseManagedIdentityCredentials *bool `json:"acrUseManagedIdentityCredentials,omitempty" tf:"acr_use_managed_identity_credentials"`

	// +kubebuilder:validation:Optional
	AcrUserManagedIdentityClientID *string `json:"acrUserManagedIdentityClientId,omitempty" tf:"acr_user_managed_identity_client_id"`

	// +kubebuilder:validation:Optional
	AlwaysOn *bool `json:"alwaysOn,omitempty" tf:"always_on"`

	// +kubebuilder:validation:Optional
	AppCommandLine *string `json:"appCommandLine,omitempty" tf:"app_command_line"`

	// +kubebuilder:validation:Optional
	AutoSwapSlotName *string `json:"autoSwapSlotName,omitempty" tf:"auto_swap_slot_name"`

	// +kubebuilder:validation:Optional
	Cors []CorsParameters `json:"cors,omitempty" tf:"cors"`

	// +kubebuilder:validation:Optional
	DefaultDocuments []string `json:"defaultDocuments,omitempty" tf:"default_documents"`

	// +kubebuilder:validation:Optional
	DotnetFrameworkVersion *string `json:"dotnetFrameworkVersion,omitempty" tf:"dotnet_framework_version"`

	// +kubebuilder:validation:Optional
	FtpsState *string `json:"ftpsState,omitempty" tf:"ftps_state"`

	// +kubebuilder:validation:Optional
	HealthCheckPath *string `json:"healthCheckPath,omitempty" tf:"health_check_path"`

	// +kubebuilder:validation:Optional
	Http2Enabled *bool `json:"http2Enabled,omitempty" tf:"http2_enabled"`

	// +kubebuilder:validation:Optional
	IPRestriction []IPRestrictionParameters `json:"ipRestriction,omitempty" tf:"ip_restriction"`

	// +kubebuilder:validation:Optional
	JavaContainer *string `json:"javaContainer,omitempty" tf:"java_container"`

	// +kubebuilder:validation:Optional
	JavaContainerVersion *string `json:"javaContainerVersion,omitempty" tf:"java_container_version"`

	// +kubebuilder:validation:Optional
	JavaVersion *string `json:"javaVersion,omitempty" tf:"java_version"`

	// +kubebuilder:validation:Optional
	LinuxFxVersion *string `json:"linuxFxVersion,omitempty" tf:"linux_fx_version"`

	// +kubebuilder:validation:Optional
	LocalMysqlEnabled *bool `json:"localMysqlEnabled,omitempty" tf:"local_mysql_enabled"`

	// +kubebuilder:validation:Optional
	ManagedPipelineMode *string `json:"managedPipelineMode,omitempty" tf:"managed_pipeline_mode"`

	// +kubebuilder:validation:Optional
	MinTLSVersion *string `json:"minTlsVersion,omitempty" tf:"min_tls_version"`

	// +kubebuilder:validation:Optional
	NumberOfWorkers *int64 `json:"numberOfWorkers,omitempty" tf:"number_of_workers"`

	// +kubebuilder:validation:Optional
	PhpVersion *string `json:"phpVersion,omitempty" tf:"php_version"`

	// +kubebuilder:validation:Optional
	PythonVersion *string `json:"pythonVersion,omitempty" tf:"python_version"`

	// +kubebuilder:validation:Optional
	RemoteDebuggingEnabled *bool `json:"remoteDebuggingEnabled,omitempty" tf:"remote_debugging_enabled"`

	// +kubebuilder:validation:Optional
	RemoteDebuggingVersion *string `json:"remoteDebuggingVersion,omitempty" tf:"remote_debugging_version"`

	// +kubebuilder:validation:Optional
	ScmIPRestriction []ScmIPRestrictionParameters `json:"scmIpRestriction,omitempty" tf:"scm_ip_restriction"`

	// +kubebuilder:validation:Optional
	ScmType *string `json:"scmType,omitempty" tf:"scm_type"`

	// +kubebuilder:validation:Optional
	ScmUseMainIPRestriction *bool `json:"scmUseMainIpRestriction,omitempty" tf:"scm_use_main_ip_restriction"`

	// +kubebuilder:validation:Optional
	Use32BitWorkerProcess *bool `json:"use32BitWorkerProcess,omitempty" tf:"use_32_bit_worker_process"`

	// +kubebuilder:validation:Optional
	VnetRouteAllEnabled *bool `json:"vnetRouteAllEnabled,omitempty" tf:"vnet_route_all_enabled"`

	// +kubebuilder:validation:Optional
	WebsocketsEnabled *bool `json:"websocketsEnabled,omitempty" tf:"websockets_enabled"`

	// +kubebuilder:validation:Optional
	WindowsFxVersion *string `json:"windowsFxVersion,omitempty" tf:"windows_fx_version"`
}

type SiteCredentialObservation struct {
	Password string `json:"password,omitempty" tf:"password"`

	Username string `json:"username,omitempty" tf:"username"`
}

type SiteCredentialParameters struct {
}

type SourceControlObservation struct {
}

type SourceControlParameters struct {

	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch"`

	// +kubebuilder:validation:Optional
	ManualIntegration *bool `json:"manualIntegration,omitempty" tf:"manual_integration"`

	// +kubebuilder:validation:Optional
	RepoURL *string `json:"repoUrl,omitempty" tf:"repo_url"`

	// +kubebuilder:validation:Optional
	RollbackEnabled *bool `json:"rollbackEnabled,omitempty" tf:"rollback_enabled"`

	// +kubebuilder:validation:Optional
	UseMercurial *bool `json:"useMercurial,omitempty" tf:"use_mercurial"`
}

type StorageAccountObservation struct {
}

type StorageAccountParameters struct {

	// +kubebuilder:validation:Required
	AccessKey string `json:"accessKey" tf:"access_key"`

	// +kubebuilder:validation:Required
	AccountName string `json:"accountName" tf:"account_name"`

	// +kubebuilder:validation:Optional
	MountPath *string `json:"mountPath,omitempty" tf:"mount_path"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Required
	ShareName string `json:"shareName" tf:"share_name"`

	// +kubebuilder:validation:Required
	Type string `json:"type" tf:"type"`
}

type TwitterObservation struct {
}

type TwitterParameters struct {

	// +kubebuilder:validation:Required
	ConsumerKey string `json:"consumerKey" tf:"consumer_key"`

	// +kubebuilder:validation:Required
	ConsumerSecret string `json:"consumerSecret" tf:"consumer_secret"`
}

// AppServiceSpec defines the desired state of AppService
type AppServiceSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       AppServiceParameters `json:"forProvider"`
}

// AppServiceStatus defines the observed state of AppService.
type AppServiceStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          AppServiceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AppService is the Schema for the AppServices API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type AppService struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AppServiceSpec   `json:"spec"`
	Status            AppServiceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AppServiceList contains a list of AppServices
type AppServiceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AppService `json:"items"`
}

// Repository type metadata.
var (
	AppServiceKind             = "AppService"
	AppServiceGroupKind        = schema.GroupKind{Group: Group, Kind: AppServiceKind}.String()
	AppServiceKindAPIVersion   = AppServiceKind + "." + GroupVersion.String()
	AppServiceGroupVersionKind = GroupVersion.WithKind(AppServiceKind)
)

func init() {
	SchemeBuilder.Register(&AppService{}, &AppServiceList{})
}
