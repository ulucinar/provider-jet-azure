/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type AppServiceSlotAuthSettingsObservation struct {
}

type AppServiceSlotAuthSettingsParameters struct {

	// +kubebuilder:validation:Optional
	ActiveDirectory []AuthSettingsActiveDirectoryParameters `json:"activeDirectory,omitempty" tf:"active_directory"`

	// +kubebuilder:validation:Optional
	AdditionalLoginParams map[string]string `json:"additionalLoginParams,omitempty" tf:"additional_login_params"`

	// +kubebuilder:validation:Optional
	AllowedExternalRedirectUrls []string `json:"allowedExternalRedirectUrls,omitempty" tf:"allowed_external_redirect_urls"`

	// +kubebuilder:validation:Optional
	DefaultProvider *string `json:"defaultProvider,omitempty" tf:"default_provider"`

	// +kubebuilder:validation:Required
	Enabled bool `json:"enabled" tf:"enabled"`

	// +kubebuilder:validation:Optional
	Facebook []AuthSettingsFacebookParameters `json:"facebook,omitempty" tf:"facebook"`

	// +kubebuilder:validation:Optional
	Google []AuthSettingsGoogleParameters `json:"google,omitempty" tf:"google"`

	// +kubebuilder:validation:Optional
	Issuer *string `json:"issuer,omitempty" tf:"issuer"`

	// +kubebuilder:validation:Optional
	Microsoft []AuthSettingsMicrosoftParameters `json:"microsoft,omitempty" tf:"microsoft"`

	// +kubebuilder:validation:Optional
	RuntimeVersion *string `json:"runtimeVersion,omitempty" tf:"runtime_version"`

	// +kubebuilder:validation:Optional
	TokenRefreshExtensionHours *float64 `json:"tokenRefreshExtensionHours,omitempty" tf:"token_refresh_extension_hours"`

	// +kubebuilder:validation:Optional
	TokenStoreEnabled *bool `json:"tokenStoreEnabled,omitempty" tf:"token_store_enabled"`

	// +kubebuilder:validation:Optional
	Twitter []AuthSettingsTwitterParameters `json:"twitter,omitempty" tf:"twitter"`

	// +kubebuilder:validation:Optional
	UnauthenticatedClientAction *string `json:"unauthenticatedClientAction,omitempty" tf:"unauthenticated_client_action"`
}

type AppServiceSlotConnectionStringObservation struct {
}

type AppServiceSlotConnectionStringParameters struct {

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Required
	Type string `json:"type" tf:"type"`

	// +kubebuilder:validation:Required
	Value string `json:"value" tf:"value"`
}

type AppServiceSlotIdentityObservation struct {
	PrincipalID string `json:"principalId,omitempty" tf:"principal_id"`

	TenantID string `json:"tenantId,omitempty" tf:"tenant_id"`
}

type AppServiceSlotIdentityParameters struct {

	// +kubebuilder:validation:Optional
	IdentityIds []string `json:"identityIds,omitempty" tf:"identity_ids"`

	// +kubebuilder:validation:Required
	Type string `json:"type" tf:"type"`
}

type AppServiceSlotLogsObservation struct {
}

type AppServiceSlotLogsParameters struct {

	// +kubebuilder:validation:Optional
	ApplicationLogs []LogsApplicationLogsParameters `json:"applicationLogs,omitempty" tf:"application_logs"`

	// +kubebuilder:validation:Optional
	DetailedErrorMessagesEnabled *bool `json:"detailedErrorMessagesEnabled,omitempty" tf:"detailed_error_messages_enabled"`

	// +kubebuilder:validation:Optional
	FailedRequestTracingEnabled *bool `json:"failedRequestTracingEnabled,omitempty" tf:"failed_request_tracing_enabled"`

	// +kubebuilder:validation:Optional
	HTTPLogs []LogsHTTPLogsParameters `json:"httpLogs,omitempty" tf:"http_logs"`
}

type AppServiceSlotObservation struct {
	DefaultSiteHostname string `json:"defaultSiteHostname,omitempty" tf:"default_site_hostname"`

	SiteCredential []AppServiceSlotSiteCredentialObservation `json:"siteCredential,omitempty" tf:"site_credential"`
}

type AppServiceSlotParameters struct {

	// +kubebuilder:validation:Required
	AppServiceName string `json:"appServiceName" tf:"app_service_name"`

	// +kubebuilder:validation:Required
	AppServicePlanID string `json:"appServicePlanId" tf:"app_service_plan_id"`

	// +kubebuilder:validation:Optional
	AppSettings map[string]string `json:"appSettings,omitempty" tf:"app_settings"`

	// +kubebuilder:validation:Optional
	AuthSettings []AppServiceSlotAuthSettingsParameters `json:"authSettings,omitempty" tf:"auth_settings"`

	// +kubebuilder:validation:Optional
	ClientAffinityEnabled *bool `json:"clientAffinityEnabled,omitempty" tf:"client_affinity_enabled"`

	// +kubebuilder:validation:Optional
	ConnectionString []AppServiceSlotConnectionStringParameters `json:"connectionString,omitempty" tf:"connection_string"`

	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled"`

	// +kubebuilder:validation:Optional
	HTTPSOnly *bool `json:"httpsOnly,omitempty" tf:"https_only"`

	// +kubebuilder:validation:Optional
	Identity []AppServiceSlotIdentityParameters `json:"identity,omitempty" tf:"identity"`

	// +kubebuilder:validation:Required
	Location string `json:"location" tf:"location"`

	// +kubebuilder:validation:Optional
	Logs []AppServiceSlotLogsParameters `json:"logs,omitempty" tf:"logs"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Required
	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name"`

	// +kubebuilder:validation:Optional
	SiteConfig []AppServiceSlotSiteConfigParameters `json:"siteConfig,omitempty" tf:"site_config"`

	// +kubebuilder:validation:Optional
	Tags map[string]string `json:"tags,omitempty" tf:"tags"`
}

type AppServiceSlotSiteConfigObservation struct {
}

type AppServiceSlotSiteConfigParameters struct {

	// +kubebuilder:validation:Optional
	AcrUseManagedIdentityCredentials *bool `json:"acrUseManagedIdentityCredentials,omitempty" tf:"acr_use_managed_identity_credentials"`

	// +kubebuilder:validation:Optional
	AcrUserManagedIdentityClientID *string `json:"acrUserManagedIdentityClientId,omitempty" tf:"acr_user_managed_identity_client_id"`

	// +kubebuilder:validation:Optional
	AlwaysOn *bool `json:"alwaysOn,omitempty" tf:"always_on"`

	// +kubebuilder:validation:Optional
	AppCommandLine *string `json:"appCommandLine,omitempty" tf:"app_command_line"`

	// +kubebuilder:validation:Optional
	AutoSwapSlotName *string `json:"autoSwapSlotName,omitempty" tf:"auto_swap_slot_name"`

	// +kubebuilder:validation:Optional
	Cors []SiteConfigCorsParameters `json:"cors,omitempty" tf:"cors"`

	// +kubebuilder:validation:Optional
	DefaultDocuments []string `json:"defaultDocuments,omitempty" tf:"default_documents"`

	// +kubebuilder:validation:Optional
	DotnetFrameworkVersion *string `json:"dotnetFrameworkVersion,omitempty" tf:"dotnet_framework_version"`

	// +kubebuilder:validation:Optional
	FtpsState *string `json:"ftpsState,omitempty" tf:"ftps_state"`

	// +kubebuilder:validation:Optional
	HealthCheckPath *string `json:"healthCheckPath,omitempty" tf:"health_check_path"`

	// +kubebuilder:validation:Optional
	Http2Enabled *bool `json:"http2Enabled,omitempty" tf:"http2_enabled"`

	// +kubebuilder:validation:Optional
	IPRestriction []SiteConfigIPRestrictionParameters `json:"ipRestriction,omitempty" tf:"ip_restriction"`

	// +kubebuilder:validation:Optional
	JavaContainer *string `json:"javaContainer,omitempty" tf:"java_container"`

	// +kubebuilder:validation:Optional
	JavaContainerVersion *string `json:"javaContainerVersion,omitempty" tf:"java_container_version"`

	// +kubebuilder:validation:Optional
	JavaVersion *string `json:"javaVersion,omitempty" tf:"java_version"`

	// +kubebuilder:validation:Optional
	LinuxFxVersion *string `json:"linuxFxVersion,omitempty" tf:"linux_fx_version"`

	// +kubebuilder:validation:Optional
	LocalMysqlEnabled *bool `json:"localMysqlEnabled,omitempty" tf:"local_mysql_enabled"`

	// +kubebuilder:validation:Optional
	ManagedPipelineMode *string `json:"managedPipelineMode,omitempty" tf:"managed_pipeline_mode"`

	// +kubebuilder:validation:Optional
	MinTLSVersion *string `json:"minTlsVersion,omitempty" tf:"min_tls_version"`

	// +kubebuilder:validation:Optional
	NumberOfWorkers *int64 `json:"numberOfWorkers,omitempty" tf:"number_of_workers"`

	// +kubebuilder:validation:Optional
	PhpVersion *string `json:"phpVersion,omitempty" tf:"php_version"`

	// +kubebuilder:validation:Optional
	PythonVersion *string `json:"pythonVersion,omitempty" tf:"python_version"`

	// +kubebuilder:validation:Optional
	RemoteDebuggingEnabled *bool `json:"remoteDebuggingEnabled,omitempty" tf:"remote_debugging_enabled"`

	// +kubebuilder:validation:Optional
	RemoteDebuggingVersion *string `json:"remoteDebuggingVersion,omitempty" tf:"remote_debugging_version"`

	// +kubebuilder:validation:Optional
	ScmIPRestriction []SiteConfigScmIPRestrictionParameters `json:"scmIpRestriction,omitempty" tf:"scm_ip_restriction"`

	// +kubebuilder:validation:Optional
	ScmType *string `json:"scmType,omitempty" tf:"scm_type"`

	// +kubebuilder:validation:Optional
	ScmUseMainIPRestriction *bool `json:"scmUseMainIpRestriction,omitempty" tf:"scm_use_main_ip_restriction"`

	// +kubebuilder:validation:Optional
	Use32BitWorkerProcess *bool `json:"use32BitWorkerProcess,omitempty" tf:"use_32_bit_worker_process"`

	// +kubebuilder:validation:Optional
	VnetRouteAllEnabled *bool `json:"vnetRouteAllEnabled,omitempty" tf:"vnet_route_all_enabled"`

	// +kubebuilder:validation:Optional
	WebsocketsEnabled *bool `json:"websocketsEnabled,omitempty" tf:"websockets_enabled"`

	// +kubebuilder:validation:Optional
	WindowsFxVersion *string `json:"windowsFxVersion,omitempty" tf:"windows_fx_version"`
}

type AppServiceSlotSiteCredentialObservation struct {
	Password string `json:"password,omitempty" tf:"password"`

	Username string `json:"username,omitempty" tf:"username"`
}

type AppServiceSlotSiteCredentialParameters struct {
}

type ApplicationLogsAzureBlobStorageObservation struct {
}

type ApplicationLogsAzureBlobStorageParameters struct {

	// +kubebuilder:validation:Required
	Level string `json:"level" tf:"level"`

	// +kubebuilder:validation:Required
	RetentionInDays int64 `json:"retentionInDays" tf:"retention_in_days"`

	// +kubebuilder:validation:Required
	SasURL string `json:"sasUrl" tf:"sas_url"`
}

type AuthSettingsActiveDirectoryObservation struct {
}

type AuthSettingsActiveDirectoryParameters struct {

	// +kubebuilder:validation:Optional
	AllowedAudiences []string `json:"allowedAudiences,omitempty" tf:"allowed_audiences"`

	// +kubebuilder:validation:Required
	ClientID string `json:"clientId" tf:"client_id"`

	// +kubebuilder:validation:Optional
	ClientSecret *string `json:"clientSecret,omitempty" tf:"client_secret"`
}

type AuthSettingsFacebookObservation struct {
}

type AuthSettingsFacebookParameters struct {

	// +kubebuilder:validation:Required
	AppID string `json:"appId" tf:"app_id"`

	// +kubebuilder:validation:Required
	AppSecret string `json:"appSecret" tf:"app_secret"`

	// +kubebuilder:validation:Optional
	OauthScopes []string `json:"oauthScopes,omitempty" tf:"oauth_scopes"`
}

type AuthSettingsGoogleObservation struct {
}

type AuthSettingsGoogleParameters struct {

	// +kubebuilder:validation:Required
	ClientID string `json:"clientId" tf:"client_id"`

	// +kubebuilder:validation:Required
	ClientSecret string `json:"clientSecret" tf:"client_secret"`

	// +kubebuilder:validation:Optional
	OauthScopes []string `json:"oauthScopes,omitempty" tf:"oauth_scopes"`
}

type AuthSettingsMicrosoftObservation struct {
}

type AuthSettingsMicrosoftParameters struct {

	// +kubebuilder:validation:Required
	ClientID string `json:"clientId" tf:"client_id"`

	// +kubebuilder:validation:Required
	ClientSecret string `json:"clientSecret" tf:"client_secret"`

	// +kubebuilder:validation:Optional
	OauthScopes []string `json:"oauthScopes,omitempty" tf:"oauth_scopes"`
}

type AuthSettingsTwitterObservation struct {
}

type AuthSettingsTwitterParameters struct {

	// +kubebuilder:validation:Required
	ConsumerKey string `json:"consumerKey" tf:"consumer_key"`

	// +kubebuilder:validation:Required
	ConsumerSecret string `json:"consumerSecret" tf:"consumer_secret"`
}

type HTTPLogsFileSystemObservation struct {
}

type HTTPLogsFileSystemParameters struct {

	// +kubebuilder:validation:Required
	RetentionInDays int64 `json:"retentionInDays" tf:"retention_in_days"`

	// +kubebuilder:validation:Required
	RetentionInMb int64 `json:"retentionInMb" tf:"retention_in_mb"`
}

type IPRestrictionHeadersObservation struct {
}

type IPRestrictionHeadersParameters struct {

	// +kubebuilder:validation:Optional
	XAzureFdid []string `json:"xAzureFdid,omitempty" tf:"x_azure_fdid"`

	// +kubebuilder:validation:Optional
	XFdHealthProbe []string `json:"xFdHealthProbe,omitempty" tf:"x_fd_health_probe"`

	// +kubebuilder:validation:Optional
	XForwardedFor []string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for"`

	// +kubebuilder:validation:Optional
	XForwardedHost []string `json:"xForwardedHost,omitempty" tf:"x_forwarded_host"`
}

type LogsApplicationLogsObservation struct {
}

type LogsApplicationLogsParameters struct {

	// +kubebuilder:validation:Optional
	AzureBlobStorage []ApplicationLogsAzureBlobStorageParameters `json:"azureBlobStorage,omitempty" tf:"azure_blob_storage"`

	// +kubebuilder:validation:Optional
	FileSystemLevel *string `json:"fileSystemLevel,omitempty" tf:"file_system_level"`
}

type LogsHTTPLogsAzureBlobStorageObservation struct {
}

type LogsHTTPLogsAzureBlobStorageParameters struct {

	// +kubebuilder:validation:Required
	RetentionInDays int64 `json:"retentionInDays" tf:"retention_in_days"`

	// +kubebuilder:validation:Required
	SasURL string `json:"sasUrl" tf:"sas_url"`
}

type LogsHTTPLogsObservation struct {
}

type LogsHTTPLogsParameters struct {

	// +kubebuilder:validation:Optional
	AzureBlobStorage []LogsHTTPLogsAzureBlobStorageParameters `json:"azureBlobStorage,omitempty" tf:"azure_blob_storage"`

	// +kubebuilder:validation:Optional
	FileSystem []HTTPLogsFileSystemParameters `json:"fileSystem,omitempty" tf:"file_system"`
}

type SiteConfigCorsObservation struct {
}

type SiteConfigCorsParameters struct {

	// +kubebuilder:validation:Required
	AllowedOrigins []string `json:"allowedOrigins" tf:"allowed_origins"`

	// +kubebuilder:validation:Optional
	SupportCredentials *bool `json:"supportCredentials,omitempty" tf:"support_credentials"`
}

type SiteConfigIPRestrictionObservation struct {
}

type SiteConfigIPRestrictionParameters struct {

	// +kubebuilder:validation:Optional
	Action *string `json:"action,omitempty" tf:"action"`

	// +kubebuilder:validation:Optional
	Headers []IPRestrictionHeadersParameters `json:"headers,omitempty" tf:"headers"`

	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name"`

	// +kubebuilder:validation:Optional
	Priority *int64 `json:"priority,omitempty" tf:"priority"`

	// +kubebuilder:validation:Optional
	ServiceTag *string `json:"serviceTag,omitempty" tf:"service_tag"`

	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetId,omitempty" tf:"virtual_network_subnet_id"`
}

type SiteConfigScmIPRestrictionHeadersObservation struct {
}

type SiteConfigScmIPRestrictionHeadersParameters struct {

	// +kubebuilder:validation:Optional
	XAzureFdid []string `json:"xAzureFdid,omitempty" tf:"x_azure_fdid"`

	// +kubebuilder:validation:Optional
	XFdHealthProbe []string `json:"xFdHealthProbe,omitempty" tf:"x_fd_health_probe"`

	// +kubebuilder:validation:Optional
	XForwardedFor []string `json:"xForwardedFor,omitempty" tf:"x_forwarded_for"`

	// +kubebuilder:validation:Optional
	XForwardedHost []string `json:"xForwardedHost,omitempty" tf:"x_forwarded_host"`
}

type SiteConfigScmIPRestrictionObservation struct {
}

type SiteConfigScmIPRestrictionParameters struct {

	// +kubebuilder:validation:Optional
	Action *string `json:"action,omitempty" tf:"action"`

	// +kubebuilder:validation:Optional
	Headers []SiteConfigScmIPRestrictionHeadersParameters `json:"headers,omitempty" tf:"headers"`

	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name"`

	// +kubebuilder:validation:Optional
	Priority *int64 `json:"priority,omitempty" tf:"priority"`

	// +kubebuilder:validation:Optional
	ServiceTag *string `json:"serviceTag,omitempty" tf:"service_tag"`

	// +kubebuilder:validation:Optional
	VirtualNetworkSubnetID *string `json:"virtualNetworkSubnetId,omitempty" tf:"virtual_network_subnet_id"`
}

// AppServiceSlotSpec defines the desired state of AppServiceSlot
type AppServiceSlotSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       AppServiceSlotParameters `json:"forProvider"`
}

// AppServiceSlotStatus defines the observed state of AppServiceSlot.
type AppServiceSlotStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          AppServiceSlotObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AppServiceSlot is the Schema for the AppServiceSlots API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type AppServiceSlot struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AppServiceSlotSpec   `json:"spec"`
	Status            AppServiceSlotStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AppServiceSlotList contains a list of AppServiceSlots
type AppServiceSlotList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AppServiceSlot `json:"items"`
}

// Repository type metadata.
var (
	AppServiceSlotKind             = "AppServiceSlot"
	AppServiceSlotGroupKind        = schema.GroupKind{Group: Group, Kind: AppServiceSlotKind}.String()
	AppServiceSlotKindAPIVersion   = AppServiceSlotKind + "." + GroupVersion.String()
	AppServiceSlotGroupVersionKind = GroupVersion.WithKind(AppServiceSlotKind)
)

func init() {
	SchemeBuilder.Register(&AppServiceSlot{}, &AppServiceSlotList{})
}
