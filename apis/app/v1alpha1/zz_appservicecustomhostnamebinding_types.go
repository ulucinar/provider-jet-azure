/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type AppServiceCustomHostnameBindingObservation struct {
	VirtualIP string `json:"virtualIp,omitempty" tf:"virtual_ip"`
}

type AppServiceCustomHostnameBindingParameters struct {

	// +kubebuilder:validation:Required
	AppServiceName string `json:"appServiceName" tf:"app_service_name"`

	// +kubebuilder:validation:Required
	Hostname string `json:"hostname" tf:"hostname"`

	// +kubebuilder:validation:Required
	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name"`

	// +kubebuilder:validation:Optional
	SslState *string `json:"sslState,omitempty" tf:"ssl_state"`

	// +kubebuilder:validation:Optional
	Thumbprint *string `json:"thumbprint,omitempty" tf:"thumbprint"`
}

// AppServiceCustomHostnameBindingSpec defines the desired state of AppServiceCustomHostnameBinding
type AppServiceCustomHostnameBindingSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       AppServiceCustomHostnameBindingParameters `json:"forProvider"`
}

// AppServiceCustomHostnameBindingStatus defines the observed state of AppServiceCustomHostnameBinding.
type AppServiceCustomHostnameBindingStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          AppServiceCustomHostnameBindingObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AppServiceCustomHostnameBinding is the Schema for the AppServiceCustomHostnameBindings API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type AppServiceCustomHostnameBinding struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AppServiceCustomHostnameBindingSpec   `json:"spec"`
	Status            AppServiceCustomHostnameBindingStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AppServiceCustomHostnameBindingList contains a list of AppServiceCustomHostnameBindings
type AppServiceCustomHostnameBindingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AppServiceCustomHostnameBinding `json:"items"`
}

// Repository type metadata.
var (
	AppServiceCustomHostnameBindingKind             = "AppServiceCustomHostnameBinding"
	AppServiceCustomHostnameBindingGroupKind        = schema.GroupKind{Group: Group, Kind: AppServiceCustomHostnameBindingKind}.String()
	AppServiceCustomHostnameBindingKindAPIVersion   = AppServiceCustomHostnameBindingKind + "." + GroupVersion.String()
	AppServiceCustomHostnameBindingGroupVersionKind = GroupVersion.WithKind(AppServiceCustomHostnameBindingKind)
)

func init() {
	SchemeBuilder.Register(&AppServiceCustomHostnameBinding{}, &AppServiceCustomHostnameBindingList{})
}
