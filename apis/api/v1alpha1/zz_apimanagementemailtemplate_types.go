/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type ApiManagementEmailTemplateObservation struct {
	Description string `json:"description,omitempty" tf:"description"`

	Title string `json:"title,omitempty" tf:"title"`
}

type ApiManagementEmailTemplateParameters struct {

	// +kubebuilder:validation:Required
	APIManagementName string `json:"apiManagementName" tf:"api_management_name"`

	// +kubebuilder:validation:Required
	Body string `json:"body" tf:"body"`

	// +kubebuilder:validation:Required
	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name"`

	// +kubebuilder:validation:Required
	Subject string `json:"subject" tf:"subject"`

	// +kubebuilder:validation:Required
	TemplateName string `json:"templateName" tf:"template_name"`
}

// ApiManagementEmailTemplateSpec defines the desired state of ApiManagementEmailTemplate
type ApiManagementEmailTemplateSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       ApiManagementEmailTemplateParameters `json:"forProvider"`
}

// ApiManagementEmailTemplateStatus defines the observed state of ApiManagementEmailTemplate.
type ApiManagementEmailTemplateStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          ApiManagementEmailTemplateObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ApiManagementEmailTemplate is the Schema for the ApiManagementEmailTemplates API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type ApiManagementEmailTemplate struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ApiManagementEmailTemplateSpec   `json:"spec"`
	Status            ApiManagementEmailTemplateStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ApiManagementEmailTemplateList contains a list of ApiManagementEmailTemplates
type ApiManagementEmailTemplateList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ApiManagementEmailTemplate `json:"items"`
}

// Repository type metadata.
var (
	ApiManagementEmailTemplateKind             = "ApiManagementEmailTemplate"
	ApiManagementEmailTemplateGroupKind        = schema.GroupKind{Group: Group, Kind: ApiManagementEmailTemplateKind}.String()
	ApiManagementEmailTemplateKindAPIVersion   = ApiManagementEmailTemplateKind + "." + GroupVersion.String()
	ApiManagementEmailTemplateGroupVersionKind = GroupVersion.WithKind(ApiManagementEmailTemplateKind)
)

func init() {
	SchemeBuilder.Register(&ApiManagementEmailTemplate{}, &ApiManagementEmailTemplateList{})
}
