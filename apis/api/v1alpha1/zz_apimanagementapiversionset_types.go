/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type ApiManagementApiVersionSetObservation struct {
}

type ApiManagementApiVersionSetParameters struct {

	// +kubebuilder:validation:Required
	APIManagementName string `json:"apiManagementName" tf:"api_management_name"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description"`

	// +kubebuilder:validation:Required
	DisplayName string `json:"displayName" tf:"display_name"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Required
	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name"`

	// +kubebuilder:validation:Optional
	VersionHeaderName *string `json:"versionHeaderName,omitempty" tf:"version_header_name"`

	// +kubebuilder:validation:Optional
	VersionQueryName *string `json:"versionQueryName,omitempty" tf:"version_query_name"`

	// +kubebuilder:validation:Required
	VersioningScheme string `json:"versioningScheme" tf:"versioning_scheme"`
}

// ApiManagementApiVersionSetSpec defines the desired state of ApiManagementApiVersionSet
type ApiManagementApiVersionSetSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       ApiManagementApiVersionSetParameters `json:"forProvider"`
}

// ApiManagementApiVersionSetStatus defines the observed state of ApiManagementApiVersionSet.
type ApiManagementApiVersionSetStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          ApiManagementApiVersionSetObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ApiManagementApiVersionSet is the Schema for the ApiManagementApiVersionSets API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type ApiManagementApiVersionSet struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ApiManagementApiVersionSetSpec   `json:"spec"`
	Status            ApiManagementApiVersionSetStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ApiManagementApiVersionSetList contains a list of ApiManagementApiVersionSets
type ApiManagementApiVersionSetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ApiManagementApiVersionSet `json:"items"`
}

// Repository type metadata.
var (
	ApiManagementApiVersionSetKind             = "ApiManagementApiVersionSet"
	ApiManagementApiVersionSetGroupKind        = schema.GroupKind{Group: Group, Kind: ApiManagementApiVersionSetKind}.String()
	ApiManagementApiVersionSetKindAPIVersion   = ApiManagementApiVersionSetKind + "." + GroupVersion.String()
	ApiManagementApiVersionSetGroupVersionKind = GroupVersion.WithKind(ApiManagementApiVersionSetKind)
)

func init() {
	SchemeBuilder.Register(&ApiManagementApiVersionSet{}, &ApiManagementApiVersionSetList{})
}
