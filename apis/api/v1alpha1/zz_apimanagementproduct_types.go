/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type ApiManagementProductObservation struct {
}

type ApiManagementProductParameters struct {

	// +kubebuilder:validation:Required
	APIManagementName string `json:"apiManagementName" tf:"api_management_name"`

	// +kubebuilder:validation:Optional
	ApprovalRequired *bool `json:"approvalRequired,omitempty" tf:"approval_required"`

	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description"`

	// +kubebuilder:validation:Required
	DisplayName string `json:"displayName" tf:"display_name"`

	// +kubebuilder:validation:Required
	ProductID string `json:"productId" tf:"product_id"`

	// +kubebuilder:validation:Required
	Published bool `json:"published" tf:"published"`

	// +kubebuilder:validation:Required
	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name"`

	// +kubebuilder:validation:Required
	SubscriptionRequired bool `json:"subscriptionRequired" tf:"subscription_required"`

	// +kubebuilder:validation:Optional
	SubscriptionsLimit *int64 `json:"subscriptionsLimit,omitempty" tf:"subscriptions_limit"`

	// +kubebuilder:validation:Optional
	Terms *string `json:"terms,omitempty" tf:"terms"`
}

// ApiManagementProductSpec defines the desired state of ApiManagementProduct
type ApiManagementProductSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       ApiManagementProductParameters `json:"forProvider"`
}

// ApiManagementProductStatus defines the observed state of ApiManagementProduct.
type ApiManagementProductStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          ApiManagementProductObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ApiManagementProduct is the Schema for the ApiManagementProducts API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type ApiManagementProduct struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ApiManagementProductSpec   `json:"spec"`
	Status            ApiManagementProductStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ApiManagementProductList contains a list of ApiManagementProducts
type ApiManagementProductList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ApiManagementProduct `json:"items"`
}

// Repository type metadata.
var (
	ApiManagementProductKind             = "ApiManagementProduct"
	ApiManagementProductGroupKind        = schema.GroupKind{Group: Group, Kind: ApiManagementProductKind}.String()
	ApiManagementProductKindAPIVersion   = ApiManagementProductKind + "." + GroupVersion.String()
	ApiManagementProductGroupVersionKind = GroupVersion.WithKind(ApiManagementProductKind)
)

func init() {
	SchemeBuilder.Register(&ApiManagementProduct{}, &ApiManagementProductList{})
}
