/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type ApiManagementNotificationRecipientEmailObservation struct {
}

type ApiManagementNotificationRecipientEmailParameters struct {

	// +kubebuilder:validation:Required
	APIManagementID string `json:"apiManagementId" tf:"api_management_id"`

	// +kubebuilder:validation:Required
	Email string `json:"email" tf:"email"`

	// +kubebuilder:validation:Required
	NotificationType string `json:"notificationType" tf:"notification_type"`
}

// ApiManagementNotificationRecipientEmailSpec defines the desired state of ApiManagementNotificationRecipientEmail
type ApiManagementNotificationRecipientEmailSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       ApiManagementNotificationRecipientEmailParameters `json:"forProvider"`
}

// ApiManagementNotificationRecipientEmailStatus defines the observed state of ApiManagementNotificationRecipientEmail.
type ApiManagementNotificationRecipientEmailStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          ApiManagementNotificationRecipientEmailObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ApiManagementNotificationRecipientEmail is the Schema for the ApiManagementNotificationRecipientEmails API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type ApiManagementNotificationRecipientEmail struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ApiManagementNotificationRecipientEmailSpec   `json:"spec"`
	Status            ApiManagementNotificationRecipientEmailStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ApiManagementNotificationRecipientEmailList contains a list of ApiManagementNotificationRecipientEmails
type ApiManagementNotificationRecipientEmailList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ApiManagementNotificationRecipientEmail `json:"items"`
}

// Repository type metadata.
var (
	ApiManagementNotificationRecipientEmailKind             = "ApiManagementNotificationRecipientEmail"
	ApiManagementNotificationRecipientEmailGroupKind        = schema.GroupKind{Group: Group, Kind: ApiManagementNotificationRecipientEmailKind}.String()
	ApiManagementNotificationRecipientEmailKindAPIVersion   = ApiManagementNotificationRecipientEmailKind + "." + GroupVersion.String()
	ApiManagementNotificationRecipientEmailGroupVersionKind = GroupVersion.WithKind(ApiManagementNotificationRecipientEmailKind)
)

func init() {
	SchemeBuilder.Register(&ApiManagementNotificationRecipientEmail{}, &ApiManagementNotificationRecipientEmailList{})
}
