/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type ApiManagementIdentityProviderMicrosoftObservation struct {
}

type ApiManagementIdentityProviderMicrosoftParameters struct {

	// +kubebuilder:validation:Required
	APIManagementName string `json:"apiManagementName" tf:"api_management_name"`

	// +kubebuilder:validation:Required
	ClientID string `json:"clientId" tf:"client_id"`

	// +kubebuilder:validation:Required
	ClientSecret string `json:"clientSecret" tf:"client_secret"`

	// +kubebuilder:validation:Required
	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name"`
}

// ApiManagementIdentityProviderMicrosoftSpec defines the desired state of ApiManagementIdentityProviderMicrosoft
type ApiManagementIdentityProviderMicrosoftSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       ApiManagementIdentityProviderMicrosoftParameters `json:"forProvider"`
}

// ApiManagementIdentityProviderMicrosoftStatus defines the observed state of ApiManagementIdentityProviderMicrosoft.
type ApiManagementIdentityProviderMicrosoftStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          ApiManagementIdentityProviderMicrosoftObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ApiManagementIdentityProviderMicrosoft is the Schema for the ApiManagementIdentityProviderMicrosofts API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type ApiManagementIdentityProviderMicrosoft struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ApiManagementIdentityProviderMicrosoftSpec   `json:"spec"`
	Status            ApiManagementIdentityProviderMicrosoftStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ApiManagementIdentityProviderMicrosoftList contains a list of ApiManagementIdentityProviderMicrosofts
type ApiManagementIdentityProviderMicrosoftList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ApiManagementIdentityProviderMicrosoft `json:"items"`
}

// Repository type metadata.
var (
	ApiManagementIdentityProviderMicrosoftKind             = "ApiManagementIdentityProviderMicrosoft"
	ApiManagementIdentityProviderMicrosoftGroupKind        = schema.GroupKind{Group: Group, Kind: ApiManagementIdentityProviderMicrosoftKind}.String()
	ApiManagementIdentityProviderMicrosoftKindAPIVersion   = ApiManagementIdentityProviderMicrosoftKind + "." + GroupVersion.String()
	ApiManagementIdentityProviderMicrosoftGroupVersionKind = GroupVersion.WithKind(ApiManagementIdentityProviderMicrosoftKind)
)

func init() {
	SchemeBuilder.Register(&ApiManagementIdentityProviderMicrosoft{}, &ApiManagementIdentityProviderMicrosoftList{})
}
