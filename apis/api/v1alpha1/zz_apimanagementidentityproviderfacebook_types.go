/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type ApiManagementIdentityProviderFacebookObservation struct {
}

type ApiManagementIdentityProviderFacebookParameters struct {

	// +kubebuilder:validation:Required
	APIManagementName string `json:"apiManagementName" tf:"api_management_name"`

	// +kubebuilder:validation:Required
	AppID string `json:"appId" tf:"app_id"`

	// +kubebuilder:validation:Required
	AppSecret string `json:"appSecret" tf:"app_secret"`

	// +kubebuilder:validation:Required
	ResourceGroupName string `json:"resourceGroupName" tf:"resource_group_name"`
}

// ApiManagementIdentityProviderFacebookSpec defines the desired state of ApiManagementIdentityProviderFacebook
type ApiManagementIdentityProviderFacebookSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       ApiManagementIdentityProviderFacebookParameters `json:"forProvider"`
}

// ApiManagementIdentityProviderFacebookStatus defines the observed state of ApiManagementIdentityProviderFacebook.
type ApiManagementIdentityProviderFacebookStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          ApiManagementIdentityProviderFacebookObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ApiManagementIdentityProviderFacebook is the Schema for the ApiManagementIdentityProviderFacebooks API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type ApiManagementIdentityProviderFacebook struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ApiManagementIdentityProviderFacebookSpec   `json:"spec"`
	Status            ApiManagementIdentityProviderFacebookStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ApiManagementIdentityProviderFacebookList contains a list of ApiManagementIdentityProviderFacebooks
type ApiManagementIdentityProviderFacebookList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ApiManagementIdentityProviderFacebook `json:"items"`
}

// Repository type metadata.
var (
	ApiManagementIdentityProviderFacebookKind             = "ApiManagementIdentityProviderFacebook"
	ApiManagementIdentityProviderFacebookGroupKind        = schema.GroupKind{Group: Group, Kind: ApiManagementIdentityProviderFacebookKind}.String()
	ApiManagementIdentityProviderFacebookKindAPIVersion   = ApiManagementIdentityProviderFacebookKind + "." + GroupVersion.String()
	ApiManagementIdentityProviderFacebookGroupVersionKind = GroupVersion.WithKind(ApiManagementIdentityProviderFacebookKind)
)

func init() {
	SchemeBuilder.Register(&ApiManagementIdentityProviderFacebook{}, &ApiManagementIdentityProviderFacebookList{})
}
