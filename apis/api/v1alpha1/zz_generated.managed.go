/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this ApiManagement.
func (mg *ApiManagement) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagement.
func (mg *ApiManagement) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagement.
func (mg *ApiManagement) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagement.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagement) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagement.
func (mg *ApiManagement) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagement.
func (mg *ApiManagement) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagement.
func (mg *ApiManagement) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagement.
func (mg *ApiManagement) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagement.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagement) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagement.
func (mg *ApiManagement) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementApi.
func (mg *ApiManagementApi) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementApi.
func (mg *ApiManagementApi) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementApi.
func (mg *ApiManagementApi) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementApi.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementApi) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementApi.
func (mg *ApiManagementApi) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementApi.
func (mg *ApiManagementApi) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementApi.
func (mg *ApiManagementApi) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementApi.
func (mg *ApiManagementApi) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementApi.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementApi) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementApi.
func (mg *ApiManagementApi) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementApiDiagnostic.
func (mg *ApiManagementApiDiagnostic) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementApiDiagnostic.
func (mg *ApiManagementApiDiagnostic) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementApiDiagnostic.
func (mg *ApiManagementApiDiagnostic) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementApiDiagnostic.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementApiDiagnostic) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementApiDiagnostic.
func (mg *ApiManagementApiDiagnostic) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementApiDiagnostic.
func (mg *ApiManagementApiDiagnostic) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementApiDiagnostic.
func (mg *ApiManagementApiDiagnostic) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementApiDiagnostic.
func (mg *ApiManagementApiDiagnostic) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementApiDiagnostic.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementApiDiagnostic) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementApiDiagnostic.
func (mg *ApiManagementApiDiagnostic) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementApiOperation.
func (mg *ApiManagementApiOperation) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementApiOperation.
func (mg *ApiManagementApiOperation) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementApiOperation.
func (mg *ApiManagementApiOperation) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementApiOperation.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementApiOperation) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementApiOperation.
func (mg *ApiManagementApiOperation) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementApiOperation.
func (mg *ApiManagementApiOperation) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementApiOperation.
func (mg *ApiManagementApiOperation) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementApiOperation.
func (mg *ApiManagementApiOperation) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementApiOperation.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementApiOperation) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementApiOperation.
func (mg *ApiManagementApiOperation) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementApiOperationPolicy.
func (mg *ApiManagementApiOperationPolicy) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementApiOperationPolicy.
func (mg *ApiManagementApiOperationPolicy) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementApiOperationPolicy.
func (mg *ApiManagementApiOperationPolicy) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementApiOperationPolicy.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementApiOperationPolicy) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementApiOperationPolicy.
func (mg *ApiManagementApiOperationPolicy) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementApiOperationPolicy.
func (mg *ApiManagementApiOperationPolicy) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementApiOperationPolicy.
func (mg *ApiManagementApiOperationPolicy) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementApiOperationPolicy.
func (mg *ApiManagementApiOperationPolicy) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementApiOperationPolicy.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementApiOperationPolicy) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementApiOperationPolicy.
func (mg *ApiManagementApiOperationPolicy) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementApiOperationTag.
func (mg *ApiManagementApiOperationTag) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementApiOperationTag.
func (mg *ApiManagementApiOperationTag) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementApiOperationTag.
func (mg *ApiManagementApiOperationTag) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementApiOperationTag.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementApiOperationTag) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementApiOperationTag.
func (mg *ApiManagementApiOperationTag) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementApiOperationTag.
func (mg *ApiManagementApiOperationTag) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementApiOperationTag.
func (mg *ApiManagementApiOperationTag) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementApiOperationTag.
func (mg *ApiManagementApiOperationTag) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementApiOperationTag.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementApiOperationTag) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementApiOperationTag.
func (mg *ApiManagementApiOperationTag) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementApiPolicy.
func (mg *ApiManagementApiPolicy) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementApiPolicy.
func (mg *ApiManagementApiPolicy) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementApiPolicy.
func (mg *ApiManagementApiPolicy) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementApiPolicy.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementApiPolicy) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementApiPolicy.
func (mg *ApiManagementApiPolicy) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementApiPolicy.
func (mg *ApiManagementApiPolicy) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementApiPolicy.
func (mg *ApiManagementApiPolicy) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementApiPolicy.
func (mg *ApiManagementApiPolicy) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementApiPolicy.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementApiPolicy) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementApiPolicy.
func (mg *ApiManagementApiPolicy) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementApiRelease.
func (mg *ApiManagementApiRelease) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementApiRelease.
func (mg *ApiManagementApiRelease) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementApiRelease.
func (mg *ApiManagementApiRelease) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementApiRelease.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementApiRelease) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementApiRelease.
func (mg *ApiManagementApiRelease) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementApiRelease.
func (mg *ApiManagementApiRelease) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementApiRelease.
func (mg *ApiManagementApiRelease) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementApiRelease.
func (mg *ApiManagementApiRelease) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementApiRelease.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementApiRelease) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementApiRelease.
func (mg *ApiManagementApiRelease) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementApiSchema.
func (mg *ApiManagementApiSchema) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementApiSchema.
func (mg *ApiManagementApiSchema) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementApiSchema.
func (mg *ApiManagementApiSchema) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementApiSchema.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementApiSchema) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementApiSchema.
func (mg *ApiManagementApiSchema) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementApiSchema.
func (mg *ApiManagementApiSchema) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementApiSchema.
func (mg *ApiManagementApiSchema) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementApiSchema.
func (mg *ApiManagementApiSchema) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementApiSchema.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementApiSchema) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementApiSchema.
func (mg *ApiManagementApiSchema) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementApiVersionSet.
func (mg *ApiManagementApiVersionSet) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementApiVersionSet.
func (mg *ApiManagementApiVersionSet) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementApiVersionSet.
func (mg *ApiManagementApiVersionSet) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementApiVersionSet.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementApiVersionSet) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementApiVersionSet.
func (mg *ApiManagementApiVersionSet) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementApiVersionSet.
func (mg *ApiManagementApiVersionSet) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementApiVersionSet.
func (mg *ApiManagementApiVersionSet) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementApiVersionSet.
func (mg *ApiManagementApiVersionSet) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementApiVersionSet.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementApiVersionSet) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementApiVersionSet.
func (mg *ApiManagementApiVersionSet) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementAuthorizationServer.
func (mg *ApiManagementAuthorizationServer) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementAuthorizationServer.
func (mg *ApiManagementAuthorizationServer) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementAuthorizationServer.
func (mg *ApiManagementAuthorizationServer) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementAuthorizationServer.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementAuthorizationServer) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementAuthorizationServer.
func (mg *ApiManagementAuthorizationServer) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementAuthorizationServer.
func (mg *ApiManagementAuthorizationServer) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementAuthorizationServer.
func (mg *ApiManagementAuthorizationServer) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementAuthorizationServer.
func (mg *ApiManagementAuthorizationServer) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementAuthorizationServer.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementAuthorizationServer) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementAuthorizationServer.
func (mg *ApiManagementAuthorizationServer) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementBackend.
func (mg *ApiManagementBackend) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementBackend.
func (mg *ApiManagementBackend) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementBackend.
func (mg *ApiManagementBackend) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementBackend.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementBackend) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementBackend.
func (mg *ApiManagementBackend) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementBackend.
func (mg *ApiManagementBackend) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementBackend.
func (mg *ApiManagementBackend) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementBackend.
func (mg *ApiManagementBackend) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementBackend.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementBackend) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementBackend.
func (mg *ApiManagementBackend) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementCertificate.
func (mg *ApiManagementCertificate) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementCertificate.
func (mg *ApiManagementCertificate) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementCertificate.
func (mg *ApiManagementCertificate) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementCertificate.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementCertificate) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementCertificate.
func (mg *ApiManagementCertificate) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementCertificate.
func (mg *ApiManagementCertificate) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementCertificate.
func (mg *ApiManagementCertificate) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementCertificate.
func (mg *ApiManagementCertificate) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementCertificate.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementCertificate) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementCertificate.
func (mg *ApiManagementCertificate) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementCustomDomain.
func (mg *ApiManagementCustomDomain) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementCustomDomain.
func (mg *ApiManagementCustomDomain) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementCustomDomain.
func (mg *ApiManagementCustomDomain) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementCustomDomain.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementCustomDomain) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementCustomDomain.
func (mg *ApiManagementCustomDomain) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementCustomDomain.
func (mg *ApiManagementCustomDomain) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementCustomDomain.
func (mg *ApiManagementCustomDomain) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementCustomDomain.
func (mg *ApiManagementCustomDomain) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementCustomDomain.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementCustomDomain) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementCustomDomain.
func (mg *ApiManagementCustomDomain) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementDiagnostic.
func (mg *ApiManagementDiagnostic) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementDiagnostic.
func (mg *ApiManagementDiagnostic) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementDiagnostic.
func (mg *ApiManagementDiagnostic) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementDiagnostic.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementDiagnostic) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementDiagnostic.
func (mg *ApiManagementDiagnostic) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementDiagnostic.
func (mg *ApiManagementDiagnostic) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementDiagnostic.
func (mg *ApiManagementDiagnostic) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementDiagnostic.
func (mg *ApiManagementDiagnostic) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementDiagnostic.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementDiagnostic) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementDiagnostic.
func (mg *ApiManagementDiagnostic) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementEmailTemplate.
func (mg *ApiManagementEmailTemplate) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementEmailTemplate.
func (mg *ApiManagementEmailTemplate) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementEmailTemplate.
func (mg *ApiManagementEmailTemplate) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementEmailTemplate.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementEmailTemplate) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementEmailTemplate.
func (mg *ApiManagementEmailTemplate) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementEmailTemplate.
func (mg *ApiManagementEmailTemplate) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementEmailTemplate.
func (mg *ApiManagementEmailTemplate) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementEmailTemplate.
func (mg *ApiManagementEmailTemplate) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementEmailTemplate.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementEmailTemplate) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementEmailTemplate.
func (mg *ApiManagementEmailTemplate) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementGateway.
func (mg *ApiManagementGateway) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementGateway.
func (mg *ApiManagementGateway) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementGateway.
func (mg *ApiManagementGateway) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementGateway.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementGateway) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementGateway.
func (mg *ApiManagementGateway) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementGateway.
func (mg *ApiManagementGateway) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementGateway.
func (mg *ApiManagementGateway) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementGateway.
func (mg *ApiManagementGateway) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementGateway.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementGateway) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementGateway.
func (mg *ApiManagementGateway) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementGatewayApi.
func (mg *ApiManagementGatewayApi) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementGatewayApi.
func (mg *ApiManagementGatewayApi) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementGatewayApi.
func (mg *ApiManagementGatewayApi) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementGatewayApi.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementGatewayApi) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementGatewayApi.
func (mg *ApiManagementGatewayApi) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementGatewayApi.
func (mg *ApiManagementGatewayApi) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementGatewayApi.
func (mg *ApiManagementGatewayApi) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementGatewayApi.
func (mg *ApiManagementGatewayApi) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementGatewayApi.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementGatewayApi) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementGatewayApi.
func (mg *ApiManagementGatewayApi) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementGroupUser.
func (mg *ApiManagementGroupUser) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementGroupUser.
func (mg *ApiManagementGroupUser) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementGroupUser.
func (mg *ApiManagementGroupUser) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementGroupUser.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementGroupUser) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementGroupUser.
func (mg *ApiManagementGroupUser) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementGroupUser.
func (mg *ApiManagementGroupUser) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementGroupUser.
func (mg *ApiManagementGroupUser) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementGroupUser.
func (mg *ApiManagementGroupUser) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementGroupUser.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementGroupUser) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementGroupUser.
func (mg *ApiManagementGroupUser) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementIdentityProviderAad.
func (mg *ApiManagementIdentityProviderAad) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementIdentityProviderAad.
func (mg *ApiManagementIdentityProviderAad) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementIdentityProviderAad.
func (mg *ApiManagementIdentityProviderAad) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementIdentityProviderAad.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementIdentityProviderAad) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementIdentityProviderAad.
func (mg *ApiManagementIdentityProviderAad) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementIdentityProviderAad.
func (mg *ApiManagementIdentityProviderAad) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementIdentityProviderAad.
func (mg *ApiManagementIdentityProviderAad) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementIdentityProviderAad.
func (mg *ApiManagementIdentityProviderAad) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementIdentityProviderAad.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementIdentityProviderAad) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementIdentityProviderAad.
func (mg *ApiManagementIdentityProviderAad) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementIdentityProviderAadb2C.
func (mg *ApiManagementIdentityProviderAadb2C) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementIdentityProviderAadb2C.
func (mg *ApiManagementIdentityProviderAadb2C) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementIdentityProviderAadb2C.
func (mg *ApiManagementIdentityProviderAadb2C) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementIdentityProviderAadb2C.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementIdentityProviderAadb2C) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementIdentityProviderAadb2C.
func (mg *ApiManagementIdentityProviderAadb2C) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementIdentityProviderAadb2C.
func (mg *ApiManagementIdentityProviderAadb2C) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementIdentityProviderAadb2C.
func (mg *ApiManagementIdentityProviderAadb2C) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementIdentityProviderAadb2C.
func (mg *ApiManagementIdentityProviderAadb2C) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementIdentityProviderAadb2C.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementIdentityProviderAadb2C) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementIdentityProviderAadb2C.
func (mg *ApiManagementIdentityProviderAadb2C) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementIdentityProviderFacebook.
func (mg *ApiManagementIdentityProviderFacebook) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementIdentityProviderFacebook.
func (mg *ApiManagementIdentityProviderFacebook) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementIdentityProviderFacebook.
func (mg *ApiManagementIdentityProviderFacebook) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementIdentityProviderFacebook.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementIdentityProviderFacebook) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementIdentityProviderFacebook.
func (mg *ApiManagementIdentityProviderFacebook) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementIdentityProviderFacebook.
func (mg *ApiManagementIdentityProviderFacebook) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementIdentityProviderFacebook.
func (mg *ApiManagementIdentityProviderFacebook) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementIdentityProviderFacebook.
func (mg *ApiManagementIdentityProviderFacebook) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementIdentityProviderFacebook.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementIdentityProviderFacebook) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementIdentityProviderFacebook.
func (mg *ApiManagementIdentityProviderFacebook) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementIdentityProviderGoogle.
func (mg *ApiManagementIdentityProviderGoogle) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementIdentityProviderGoogle.
func (mg *ApiManagementIdentityProviderGoogle) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementIdentityProviderGoogle.
func (mg *ApiManagementIdentityProviderGoogle) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementIdentityProviderGoogle.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementIdentityProviderGoogle) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementIdentityProviderGoogle.
func (mg *ApiManagementIdentityProviderGoogle) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementIdentityProviderGoogle.
func (mg *ApiManagementIdentityProviderGoogle) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementIdentityProviderGoogle.
func (mg *ApiManagementIdentityProviderGoogle) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementIdentityProviderGoogle.
func (mg *ApiManagementIdentityProviderGoogle) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementIdentityProviderGoogle.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementIdentityProviderGoogle) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementIdentityProviderGoogle.
func (mg *ApiManagementIdentityProviderGoogle) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementIdentityProviderMicrosoft.
func (mg *ApiManagementIdentityProviderMicrosoft) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementIdentityProviderMicrosoft.
func (mg *ApiManagementIdentityProviderMicrosoft) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementIdentityProviderMicrosoft.
func (mg *ApiManagementIdentityProviderMicrosoft) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementIdentityProviderMicrosoft.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementIdentityProviderMicrosoft) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementIdentityProviderMicrosoft.
func (mg *ApiManagementIdentityProviderMicrosoft) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementIdentityProviderMicrosoft.
func (mg *ApiManagementIdentityProviderMicrosoft) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementIdentityProviderMicrosoft.
func (mg *ApiManagementIdentityProviderMicrosoft) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementIdentityProviderMicrosoft.
func (mg *ApiManagementIdentityProviderMicrosoft) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementIdentityProviderMicrosoft.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementIdentityProviderMicrosoft) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementIdentityProviderMicrosoft.
func (mg *ApiManagementIdentityProviderMicrosoft) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementIdentityProviderTwitter.
func (mg *ApiManagementIdentityProviderTwitter) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementIdentityProviderTwitter.
func (mg *ApiManagementIdentityProviderTwitter) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementIdentityProviderTwitter.
func (mg *ApiManagementIdentityProviderTwitter) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementIdentityProviderTwitter.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementIdentityProviderTwitter) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementIdentityProviderTwitter.
func (mg *ApiManagementIdentityProviderTwitter) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementIdentityProviderTwitter.
func (mg *ApiManagementIdentityProviderTwitter) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementIdentityProviderTwitter.
func (mg *ApiManagementIdentityProviderTwitter) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementIdentityProviderTwitter.
func (mg *ApiManagementIdentityProviderTwitter) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementIdentityProviderTwitter.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementIdentityProviderTwitter) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementIdentityProviderTwitter.
func (mg *ApiManagementIdentityProviderTwitter) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementLogger.
func (mg *ApiManagementLogger) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementLogger.
func (mg *ApiManagementLogger) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementLogger.
func (mg *ApiManagementLogger) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementLogger.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementLogger) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementLogger.
func (mg *ApiManagementLogger) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementLogger.
func (mg *ApiManagementLogger) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementLogger.
func (mg *ApiManagementLogger) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementLogger.
func (mg *ApiManagementLogger) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementLogger.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementLogger) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementLogger.
func (mg *ApiManagementLogger) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementNamedValue.
func (mg *ApiManagementNamedValue) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementNamedValue.
func (mg *ApiManagementNamedValue) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementNamedValue.
func (mg *ApiManagementNamedValue) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementNamedValue.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementNamedValue) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementNamedValue.
func (mg *ApiManagementNamedValue) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementNamedValue.
func (mg *ApiManagementNamedValue) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementNamedValue.
func (mg *ApiManagementNamedValue) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementNamedValue.
func (mg *ApiManagementNamedValue) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementNamedValue.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementNamedValue) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementNamedValue.
func (mg *ApiManagementNamedValue) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementNotificationRecipientEmail.
func (mg *ApiManagementNotificationRecipientEmail) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementNotificationRecipientEmail.
func (mg *ApiManagementNotificationRecipientEmail) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementNotificationRecipientEmail.
func (mg *ApiManagementNotificationRecipientEmail) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementNotificationRecipientEmail.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementNotificationRecipientEmail) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementNotificationRecipientEmail.
func (mg *ApiManagementNotificationRecipientEmail) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementNotificationRecipientEmail.
func (mg *ApiManagementNotificationRecipientEmail) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementNotificationRecipientEmail.
func (mg *ApiManagementNotificationRecipientEmail) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementNotificationRecipientEmail.
func (mg *ApiManagementNotificationRecipientEmail) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementNotificationRecipientEmail.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementNotificationRecipientEmail) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementNotificationRecipientEmail.
func (mg *ApiManagementNotificationRecipientEmail) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementOpenidConnectProvider.
func (mg *ApiManagementOpenidConnectProvider) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementOpenidConnectProvider.
func (mg *ApiManagementOpenidConnectProvider) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementOpenidConnectProvider.
func (mg *ApiManagementOpenidConnectProvider) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementOpenidConnectProvider.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementOpenidConnectProvider) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementOpenidConnectProvider.
func (mg *ApiManagementOpenidConnectProvider) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementOpenidConnectProvider.
func (mg *ApiManagementOpenidConnectProvider) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementOpenidConnectProvider.
func (mg *ApiManagementOpenidConnectProvider) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementOpenidConnectProvider.
func (mg *ApiManagementOpenidConnectProvider) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementOpenidConnectProvider.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementOpenidConnectProvider) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementOpenidConnectProvider.
func (mg *ApiManagementOpenidConnectProvider) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementPolicy.
func (mg *ApiManagementPolicy) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementPolicy.
func (mg *ApiManagementPolicy) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementPolicy.
func (mg *ApiManagementPolicy) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementPolicy.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementPolicy) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementPolicy.
func (mg *ApiManagementPolicy) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementPolicy.
func (mg *ApiManagementPolicy) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementPolicy.
func (mg *ApiManagementPolicy) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementPolicy.
func (mg *ApiManagementPolicy) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementPolicy.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementPolicy) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementPolicy.
func (mg *ApiManagementPolicy) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementProduct.
func (mg *ApiManagementProduct) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementProduct.
func (mg *ApiManagementProduct) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementProduct.
func (mg *ApiManagementProduct) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementProduct.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementProduct) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementProduct.
func (mg *ApiManagementProduct) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementProduct.
func (mg *ApiManagementProduct) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementProduct.
func (mg *ApiManagementProduct) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementProduct.
func (mg *ApiManagementProduct) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementProduct.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementProduct) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementProduct.
func (mg *ApiManagementProduct) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementProductApi.
func (mg *ApiManagementProductApi) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementProductApi.
func (mg *ApiManagementProductApi) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementProductApi.
func (mg *ApiManagementProductApi) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementProductApi.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementProductApi) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementProductApi.
func (mg *ApiManagementProductApi) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementProductApi.
func (mg *ApiManagementProductApi) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementProductApi.
func (mg *ApiManagementProductApi) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementProductApi.
func (mg *ApiManagementProductApi) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementProductApi.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementProductApi) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementProductApi.
func (mg *ApiManagementProductApi) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementProductPolicy.
func (mg *ApiManagementProductPolicy) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementProductPolicy.
func (mg *ApiManagementProductPolicy) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementProductPolicy.
func (mg *ApiManagementProductPolicy) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementProductPolicy.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementProductPolicy) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementProductPolicy.
func (mg *ApiManagementProductPolicy) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementProductPolicy.
func (mg *ApiManagementProductPolicy) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementProductPolicy.
func (mg *ApiManagementProductPolicy) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementProductPolicy.
func (mg *ApiManagementProductPolicy) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementProductPolicy.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementProductPolicy) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementProductPolicy.
func (mg *ApiManagementProductPolicy) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementProperty.
func (mg *ApiManagementProperty) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementProperty.
func (mg *ApiManagementProperty) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementProperty.
func (mg *ApiManagementProperty) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementProperty.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementProperty) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementProperty.
func (mg *ApiManagementProperty) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementProperty.
func (mg *ApiManagementProperty) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementProperty.
func (mg *ApiManagementProperty) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementProperty.
func (mg *ApiManagementProperty) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementProperty.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementProperty) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementProperty.
func (mg *ApiManagementProperty) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementRedisCache.
func (mg *ApiManagementRedisCache) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementRedisCache.
func (mg *ApiManagementRedisCache) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementRedisCache.
func (mg *ApiManagementRedisCache) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementRedisCache.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementRedisCache) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementRedisCache.
func (mg *ApiManagementRedisCache) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementRedisCache.
func (mg *ApiManagementRedisCache) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementRedisCache.
func (mg *ApiManagementRedisCache) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementRedisCache.
func (mg *ApiManagementRedisCache) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementRedisCache.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementRedisCache) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementRedisCache.
func (mg *ApiManagementRedisCache) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementSubscription.
func (mg *ApiManagementSubscription) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementSubscription.
func (mg *ApiManagementSubscription) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementSubscription.
func (mg *ApiManagementSubscription) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementSubscription.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementSubscription) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementSubscription.
func (mg *ApiManagementSubscription) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementSubscription.
func (mg *ApiManagementSubscription) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementSubscription.
func (mg *ApiManagementSubscription) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementSubscription.
func (mg *ApiManagementSubscription) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementSubscription.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementSubscription) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementSubscription.
func (mg *ApiManagementSubscription) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementTag.
func (mg *ApiManagementTag) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementTag.
func (mg *ApiManagementTag) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementTag.
func (mg *ApiManagementTag) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementTag.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementTag) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementTag.
func (mg *ApiManagementTag) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementTag.
func (mg *ApiManagementTag) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementTag.
func (mg *ApiManagementTag) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementTag.
func (mg *ApiManagementTag) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementTag.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementTag) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementTag.
func (mg *ApiManagementTag) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this ApiManagementUser.
func (mg *ApiManagementUser) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this ApiManagementUser.
func (mg *ApiManagementUser) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this ApiManagementUser.
func (mg *ApiManagementUser) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this ApiManagementUser.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *ApiManagementUser) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this ApiManagementUser.
func (mg *ApiManagementUser) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this ApiManagementUser.
func (mg *ApiManagementUser) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this ApiManagementUser.
func (mg *ApiManagementUser) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this ApiManagementUser.
func (mg *ApiManagementUser) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this ApiManagementUser.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *ApiManagementUser) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this ApiManagementUser.
func (mg *ApiManagementUser) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
