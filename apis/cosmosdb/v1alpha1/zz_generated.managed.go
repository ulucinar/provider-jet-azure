/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this CosmosdbAccount.
func (mg *CosmosdbAccount) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this CosmosdbAccount.
func (mg *CosmosdbAccount) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this CosmosdbAccount.
func (mg *CosmosdbAccount) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this CosmosdbAccount.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *CosmosdbAccount) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this CosmosdbAccount.
func (mg *CosmosdbAccount) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this CosmosdbAccount.
func (mg *CosmosdbAccount) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this CosmosdbAccount.
func (mg *CosmosdbAccount) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this CosmosdbAccount.
func (mg *CosmosdbAccount) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this CosmosdbAccount.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *CosmosdbAccount) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this CosmosdbAccount.
func (mg *CosmosdbAccount) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this CosmosdbCassandraKeyspace.
func (mg *CosmosdbCassandraKeyspace) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this CosmosdbCassandraKeyspace.
func (mg *CosmosdbCassandraKeyspace) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this CosmosdbCassandraKeyspace.
func (mg *CosmosdbCassandraKeyspace) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this CosmosdbCassandraKeyspace.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *CosmosdbCassandraKeyspace) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this CosmosdbCassandraKeyspace.
func (mg *CosmosdbCassandraKeyspace) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this CosmosdbCassandraKeyspace.
func (mg *CosmosdbCassandraKeyspace) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this CosmosdbCassandraKeyspace.
func (mg *CosmosdbCassandraKeyspace) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this CosmosdbCassandraKeyspace.
func (mg *CosmosdbCassandraKeyspace) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this CosmosdbCassandraKeyspace.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *CosmosdbCassandraKeyspace) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this CosmosdbCassandraKeyspace.
func (mg *CosmosdbCassandraKeyspace) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this CosmosdbCassandraTable.
func (mg *CosmosdbCassandraTable) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this CosmosdbCassandraTable.
func (mg *CosmosdbCassandraTable) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this CosmosdbCassandraTable.
func (mg *CosmosdbCassandraTable) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this CosmosdbCassandraTable.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *CosmosdbCassandraTable) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this CosmosdbCassandraTable.
func (mg *CosmosdbCassandraTable) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this CosmosdbCassandraTable.
func (mg *CosmosdbCassandraTable) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this CosmosdbCassandraTable.
func (mg *CosmosdbCassandraTable) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this CosmosdbCassandraTable.
func (mg *CosmosdbCassandraTable) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this CosmosdbCassandraTable.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *CosmosdbCassandraTable) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this CosmosdbCassandraTable.
func (mg *CosmosdbCassandraTable) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this CosmosdbGremlinDatabase.
func (mg *CosmosdbGremlinDatabase) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this CosmosdbGremlinDatabase.
func (mg *CosmosdbGremlinDatabase) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this CosmosdbGremlinDatabase.
func (mg *CosmosdbGremlinDatabase) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this CosmosdbGremlinDatabase.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *CosmosdbGremlinDatabase) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this CosmosdbGremlinDatabase.
func (mg *CosmosdbGremlinDatabase) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this CosmosdbGremlinDatabase.
func (mg *CosmosdbGremlinDatabase) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this CosmosdbGremlinDatabase.
func (mg *CosmosdbGremlinDatabase) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this CosmosdbGremlinDatabase.
func (mg *CosmosdbGremlinDatabase) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this CosmosdbGremlinDatabase.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *CosmosdbGremlinDatabase) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this CosmosdbGremlinDatabase.
func (mg *CosmosdbGremlinDatabase) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this CosmosdbGremlinGraph.
func (mg *CosmosdbGremlinGraph) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this CosmosdbGremlinGraph.
func (mg *CosmosdbGremlinGraph) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this CosmosdbGremlinGraph.
func (mg *CosmosdbGremlinGraph) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this CosmosdbGremlinGraph.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *CosmosdbGremlinGraph) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this CosmosdbGremlinGraph.
func (mg *CosmosdbGremlinGraph) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this CosmosdbGremlinGraph.
func (mg *CosmosdbGremlinGraph) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this CosmosdbGremlinGraph.
func (mg *CosmosdbGremlinGraph) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this CosmosdbGremlinGraph.
func (mg *CosmosdbGremlinGraph) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this CosmosdbGremlinGraph.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *CosmosdbGremlinGraph) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this CosmosdbGremlinGraph.
func (mg *CosmosdbGremlinGraph) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this CosmosdbMongoCollection.
func (mg *CosmosdbMongoCollection) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this CosmosdbMongoCollection.
func (mg *CosmosdbMongoCollection) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this CosmosdbMongoCollection.
func (mg *CosmosdbMongoCollection) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this CosmosdbMongoCollection.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *CosmosdbMongoCollection) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this CosmosdbMongoCollection.
func (mg *CosmosdbMongoCollection) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this CosmosdbMongoCollection.
func (mg *CosmosdbMongoCollection) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this CosmosdbMongoCollection.
func (mg *CosmosdbMongoCollection) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this CosmosdbMongoCollection.
func (mg *CosmosdbMongoCollection) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this CosmosdbMongoCollection.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *CosmosdbMongoCollection) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this CosmosdbMongoCollection.
func (mg *CosmosdbMongoCollection) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this CosmosdbMongoDatabase.
func (mg *CosmosdbMongoDatabase) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this CosmosdbMongoDatabase.
func (mg *CosmosdbMongoDatabase) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this CosmosdbMongoDatabase.
func (mg *CosmosdbMongoDatabase) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this CosmosdbMongoDatabase.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *CosmosdbMongoDatabase) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this CosmosdbMongoDatabase.
func (mg *CosmosdbMongoDatabase) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this CosmosdbMongoDatabase.
func (mg *CosmosdbMongoDatabase) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this CosmosdbMongoDatabase.
func (mg *CosmosdbMongoDatabase) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this CosmosdbMongoDatabase.
func (mg *CosmosdbMongoDatabase) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this CosmosdbMongoDatabase.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *CosmosdbMongoDatabase) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this CosmosdbMongoDatabase.
func (mg *CosmosdbMongoDatabase) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this CosmosdbNotebookWorkspace.
func (mg *CosmosdbNotebookWorkspace) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this CosmosdbNotebookWorkspace.
func (mg *CosmosdbNotebookWorkspace) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this CosmosdbNotebookWorkspace.
func (mg *CosmosdbNotebookWorkspace) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this CosmosdbNotebookWorkspace.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *CosmosdbNotebookWorkspace) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this CosmosdbNotebookWorkspace.
func (mg *CosmosdbNotebookWorkspace) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this CosmosdbNotebookWorkspace.
func (mg *CosmosdbNotebookWorkspace) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this CosmosdbNotebookWorkspace.
func (mg *CosmosdbNotebookWorkspace) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this CosmosdbNotebookWorkspace.
func (mg *CosmosdbNotebookWorkspace) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this CosmosdbNotebookWorkspace.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *CosmosdbNotebookWorkspace) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this CosmosdbNotebookWorkspace.
func (mg *CosmosdbNotebookWorkspace) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this CosmosdbSqlContainer.
func (mg *CosmosdbSqlContainer) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this CosmosdbSqlContainer.
func (mg *CosmosdbSqlContainer) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this CosmosdbSqlContainer.
func (mg *CosmosdbSqlContainer) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this CosmosdbSqlContainer.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *CosmosdbSqlContainer) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this CosmosdbSqlContainer.
func (mg *CosmosdbSqlContainer) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this CosmosdbSqlContainer.
func (mg *CosmosdbSqlContainer) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this CosmosdbSqlContainer.
func (mg *CosmosdbSqlContainer) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this CosmosdbSqlContainer.
func (mg *CosmosdbSqlContainer) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this CosmosdbSqlContainer.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *CosmosdbSqlContainer) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this CosmosdbSqlContainer.
func (mg *CosmosdbSqlContainer) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this CosmosdbSqlDatabase.
func (mg *CosmosdbSqlDatabase) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this CosmosdbSqlDatabase.
func (mg *CosmosdbSqlDatabase) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this CosmosdbSqlDatabase.
func (mg *CosmosdbSqlDatabase) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this CosmosdbSqlDatabase.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *CosmosdbSqlDatabase) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this CosmosdbSqlDatabase.
func (mg *CosmosdbSqlDatabase) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this CosmosdbSqlDatabase.
func (mg *CosmosdbSqlDatabase) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this CosmosdbSqlDatabase.
func (mg *CosmosdbSqlDatabase) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this CosmosdbSqlDatabase.
func (mg *CosmosdbSqlDatabase) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this CosmosdbSqlDatabase.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *CosmosdbSqlDatabase) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this CosmosdbSqlDatabase.
func (mg *CosmosdbSqlDatabase) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this CosmosdbSqlFunction.
func (mg *CosmosdbSqlFunction) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this CosmosdbSqlFunction.
func (mg *CosmosdbSqlFunction) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this CosmosdbSqlFunction.
func (mg *CosmosdbSqlFunction) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this CosmosdbSqlFunction.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *CosmosdbSqlFunction) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this CosmosdbSqlFunction.
func (mg *CosmosdbSqlFunction) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this CosmosdbSqlFunction.
func (mg *CosmosdbSqlFunction) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this CosmosdbSqlFunction.
func (mg *CosmosdbSqlFunction) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this CosmosdbSqlFunction.
func (mg *CosmosdbSqlFunction) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this CosmosdbSqlFunction.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *CosmosdbSqlFunction) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this CosmosdbSqlFunction.
func (mg *CosmosdbSqlFunction) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this CosmosdbSqlStoredProcedure.
func (mg *CosmosdbSqlStoredProcedure) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this CosmosdbSqlStoredProcedure.
func (mg *CosmosdbSqlStoredProcedure) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this CosmosdbSqlStoredProcedure.
func (mg *CosmosdbSqlStoredProcedure) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this CosmosdbSqlStoredProcedure.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *CosmosdbSqlStoredProcedure) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this CosmosdbSqlStoredProcedure.
func (mg *CosmosdbSqlStoredProcedure) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this CosmosdbSqlStoredProcedure.
func (mg *CosmosdbSqlStoredProcedure) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this CosmosdbSqlStoredProcedure.
func (mg *CosmosdbSqlStoredProcedure) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this CosmosdbSqlStoredProcedure.
func (mg *CosmosdbSqlStoredProcedure) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this CosmosdbSqlStoredProcedure.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *CosmosdbSqlStoredProcedure) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this CosmosdbSqlStoredProcedure.
func (mg *CosmosdbSqlStoredProcedure) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this CosmosdbSqlTrigger.
func (mg *CosmosdbSqlTrigger) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this CosmosdbSqlTrigger.
func (mg *CosmosdbSqlTrigger) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this CosmosdbSqlTrigger.
func (mg *CosmosdbSqlTrigger) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this CosmosdbSqlTrigger.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *CosmosdbSqlTrigger) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this CosmosdbSqlTrigger.
func (mg *CosmosdbSqlTrigger) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this CosmosdbSqlTrigger.
func (mg *CosmosdbSqlTrigger) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this CosmosdbSqlTrigger.
func (mg *CosmosdbSqlTrigger) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this CosmosdbSqlTrigger.
func (mg *CosmosdbSqlTrigger) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this CosmosdbSqlTrigger.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *CosmosdbSqlTrigger) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this CosmosdbSqlTrigger.
func (mg *CosmosdbSqlTrigger) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this CosmosdbTable.
func (mg *CosmosdbTable) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this CosmosdbTable.
func (mg *CosmosdbTable) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this CosmosdbTable.
func (mg *CosmosdbTable) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this CosmosdbTable.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *CosmosdbTable) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this CosmosdbTable.
func (mg *CosmosdbTable) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this CosmosdbTable.
func (mg *CosmosdbTable) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this CosmosdbTable.
func (mg *CosmosdbTable) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this CosmosdbTable.
func (mg *CosmosdbTable) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this CosmosdbTable.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *CosmosdbTable) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this CosmosdbTable.
func (mg *CosmosdbTable) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
