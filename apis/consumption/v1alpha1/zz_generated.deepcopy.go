// +build !ignore_autogenerated

/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetResourceGroup) DeepCopyInto(out *ConsumptionBudgetResourceGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetResourceGroup.
func (in *ConsumptionBudgetResourceGroup) DeepCopy() *ConsumptionBudgetResourceGroup {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetResourceGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConsumptionBudgetResourceGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetResourceGroupList) DeepCopyInto(out *ConsumptionBudgetResourceGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ConsumptionBudgetResourceGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetResourceGroupList.
func (in *ConsumptionBudgetResourceGroupList) DeepCopy() *ConsumptionBudgetResourceGroupList {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetResourceGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConsumptionBudgetResourceGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetResourceGroupObservation) DeepCopyInto(out *ConsumptionBudgetResourceGroupObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetResourceGroupObservation.
func (in *ConsumptionBudgetResourceGroupObservation) DeepCopy() *ConsumptionBudgetResourceGroupObservation {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetResourceGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetResourceGroupParameters) DeepCopyInto(out *ConsumptionBudgetResourceGroupParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]FilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Notification != nil {
		in, out := &in.Notification, &out.Notification
		*out = make([]NotificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeGrain != nil {
		in, out := &in.TimeGrain, &out.TimeGrain
		*out = new(string)
		**out = **in
	}
	if in.TimePeriod != nil {
		in, out := &in.TimePeriod, &out.TimePeriod
		*out = make([]TimePeriodParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetResourceGroupParameters.
func (in *ConsumptionBudgetResourceGroupParameters) DeepCopy() *ConsumptionBudgetResourceGroupParameters {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetResourceGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetResourceGroupSpec) DeepCopyInto(out *ConsumptionBudgetResourceGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetResourceGroupSpec.
func (in *ConsumptionBudgetResourceGroupSpec) DeepCopy() *ConsumptionBudgetResourceGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetResourceGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetResourceGroupStatus) DeepCopyInto(out *ConsumptionBudgetResourceGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetResourceGroupStatus.
func (in *ConsumptionBudgetResourceGroupStatus) DeepCopy() *ConsumptionBudgetResourceGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetResourceGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetSubscription) DeepCopyInto(out *ConsumptionBudgetSubscription) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetSubscription.
func (in *ConsumptionBudgetSubscription) DeepCopy() *ConsumptionBudgetSubscription {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConsumptionBudgetSubscription) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetSubscriptionFilterObservation) DeepCopyInto(out *ConsumptionBudgetSubscriptionFilterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetSubscriptionFilterObservation.
func (in *ConsumptionBudgetSubscriptionFilterObservation) DeepCopy() *ConsumptionBudgetSubscriptionFilterObservation {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetSubscriptionFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetSubscriptionFilterParameters) DeepCopyInto(out *ConsumptionBudgetSubscriptionFilterParameters) {
	*out = *in
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]FilterDimensionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Not != nil {
		in, out := &in.Not, &out.Not
		*out = make([]FilterNotParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]ConsumptionBudgetSubscriptionFilterTagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetSubscriptionFilterParameters.
func (in *ConsumptionBudgetSubscriptionFilterParameters) DeepCopy() *ConsumptionBudgetSubscriptionFilterParameters {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetSubscriptionFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetSubscriptionFilterTagObservation) DeepCopyInto(out *ConsumptionBudgetSubscriptionFilterTagObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetSubscriptionFilterTagObservation.
func (in *ConsumptionBudgetSubscriptionFilterTagObservation) DeepCopy() *ConsumptionBudgetSubscriptionFilterTagObservation {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetSubscriptionFilterTagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetSubscriptionFilterTagParameters) DeepCopyInto(out *ConsumptionBudgetSubscriptionFilterTagParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetSubscriptionFilterTagParameters.
func (in *ConsumptionBudgetSubscriptionFilterTagParameters) DeepCopy() *ConsumptionBudgetSubscriptionFilterTagParameters {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetSubscriptionFilterTagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetSubscriptionList) DeepCopyInto(out *ConsumptionBudgetSubscriptionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ConsumptionBudgetSubscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetSubscriptionList.
func (in *ConsumptionBudgetSubscriptionList) DeepCopy() *ConsumptionBudgetSubscriptionList {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetSubscriptionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConsumptionBudgetSubscriptionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetSubscriptionNotificationObservation) DeepCopyInto(out *ConsumptionBudgetSubscriptionNotificationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetSubscriptionNotificationObservation.
func (in *ConsumptionBudgetSubscriptionNotificationObservation) DeepCopy() *ConsumptionBudgetSubscriptionNotificationObservation {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetSubscriptionNotificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetSubscriptionNotificationParameters) DeepCopyInto(out *ConsumptionBudgetSubscriptionNotificationParameters) {
	*out = *in
	if in.ContactEmails != nil {
		in, out := &in.ContactEmails, &out.ContactEmails
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ContactGroups != nil {
		in, out := &in.ContactGroups, &out.ContactGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ContactRoles != nil {
		in, out := &in.ContactRoles, &out.ContactRoles
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetSubscriptionNotificationParameters.
func (in *ConsumptionBudgetSubscriptionNotificationParameters) DeepCopy() *ConsumptionBudgetSubscriptionNotificationParameters {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetSubscriptionNotificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetSubscriptionObservation) DeepCopyInto(out *ConsumptionBudgetSubscriptionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetSubscriptionObservation.
func (in *ConsumptionBudgetSubscriptionObservation) DeepCopy() *ConsumptionBudgetSubscriptionObservation {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetSubscriptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetSubscriptionParameters) DeepCopyInto(out *ConsumptionBudgetSubscriptionParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = make([]ConsumptionBudgetSubscriptionFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Notification != nil {
		in, out := &in.Notification, &out.Notification
		*out = make([]ConsumptionBudgetSubscriptionNotificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeGrain != nil {
		in, out := &in.TimeGrain, &out.TimeGrain
		*out = new(string)
		**out = **in
	}
	if in.TimePeriod != nil {
		in, out := &in.TimePeriod, &out.TimePeriod
		*out = make([]ConsumptionBudgetSubscriptionTimePeriodParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetSubscriptionParameters.
func (in *ConsumptionBudgetSubscriptionParameters) DeepCopy() *ConsumptionBudgetSubscriptionParameters {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetSubscriptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetSubscriptionSpec) DeepCopyInto(out *ConsumptionBudgetSubscriptionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetSubscriptionSpec.
func (in *ConsumptionBudgetSubscriptionSpec) DeepCopy() *ConsumptionBudgetSubscriptionSpec {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetSubscriptionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetSubscriptionStatus) DeepCopyInto(out *ConsumptionBudgetSubscriptionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetSubscriptionStatus.
func (in *ConsumptionBudgetSubscriptionStatus) DeepCopy() *ConsumptionBudgetSubscriptionStatus {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetSubscriptionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetSubscriptionTimePeriodObservation) DeepCopyInto(out *ConsumptionBudgetSubscriptionTimePeriodObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetSubscriptionTimePeriodObservation.
func (in *ConsumptionBudgetSubscriptionTimePeriodObservation) DeepCopy() *ConsumptionBudgetSubscriptionTimePeriodObservation {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetSubscriptionTimePeriodObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumptionBudgetSubscriptionTimePeriodParameters) DeepCopyInto(out *ConsumptionBudgetSubscriptionTimePeriodParameters) {
	*out = *in
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumptionBudgetSubscriptionTimePeriodParameters.
func (in *ConsumptionBudgetSubscriptionTimePeriodParameters) DeepCopy() *ConsumptionBudgetSubscriptionTimePeriodParameters {
	if in == nil {
		return nil
	}
	out := new(ConsumptionBudgetSubscriptionTimePeriodParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DimensionObservation) DeepCopyInto(out *DimensionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DimensionObservation.
func (in *DimensionObservation) DeepCopy() *DimensionObservation {
	if in == nil {
		return nil
	}
	out := new(DimensionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DimensionParameters) DeepCopyInto(out *DimensionParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DimensionParameters.
func (in *DimensionParameters) DeepCopy() *DimensionParameters {
	if in == nil {
		return nil
	}
	out := new(DimensionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterDimensionObservation) DeepCopyInto(out *FilterDimensionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterDimensionObservation.
func (in *FilterDimensionObservation) DeepCopy() *FilterDimensionObservation {
	if in == nil {
		return nil
	}
	out := new(FilterDimensionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterDimensionParameters) DeepCopyInto(out *FilterDimensionParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterDimensionParameters.
func (in *FilterDimensionParameters) DeepCopy() *FilterDimensionParameters {
	if in == nil {
		return nil
	}
	out := new(FilterDimensionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterNotDimensionObservation) DeepCopyInto(out *FilterNotDimensionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterNotDimensionObservation.
func (in *FilterNotDimensionObservation) DeepCopy() *FilterNotDimensionObservation {
	if in == nil {
		return nil
	}
	out := new(FilterNotDimensionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterNotDimensionParameters) DeepCopyInto(out *FilterNotDimensionParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterNotDimensionParameters.
func (in *FilterNotDimensionParameters) DeepCopy() *FilterNotDimensionParameters {
	if in == nil {
		return nil
	}
	out := new(FilterNotDimensionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterNotObservation) DeepCopyInto(out *FilterNotObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterNotObservation.
func (in *FilterNotObservation) DeepCopy() *FilterNotObservation {
	if in == nil {
		return nil
	}
	out := new(FilterNotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterNotParameters) DeepCopyInto(out *FilterNotParameters) {
	*out = *in
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]FilterNotDimensionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]NotTagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterNotParameters.
func (in *FilterNotParameters) DeepCopy() *FilterNotParameters {
	if in == nil {
		return nil
	}
	out := new(FilterNotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterObservation) DeepCopyInto(out *FilterObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterObservation.
func (in *FilterObservation) DeepCopy() *FilterObservation {
	if in == nil {
		return nil
	}
	out := new(FilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterParameters) DeepCopyInto(out *FilterParameters) {
	*out = *in
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]DimensionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Not != nil {
		in, out := &in.Not, &out.Not
		*out = make([]NotParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]FilterTagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterParameters.
func (in *FilterParameters) DeepCopy() *FilterParameters {
	if in == nil {
		return nil
	}
	out := new(FilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterTagObservation) DeepCopyInto(out *FilterTagObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterTagObservation.
func (in *FilterTagObservation) DeepCopy() *FilterTagObservation {
	if in == nil {
		return nil
	}
	out := new(FilterTagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterTagParameters) DeepCopyInto(out *FilterTagParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterTagParameters.
func (in *FilterTagParameters) DeepCopy() *FilterTagParameters {
	if in == nil {
		return nil
	}
	out := new(FilterTagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotDimensionObservation) DeepCopyInto(out *NotDimensionObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotDimensionObservation.
func (in *NotDimensionObservation) DeepCopy() *NotDimensionObservation {
	if in == nil {
		return nil
	}
	out := new(NotDimensionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotDimensionParameters) DeepCopyInto(out *NotDimensionParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotDimensionParameters.
func (in *NotDimensionParameters) DeepCopy() *NotDimensionParameters {
	if in == nil {
		return nil
	}
	out := new(NotDimensionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotObservation) DeepCopyInto(out *NotObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotObservation.
func (in *NotObservation) DeepCopy() *NotObservation {
	if in == nil {
		return nil
	}
	out := new(NotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotParameters) DeepCopyInto(out *NotParameters) {
	*out = *in
	if in.Dimension != nil {
		in, out := &in.Dimension, &out.Dimension
		*out = make([]NotDimensionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = make([]TagParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotParameters.
func (in *NotParameters) DeepCopy() *NotParameters {
	if in == nil {
		return nil
	}
	out := new(NotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotTagObservation) DeepCopyInto(out *NotTagObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotTagObservation.
func (in *NotTagObservation) DeepCopy() *NotTagObservation {
	if in == nil {
		return nil
	}
	out := new(NotTagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotTagParameters) DeepCopyInto(out *NotTagParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotTagParameters.
func (in *NotTagParameters) DeepCopy() *NotTagParameters {
	if in == nil {
		return nil
	}
	out := new(NotTagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationObservation) DeepCopyInto(out *NotificationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationObservation.
func (in *NotificationObservation) DeepCopy() *NotificationObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationParameters) DeepCopyInto(out *NotificationParameters) {
	*out = *in
	if in.ContactEmails != nil {
		in, out := &in.ContactEmails, &out.ContactEmails
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ContactGroups != nil {
		in, out := &in.ContactGroups, &out.ContactGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ContactRoles != nil {
		in, out := &in.ContactRoles, &out.ContactRoles
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationParameters.
func (in *NotificationParameters) DeepCopy() *NotificationParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagObservation) DeepCopyInto(out *TagObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagObservation.
func (in *TagObservation) DeepCopy() *TagObservation {
	if in == nil {
		return nil
	}
	out := new(TagObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagParameters) DeepCopyInto(out *TagParameters) {
	*out = *in
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagParameters.
func (in *TagParameters) DeepCopy() *TagParameters {
	if in == nil {
		return nil
	}
	out := new(TagParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimePeriodObservation) DeepCopyInto(out *TimePeriodObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimePeriodObservation.
func (in *TimePeriodObservation) DeepCopy() *TimePeriodObservation {
	if in == nil {
		return nil
	}
	out := new(TimePeriodObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimePeriodParameters) DeepCopyInto(out *TimePeriodParameters) {
	*out = *in
	if in.EndDate != nil {
		in, out := &in.EndDate, &out.EndDate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimePeriodParameters.
func (in *TimePeriodParameters) DeepCopy() *TimePeriodParameters {
	if in == nil {
		return nil
	}
	out := new(TimePeriodParameters)
	in.DeepCopyInto(out)
	return out
}
