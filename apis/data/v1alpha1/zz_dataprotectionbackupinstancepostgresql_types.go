/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type DataProtectionBackupInstancePostgresqlObservation struct {
}

type DataProtectionBackupInstancePostgresqlParameters struct {

	// +kubebuilder:validation:Required
	BackupPolicyID string `json:"backupPolicyId" tf:"backup_policy_id"`

	// +kubebuilder:validation:Required
	DatabaseID string `json:"databaseId" tf:"database_id"`

	// +kubebuilder:validation:Required
	Location string `json:"location" tf:"location"`

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Required
	VaultID string `json:"vaultId" tf:"vault_id"`
}

// DataProtectionBackupInstancePostgresqlSpec defines the desired state of DataProtectionBackupInstancePostgresql
type DataProtectionBackupInstancePostgresqlSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       DataProtectionBackupInstancePostgresqlParameters `json:"forProvider"`
}

// DataProtectionBackupInstancePostgresqlStatus defines the observed state of DataProtectionBackupInstancePostgresql.
type DataProtectionBackupInstancePostgresqlStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          DataProtectionBackupInstancePostgresqlObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// DataProtectionBackupInstancePostgresql is the Schema for the DataProtectionBackupInstancePostgresqls API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type DataProtectionBackupInstancePostgresql struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DataProtectionBackupInstancePostgresqlSpec   `json:"spec"`
	Status            DataProtectionBackupInstancePostgresqlStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DataProtectionBackupInstancePostgresqlList contains a list of DataProtectionBackupInstancePostgresqls
type DataProtectionBackupInstancePostgresqlList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []DataProtectionBackupInstancePostgresql `json:"items"`
}

// Repository type metadata.
var (
	DataProtectionBackupInstancePostgresqlKind             = "DataProtectionBackupInstancePostgresql"
	DataProtectionBackupInstancePostgresqlGroupKind        = schema.GroupKind{Group: Group, Kind: DataProtectionBackupInstancePostgresqlKind}.String()
	DataProtectionBackupInstancePostgresqlKindAPIVersion   = DataProtectionBackupInstancePostgresqlKind + "." + GroupVersion.String()
	DataProtectionBackupInstancePostgresqlGroupVersionKind = GroupVersion.WithKind(DataProtectionBackupInstancePostgresqlKind)
)

func init() {
	SchemeBuilder.Register(&DataProtectionBackupInstancePostgresql{}, &DataProtectionBackupInstancePostgresqlList{})
}
