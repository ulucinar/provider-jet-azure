/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ProximityPlacementGroupObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type ProximityPlacementGroupParameters struct {

	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-jet-azure/apis/azure2/v1alpha2.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// ProximityPlacementGroupSpec defines the desired state of ProximityPlacementGroup
type ProximityPlacementGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ProximityPlacementGroupParameters `json:"forProvider"`
}

// ProximityPlacementGroupStatus defines the observed state of ProximityPlacementGroup.
type ProximityPlacementGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ProximityPlacementGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ProximityPlacementGroup is the Schema for the ProximityPlacementGroups API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type ProximityPlacementGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ProximityPlacementGroupSpec   `json:"spec"`
	Status            ProximityPlacementGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ProximityPlacementGroupList contains a list of ProximityPlacementGroups
type ProximityPlacementGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ProximityPlacementGroup `json:"items"`
}

// Repository type metadata.
var (
	ProximityPlacementGroup_Kind             = "ProximityPlacementGroup"
	ProximityPlacementGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ProximityPlacementGroup_Kind}.String()
	ProximityPlacementGroup_KindAPIVersion   = ProximityPlacementGroup_Kind + "." + CRDGroupVersion.String()
	ProximityPlacementGroup_GroupVersionKind = CRDGroupVersion.WithKind(ProximityPlacementGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&ProximityPlacementGroup{}, &ProximityPlacementGroupList{})
}
