/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this MachineLearningComputeCluster.
func (mg *MachineLearningComputeCluster) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this MachineLearningComputeCluster.
func (mg *MachineLearningComputeCluster) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this MachineLearningComputeCluster.
func (mg *MachineLearningComputeCluster) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this MachineLearningComputeCluster.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *MachineLearningComputeCluster) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this MachineLearningComputeCluster.
func (mg *MachineLearningComputeCluster) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this MachineLearningComputeCluster.
func (mg *MachineLearningComputeCluster) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this MachineLearningComputeCluster.
func (mg *MachineLearningComputeCluster) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this MachineLearningComputeCluster.
func (mg *MachineLearningComputeCluster) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this MachineLearningComputeCluster.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *MachineLearningComputeCluster) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this MachineLearningComputeCluster.
func (mg *MachineLearningComputeCluster) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this MachineLearningComputeInstance.
func (mg *MachineLearningComputeInstance) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this MachineLearningComputeInstance.
func (mg *MachineLearningComputeInstance) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this MachineLearningComputeInstance.
func (mg *MachineLearningComputeInstance) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this MachineLearningComputeInstance.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *MachineLearningComputeInstance) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this MachineLearningComputeInstance.
func (mg *MachineLearningComputeInstance) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this MachineLearningComputeInstance.
func (mg *MachineLearningComputeInstance) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this MachineLearningComputeInstance.
func (mg *MachineLearningComputeInstance) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this MachineLearningComputeInstance.
func (mg *MachineLearningComputeInstance) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this MachineLearningComputeInstance.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *MachineLearningComputeInstance) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this MachineLearningComputeInstance.
func (mg *MachineLearningComputeInstance) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this MachineLearningInferenceCluster.
func (mg *MachineLearningInferenceCluster) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this MachineLearningInferenceCluster.
func (mg *MachineLearningInferenceCluster) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this MachineLearningInferenceCluster.
func (mg *MachineLearningInferenceCluster) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this MachineLearningInferenceCluster.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *MachineLearningInferenceCluster) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this MachineLearningInferenceCluster.
func (mg *MachineLearningInferenceCluster) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this MachineLearningInferenceCluster.
func (mg *MachineLearningInferenceCluster) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this MachineLearningInferenceCluster.
func (mg *MachineLearningInferenceCluster) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this MachineLearningInferenceCluster.
func (mg *MachineLearningInferenceCluster) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this MachineLearningInferenceCluster.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *MachineLearningInferenceCluster) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this MachineLearningInferenceCluster.
func (mg *MachineLearningInferenceCluster) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this MachineLearningSynapseSpark.
func (mg *MachineLearningSynapseSpark) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this MachineLearningSynapseSpark.
func (mg *MachineLearningSynapseSpark) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this MachineLearningSynapseSpark.
func (mg *MachineLearningSynapseSpark) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this MachineLearningSynapseSpark.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *MachineLearningSynapseSpark) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this MachineLearningSynapseSpark.
func (mg *MachineLearningSynapseSpark) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this MachineLearningSynapseSpark.
func (mg *MachineLearningSynapseSpark) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this MachineLearningSynapseSpark.
func (mg *MachineLearningSynapseSpark) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this MachineLearningSynapseSpark.
func (mg *MachineLearningSynapseSpark) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this MachineLearningSynapseSpark.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *MachineLearningSynapseSpark) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this MachineLearningSynapseSpark.
func (mg *MachineLearningSynapseSpark) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this MachineLearningWorkspace.
func (mg *MachineLearningWorkspace) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this MachineLearningWorkspace.
func (mg *MachineLearningWorkspace) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this MachineLearningWorkspace.
func (mg *MachineLearningWorkspace) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this MachineLearningWorkspace.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *MachineLearningWorkspace) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this MachineLearningWorkspace.
func (mg *MachineLearningWorkspace) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this MachineLearningWorkspace.
func (mg *MachineLearningWorkspace) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this MachineLearningWorkspace.
func (mg *MachineLearningWorkspace) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this MachineLearningWorkspace.
func (mg *MachineLearningWorkspace) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this MachineLearningWorkspace.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *MachineLearningWorkspace) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this MachineLearningWorkspace.
func (mg *MachineLearningWorkspace) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
