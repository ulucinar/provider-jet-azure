/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SiteRecoveryReplicationPolicyObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type SiteRecoveryReplicationPolicyParameters struct {

	// +kubebuilder:validation:Required
	ApplicationConsistentSnapshotFrequencyInMinutes *int64 `json:"applicationConsistentSnapshotFrequencyInMinutes" tf:"application_consistent_snapshot_frequency_in_minutes,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	RecoveryPointRetentionInMinutes *int64 `json:"recoveryPointRetentionInMinutes" tf:"recovery_point_retention_in_minutes,omitempty"`

	// +kubebuilder:validation:Required
	RecoveryVaultName *string `json:"recoveryVaultName" tf:"recovery_vault_name,omitempty"`

	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-jet-azure/apis/azure2/v1alpha2.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`
}

// SiteRecoveryReplicationPolicySpec defines the desired state of SiteRecoveryReplicationPolicy
type SiteRecoveryReplicationPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SiteRecoveryReplicationPolicyParameters `json:"forProvider"`
}

// SiteRecoveryReplicationPolicyStatus defines the observed state of SiteRecoveryReplicationPolicy.
type SiteRecoveryReplicationPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SiteRecoveryReplicationPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SiteRecoveryReplicationPolicy is the Schema for the SiteRecoveryReplicationPolicys API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type SiteRecoveryReplicationPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SiteRecoveryReplicationPolicySpec   `json:"spec"`
	Status            SiteRecoveryReplicationPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SiteRecoveryReplicationPolicyList contains a list of SiteRecoveryReplicationPolicys
type SiteRecoveryReplicationPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SiteRecoveryReplicationPolicy `json:"items"`
}

// Repository type metadata.
var (
	SiteRecoveryReplicationPolicy_Kind             = "SiteRecoveryReplicationPolicy"
	SiteRecoveryReplicationPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SiteRecoveryReplicationPolicy_Kind}.String()
	SiteRecoveryReplicationPolicy_KindAPIVersion   = SiteRecoveryReplicationPolicy_Kind + "." + CRDGroupVersion.String()
	SiteRecoveryReplicationPolicy_GroupVersionKind = CRDGroupVersion.WithKind(SiteRecoveryReplicationPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&SiteRecoveryReplicationPolicy{}, &SiteRecoveryReplicationPolicyList{})
}
