/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type NamespaceDisasterRecoveryConfigObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type NamespaceDisasterRecoveryConfigParameters struct {

	// +kubebuilder:validation:Optional
	AlternateName *string `json:"alternateName,omitempty" tf:"alternate_name,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	NamespaceName *string `json:"namespaceName" tf:"namespace_name,omitempty"`

	// +kubebuilder:validation:Required
	PartnerNamespaceID *string `json:"partnerNamespaceId" tf:"partner_namespace_id,omitempty"`

	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-jet-azure/apis/azure2/v1alpha2.ResourceGroup
	// +kubebuilder:validation:Optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name,omitempty"`

	// +kubebuilder:validation:Optional
	ResourceGroupNameRef *v1.Reference `json:"resourceGroupNameRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	ResourceGroupNameSelector *v1.Selector `json:"resourceGroupNameSelector,omitempty" tf:"-"`
}

// NamespaceDisasterRecoveryConfigSpec defines the desired state of NamespaceDisasterRecoveryConfig
type NamespaceDisasterRecoveryConfigSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NamespaceDisasterRecoveryConfigParameters `json:"forProvider"`
}

// NamespaceDisasterRecoveryConfigStatus defines the observed state of NamespaceDisasterRecoveryConfig.
type NamespaceDisasterRecoveryConfigStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NamespaceDisasterRecoveryConfigObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// NamespaceDisasterRecoveryConfig is the Schema for the NamespaceDisasterRecoveryConfigs API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azurejet}
type NamespaceDisasterRecoveryConfig struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              NamespaceDisasterRecoveryConfigSpec   `json:"spec"`
	Status            NamespaceDisasterRecoveryConfigStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NamespaceDisasterRecoveryConfigList contains a list of NamespaceDisasterRecoveryConfigs
type NamespaceDisasterRecoveryConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NamespaceDisasterRecoveryConfig `json:"items"`
}

// Repository type metadata.
var (
	NamespaceDisasterRecoveryConfig_Kind             = "NamespaceDisasterRecoveryConfig"
	NamespaceDisasterRecoveryConfig_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: NamespaceDisasterRecoveryConfig_Kind}.String()
	NamespaceDisasterRecoveryConfig_KindAPIVersion   = NamespaceDisasterRecoveryConfig_Kind + "." + CRDGroupVersion.String()
	NamespaceDisasterRecoveryConfig_GroupVersionKind = CRDGroupVersion.WithKind(NamespaceDisasterRecoveryConfig_Kind)
)

func init() {
	SchemeBuilder.Register(&NamespaceDisasterRecoveryConfig{}, &NamespaceDisasterRecoveryConfigList{})
}
