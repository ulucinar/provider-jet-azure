/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this PrivateDnsARecord.
func (mg *PrivateDnsARecord) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PrivateDnsARecord.
func (mg *PrivateDnsARecord) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PrivateDnsARecord.
func (mg *PrivateDnsARecord) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PrivateDnsARecord.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PrivateDnsARecord) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PrivateDnsARecord.
func (mg *PrivateDnsARecord) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PrivateDnsARecord.
func (mg *PrivateDnsARecord) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PrivateDnsARecord.
func (mg *PrivateDnsARecord) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PrivateDnsARecord.
func (mg *PrivateDnsARecord) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PrivateDnsARecord.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PrivateDnsARecord) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PrivateDnsARecord.
func (mg *PrivateDnsARecord) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PrivateDnsAaaaRecord.
func (mg *PrivateDnsAaaaRecord) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PrivateDnsAaaaRecord.
func (mg *PrivateDnsAaaaRecord) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PrivateDnsAaaaRecord.
func (mg *PrivateDnsAaaaRecord) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PrivateDnsAaaaRecord.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PrivateDnsAaaaRecord) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PrivateDnsAaaaRecord.
func (mg *PrivateDnsAaaaRecord) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PrivateDnsAaaaRecord.
func (mg *PrivateDnsAaaaRecord) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PrivateDnsAaaaRecord.
func (mg *PrivateDnsAaaaRecord) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PrivateDnsAaaaRecord.
func (mg *PrivateDnsAaaaRecord) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PrivateDnsAaaaRecord.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PrivateDnsAaaaRecord) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PrivateDnsAaaaRecord.
func (mg *PrivateDnsAaaaRecord) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PrivateDnsCnameRecord.
func (mg *PrivateDnsCnameRecord) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PrivateDnsCnameRecord.
func (mg *PrivateDnsCnameRecord) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PrivateDnsCnameRecord.
func (mg *PrivateDnsCnameRecord) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PrivateDnsCnameRecord.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PrivateDnsCnameRecord) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PrivateDnsCnameRecord.
func (mg *PrivateDnsCnameRecord) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PrivateDnsCnameRecord.
func (mg *PrivateDnsCnameRecord) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PrivateDnsCnameRecord.
func (mg *PrivateDnsCnameRecord) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PrivateDnsCnameRecord.
func (mg *PrivateDnsCnameRecord) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PrivateDnsCnameRecord.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PrivateDnsCnameRecord) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PrivateDnsCnameRecord.
func (mg *PrivateDnsCnameRecord) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PrivateDnsMxRecord.
func (mg *PrivateDnsMxRecord) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PrivateDnsMxRecord.
func (mg *PrivateDnsMxRecord) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PrivateDnsMxRecord.
func (mg *PrivateDnsMxRecord) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PrivateDnsMxRecord.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PrivateDnsMxRecord) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PrivateDnsMxRecord.
func (mg *PrivateDnsMxRecord) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PrivateDnsMxRecord.
func (mg *PrivateDnsMxRecord) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PrivateDnsMxRecord.
func (mg *PrivateDnsMxRecord) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PrivateDnsMxRecord.
func (mg *PrivateDnsMxRecord) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PrivateDnsMxRecord.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PrivateDnsMxRecord) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PrivateDnsMxRecord.
func (mg *PrivateDnsMxRecord) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PrivateDnsPtrRecord.
func (mg *PrivateDnsPtrRecord) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PrivateDnsPtrRecord.
func (mg *PrivateDnsPtrRecord) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PrivateDnsPtrRecord.
func (mg *PrivateDnsPtrRecord) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PrivateDnsPtrRecord.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PrivateDnsPtrRecord) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PrivateDnsPtrRecord.
func (mg *PrivateDnsPtrRecord) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PrivateDnsPtrRecord.
func (mg *PrivateDnsPtrRecord) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PrivateDnsPtrRecord.
func (mg *PrivateDnsPtrRecord) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PrivateDnsPtrRecord.
func (mg *PrivateDnsPtrRecord) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PrivateDnsPtrRecord.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PrivateDnsPtrRecord) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PrivateDnsPtrRecord.
func (mg *PrivateDnsPtrRecord) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PrivateDnsSrvRecord.
func (mg *PrivateDnsSrvRecord) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PrivateDnsSrvRecord.
func (mg *PrivateDnsSrvRecord) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PrivateDnsSrvRecord.
func (mg *PrivateDnsSrvRecord) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PrivateDnsSrvRecord.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PrivateDnsSrvRecord) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PrivateDnsSrvRecord.
func (mg *PrivateDnsSrvRecord) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PrivateDnsSrvRecord.
func (mg *PrivateDnsSrvRecord) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PrivateDnsSrvRecord.
func (mg *PrivateDnsSrvRecord) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PrivateDnsSrvRecord.
func (mg *PrivateDnsSrvRecord) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PrivateDnsSrvRecord.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PrivateDnsSrvRecord) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PrivateDnsSrvRecord.
func (mg *PrivateDnsSrvRecord) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PrivateDnsTxtRecord.
func (mg *PrivateDnsTxtRecord) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PrivateDnsTxtRecord.
func (mg *PrivateDnsTxtRecord) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PrivateDnsTxtRecord.
func (mg *PrivateDnsTxtRecord) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PrivateDnsTxtRecord.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PrivateDnsTxtRecord) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PrivateDnsTxtRecord.
func (mg *PrivateDnsTxtRecord) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PrivateDnsTxtRecord.
func (mg *PrivateDnsTxtRecord) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PrivateDnsTxtRecord.
func (mg *PrivateDnsTxtRecord) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PrivateDnsTxtRecord.
func (mg *PrivateDnsTxtRecord) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PrivateDnsTxtRecord.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PrivateDnsTxtRecord) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PrivateDnsTxtRecord.
func (mg *PrivateDnsTxtRecord) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PrivateDnsZone.
func (mg *PrivateDnsZone) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PrivateDnsZone.
func (mg *PrivateDnsZone) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PrivateDnsZone.
func (mg *PrivateDnsZone) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PrivateDnsZone.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PrivateDnsZone) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PrivateDnsZone.
func (mg *PrivateDnsZone) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PrivateDnsZone.
func (mg *PrivateDnsZone) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PrivateDnsZone.
func (mg *PrivateDnsZone) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PrivateDnsZone.
func (mg *PrivateDnsZone) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PrivateDnsZone.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PrivateDnsZone) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PrivateDnsZone.
func (mg *PrivateDnsZone) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PrivateDnsZoneVirtualNetworkLink.
func (mg *PrivateDnsZoneVirtualNetworkLink) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PrivateDnsZoneVirtualNetworkLink.
func (mg *PrivateDnsZoneVirtualNetworkLink) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PrivateDnsZoneVirtualNetworkLink.
func (mg *PrivateDnsZoneVirtualNetworkLink) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PrivateDnsZoneVirtualNetworkLink.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PrivateDnsZoneVirtualNetworkLink) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PrivateDnsZoneVirtualNetworkLink.
func (mg *PrivateDnsZoneVirtualNetworkLink) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PrivateDnsZoneVirtualNetworkLink.
func (mg *PrivateDnsZoneVirtualNetworkLink) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PrivateDnsZoneVirtualNetworkLink.
func (mg *PrivateDnsZoneVirtualNetworkLink) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PrivateDnsZoneVirtualNetworkLink.
func (mg *PrivateDnsZoneVirtualNetworkLink) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PrivateDnsZoneVirtualNetworkLink.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PrivateDnsZoneVirtualNetworkLink) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PrivateDnsZoneVirtualNetworkLink.
func (mg *PrivateDnsZoneVirtualNetworkLink) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PrivateEndpoint.
func (mg *PrivateEndpoint) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PrivateEndpoint.
func (mg *PrivateEndpoint) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PrivateEndpoint.
func (mg *PrivateEndpoint) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PrivateEndpoint.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PrivateEndpoint) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PrivateEndpoint.
func (mg *PrivateEndpoint) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PrivateEndpoint.
func (mg *PrivateEndpoint) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PrivateEndpoint.
func (mg *PrivateEndpoint) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PrivateEndpoint.
func (mg *PrivateEndpoint) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PrivateEndpoint.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PrivateEndpoint) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PrivateEndpoint.
func (mg *PrivateEndpoint) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PrivateLinkService.
func (mg *PrivateLinkService) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PrivateLinkService.
func (mg *PrivateLinkService) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this PrivateLinkService.
func (mg *PrivateLinkService) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this PrivateLinkService.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *PrivateLinkService) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this PrivateLinkService.
func (mg *PrivateLinkService) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PrivateLinkService.
func (mg *PrivateLinkService) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PrivateLinkService.
func (mg *PrivateLinkService) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this PrivateLinkService.
func (mg *PrivateLinkService) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this PrivateLinkService.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *PrivateLinkService) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this PrivateLinkService.
func (mg *PrivateLinkService) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
