/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type SecurityCenterAutoProvisioningObservation struct {
}

type SecurityCenterAutoProvisioningParameters struct {

	// +kubebuilder:validation:Required
	AutoProvision string `json:"autoProvision" tf:"auto_provision"`
}

// SecurityCenterAutoProvisioningSpec defines the desired state of SecurityCenterAutoProvisioning
type SecurityCenterAutoProvisioningSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       SecurityCenterAutoProvisioningParameters `json:"forProvider"`
}

// SecurityCenterAutoProvisioningStatus defines the observed state of SecurityCenterAutoProvisioning.
type SecurityCenterAutoProvisioningStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          SecurityCenterAutoProvisioningObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SecurityCenterAutoProvisioning is the Schema for the SecurityCenterAutoProvisionings API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type SecurityCenterAutoProvisioning struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SecurityCenterAutoProvisioningSpec   `json:"spec"`
	Status            SecurityCenterAutoProvisioningStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SecurityCenterAutoProvisioningList contains a list of SecurityCenterAutoProvisionings
type SecurityCenterAutoProvisioningList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SecurityCenterAutoProvisioning `json:"items"`
}

// Repository type metadata.
var (
	SecurityCenterAutoProvisioningKind             = "SecurityCenterAutoProvisioning"
	SecurityCenterAutoProvisioningGroupKind        = schema.GroupKind{Group: Group, Kind: SecurityCenterAutoProvisioningKind}.String()
	SecurityCenterAutoProvisioningKindAPIVersion   = SecurityCenterAutoProvisioningKind + "." + GroupVersion.String()
	SecurityCenterAutoProvisioningGroupVersionKind = GroupVersion.WithKind(SecurityCenterAutoProvisioningKind)
)

func init() {
	SchemeBuilder.Register(&SecurityCenterAutoProvisioning{}, &SecurityCenterAutoProvisioningList{})
}
