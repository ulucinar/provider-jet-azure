/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this DigitalTwinsEndpointEventgrid.
func (mg *DigitalTwinsEndpointEventgrid) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DigitalTwinsEndpointEventgrid.
func (mg *DigitalTwinsEndpointEventgrid) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this DigitalTwinsEndpointEventgrid.
func (mg *DigitalTwinsEndpointEventgrid) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this DigitalTwinsEndpointEventgrid.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *DigitalTwinsEndpointEventgrid) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this DigitalTwinsEndpointEventgrid.
func (mg *DigitalTwinsEndpointEventgrid) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DigitalTwinsEndpointEventgrid.
func (mg *DigitalTwinsEndpointEventgrid) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DigitalTwinsEndpointEventgrid.
func (mg *DigitalTwinsEndpointEventgrid) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this DigitalTwinsEndpointEventgrid.
func (mg *DigitalTwinsEndpointEventgrid) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this DigitalTwinsEndpointEventgrid.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *DigitalTwinsEndpointEventgrid) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this DigitalTwinsEndpointEventgrid.
func (mg *DigitalTwinsEndpointEventgrid) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DigitalTwinsEndpointEventhub.
func (mg *DigitalTwinsEndpointEventhub) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DigitalTwinsEndpointEventhub.
func (mg *DigitalTwinsEndpointEventhub) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this DigitalTwinsEndpointEventhub.
func (mg *DigitalTwinsEndpointEventhub) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this DigitalTwinsEndpointEventhub.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *DigitalTwinsEndpointEventhub) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this DigitalTwinsEndpointEventhub.
func (mg *DigitalTwinsEndpointEventhub) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DigitalTwinsEndpointEventhub.
func (mg *DigitalTwinsEndpointEventhub) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DigitalTwinsEndpointEventhub.
func (mg *DigitalTwinsEndpointEventhub) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this DigitalTwinsEndpointEventhub.
func (mg *DigitalTwinsEndpointEventhub) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this DigitalTwinsEndpointEventhub.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *DigitalTwinsEndpointEventhub) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this DigitalTwinsEndpointEventhub.
func (mg *DigitalTwinsEndpointEventhub) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DigitalTwinsEndpointServicebus.
func (mg *DigitalTwinsEndpointServicebus) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DigitalTwinsEndpointServicebus.
func (mg *DigitalTwinsEndpointServicebus) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this DigitalTwinsEndpointServicebus.
func (mg *DigitalTwinsEndpointServicebus) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this DigitalTwinsEndpointServicebus.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *DigitalTwinsEndpointServicebus) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this DigitalTwinsEndpointServicebus.
func (mg *DigitalTwinsEndpointServicebus) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DigitalTwinsEndpointServicebus.
func (mg *DigitalTwinsEndpointServicebus) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DigitalTwinsEndpointServicebus.
func (mg *DigitalTwinsEndpointServicebus) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this DigitalTwinsEndpointServicebus.
func (mg *DigitalTwinsEndpointServicebus) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this DigitalTwinsEndpointServicebus.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *DigitalTwinsEndpointServicebus) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this DigitalTwinsEndpointServicebus.
func (mg *DigitalTwinsEndpointServicebus) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DigitalTwinsInstance.
func (mg *DigitalTwinsInstance) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DigitalTwinsInstance.
func (mg *DigitalTwinsInstance) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetProviderConfigReference of this DigitalTwinsInstance.
func (mg *DigitalTwinsInstance) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

/*
GetProviderReference of this DigitalTwinsInstance.
Deprecated: Use GetProviderConfigReference.
*/
func (mg *DigitalTwinsInstance) GetProviderReference() *xpv1.Reference {
	return mg.Spec.ProviderReference
}

// GetWriteConnectionSecretToReference of this DigitalTwinsInstance.
func (mg *DigitalTwinsInstance) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DigitalTwinsInstance.
func (mg *DigitalTwinsInstance) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DigitalTwinsInstance.
func (mg *DigitalTwinsInstance) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetProviderConfigReference of this DigitalTwinsInstance.
func (mg *DigitalTwinsInstance) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

/*
SetProviderReference of this DigitalTwinsInstance.
Deprecated: Use SetProviderConfigReference.
*/
func (mg *DigitalTwinsInstance) SetProviderReference(r *xpv1.Reference) {
	mg.Spec.ProviderReference = r
}

// SetWriteConnectionSecretToReference of this DigitalTwinsInstance.
func (mg *DigitalTwinsInstance) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
