/*
Copyright 2020 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

type ServicebusNamespaceDisasterRecoveryConfigObservation struct {
	DefaultPrimaryKey string `json:"defaultPrimaryKey,omitempty" tf:"default_primary_key"`

	DefaultSecondaryKey string `json:"defaultSecondaryKey,omitempty" tf:"default_secondary_key"`

	PrimaryConnectionStringAlias string `json:"primaryConnectionStringAlias,omitempty" tf:"primary_connection_string_alias"`

	SecondaryConnectionStringAlias string `json:"secondaryConnectionStringAlias,omitempty" tf:"secondary_connection_string_alias"`
}

type ServicebusNamespaceDisasterRecoveryConfigParameters struct {

	// +kubebuilder:validation:Required
	Name string `json:"name" tf:"name"`

	// +kubebuilder:validation:Required
	PartnerNamespaceID string `json:"partnerNamespaceId" tf:"partner_namespace_id"`

	// +kubebuilder:validation:Required
	PrimaryNamespaceID string `json:"primaryNamespaceId" tf:"primary_namespace_id"`
}

// ServicebusNamespaceDisasterRecoveryConfigSpec defines the desired state of ServicebusNamespaceDisasterRecoveryConfig
type ServicebusNamespaceDisasterRecoveryConfigSpec struct {
	xpv1.ResourceSpec `json:",inline"`
	ForProvider       ServicebusNamespaceDisasterRecoveryConfigParameters `json:"forProvider"`
}

// ServicebusNamespaceDisasterRecoveryConfigStatus defines the observed state of ServicebusNamespaceDisasterRecoveryConfig.
type ServicebusNamespaceDisasterRecoveryConfigStatus struct {
	xpv1.ResourceStatus `json:",inline"`
	AtProvider          ServicebusNamespaceDisasterRecoveryConfigObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ServicebusNamespaceDisasterRecoveryConfig is the Schema for the ServicebusNamespaceDisasterRecoveryConfigs API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azure}
type ServicebusNamespaceDisasterRecoveryConfig struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServicebusNamespaceDisasterRecoveryConfigSpec   `json:"spec"`
	Status            ServicebusNamespaceDisasterRecoveryConfigStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServicebusNamespaceDisasterRecoveryConfigList contains a list of ServicebusNamespaceDisasterRecoveryConfigs
type ServicebusNamespaceDisasterRecoveryConfigList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServicebusNamespaceDisasterRecoveryConfig `json:"items"`
}

// Repository type metadata.
var (
	ServicebusNamespaceDisasterRecoveryConfigKind             = "ServicebusNamespaceDisasterRecoveryConfig"
	ServicebusNamespaceDisasterRecoveryConfigGroupKind        = schema.GroupKind{Group: Group, Kind: ServicebusNamespaceDisasterRecoveryConfigKind}.String()
	ServicebusNamespaceDisasterRecoveryConfigKindAPIVersion   = ServicebusNamespaceDisasterRecoveryConfigKind + "." + GroupVersion.String()
	ServicebusNamespaceDisasterRecoveryConfigGroupVersionKind = GroupVersion.WithKind(ServicebusNamespaceDisasterRecoveryConfigKind)
)

func init() {
	SchemeBuilder.Register(&ServicebusNamespaceDisasterRecoveryConfig{}, &ServicebusNamespaceDisasterRecoveryConfigList{})
}
